{"version":3,"sources":["Command.js"],"names":["define","Evented","commands","Command","inherit","klassName","category","get","this","_options","checked","icon","label","name","_name","shortcut","shortCut","tooltip","execute","trigger","isEnabled","context","e","result","shouldShow","init","options"],"mappings":";;;;;;;AAAAA,QACC,wBACA,cACE,SAASC,EAAQC,GAEnB,IAAIC,EAAUF,EAAQG,SACrBC,UAAc,UAEdC,UAGCC,IAAM,WACL,OAAOC,KAAKC,SAASH,WAIvBI,SAGCH,IAAM,WACL,OAAOC,KAAKC,SAASC,UAIvBC,MAGCJ,IAAM,WACL,OAAOC,KAAKC,SAASE,OAIvBC,OAGCL,IAAM,WACL,OAAOC,KAAKC,SAASG,QAIvBC,MAGCN,IAAM,WACL,OAAOC,KAAKM,QAIdC,UAGCR,IAAM,WACL,OAAOC,KAAKC,SAASO,WAIvBC,SAGCV,IAAM,WACL,OAAOC,KAAKC,SAASQ,UAUvBC,QAAS,WACRV,KAAKW,QAAQ,aAGRC,UAAW,SAASC,GACnB,IAAIC,EAAId,KAAKW,QAAQ,oBACrB,OAAIG,IAAKA,EAAEC,QAOZC,WAAY,SAASH,GACpB,IAAIC,EAAId,KAAKW,QAAQ,kBACrB,OAAIG,IAAKA,EAAEC,QAMlBE,KAAS,SAASZ,EAAKa,GACtBlB,KAAKM,MAAQD,EACbL,KAAKC,SAAWiB,SAKlB,OAAOxB,EAASC,QAAUA","file":"../Command.js","sourcesContent":["define([\r\n\t\"skylark-langx/Evented\",\r\n\t\"./commands\"\r\n], function(Evented,commands){\r\n\r\n\tvar Command = Evented.inherit({\r\n\t\t\"klassName\" : \"Command\",\r\n\r\n\t\t\"category\" : {\r\n\t\t\t//desc : \"Group or category where the action belongs.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.category;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"checked\" : {\r\n\t\t\t//desc : \"Indicates whether client controls and menu items appear checked.\",\r\n\t\t\t//type : Boolean\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.checked;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"icon\" : {\r\n\t\t\t//desc : \"Represents the icon class of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.icon;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"label\" : {\r\n\t\t\t//desc : \"Represents the caption of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.label;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"name\" : {\r\n\t\t\t//desc : \"Represents the caption of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._name;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"shortcut\" : {\r\n\t\t\t//desc : \"Shortcut that triggers the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.shortCut;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"tooltip\" : {\r\n\t\t\t//desc : \"Stores the Help hint text.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.tooltip;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(){\r\n\t\t\tthis.trigger(\"executed\");\r\n\t\t},\r\n\r\n        isEnabled: function(context) {\r\n        \tvar e = this.trigger(\"checkingDisabled\");\r\n        \tif (e && e.result) {\r\n        \t\treturn false;\r\n        \t} else {\r\n            \treturn true;\r\n        \t}\r\n        },\r\n\r\n        shouldShow: function(context) {\r\n        \tvar e = this.trigger(\"checkingHidden\");\r\n        \tif (e && e.result) {\r\n        \t\treturn false;\r\n        \t} else {\r\n            \treturn true;\r\n        \t}\r\n\t\t},\r\n\t\t\"init\":\t function(name,options){\r\n\t\t\tthis._name = name;\r\n\t\t\tthis._options = options || {};\r\n\t\t}\r\n\t\r\n\t});\r\n\t\r\n\treturn commands.Command = Command;\r\n});\r\n\r\n\r\n"]}