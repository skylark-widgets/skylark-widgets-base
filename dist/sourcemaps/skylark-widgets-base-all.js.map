{"version":3,"sources":["skylark-widgets-base-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","Node","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","item","j","push","baseIndexOf","compact","first","items","n","slice","inArray","indexOf","makeArray","offset","startWith","concat","merge","second","l","arr","fn","map","elements","callback","key","values","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","_","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","parse","event","segs","join","Evented","on","events","selector","data","ctx","one","self","_hub","parsed","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listener","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","base","CommandManager","addAction","category","executeAction","removeAction","commands","Command","get","_options","checked","icon","label","_name","shortcut","shortCut","tooltip","execute","isEnabled","context","shouldShow","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","id","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","match","escapeRegExp","escapeChar","variable","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","rets","func","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","lowerFirst","charAt","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","main","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","dom","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","chkName","enhancePlaceContent","placing","neddsFlattern","append","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","removeAttr","removeAttribute","removeData","removeProp","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","head","getElementsByTagName","scriptsByUrl","scriptElementsById","rscriptType","scripter","preservedScriptAttributes","nonce","noModule","code","loadJavaScript","loadedCallback","errorCallback","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteJavaScript","scripts","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","VisualElement","_elm","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","domNode","shortcutName","extfn","shortcutter","args2","Widget","_elmx","_parse","_velm","_create","Map","_init","optionsAttr","options1","widgetClass","_refresh","_startup","updates","mapping","attributs","styles","addon","categoryName","addonName","_addons","addons","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName"],"mappings":"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","file":"../skylark-widgets-base-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-widgets-base/CommandManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar CommandManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.CommandManager = CommandManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Command',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./CommandManager\"\r\n], function(Evented,commands){\r\n\r\n\tvar Command = Evented.inherit({\r\n\t\t\"klassName\" : \"Command\",\r\n\r\n\t\t\"category\" : {\r\n\t\t\t//desc : \"Group or category where the action belongs.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.category;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"checked\" : {\r\n\t\t\t//desc : \"Indicates whether client controls and menu items appear checked.\",\r\n\t\t\t//type : Boolean\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.checked;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"icon\" : {\r\n\t\t\t//desc : \"Represents the icon class of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.icon;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"label\" : {\r\n\t\t\t//desc : \"Represents the caption of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.label;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"name\" : {\r\n\t\t\t//desc : \"Represents the caption of the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._name;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\"shortcut\" : {\r\n\t\t\t//desc : \"Shortcut that triggers the action.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.shortCut;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"tooltip\" : {\r\n\t\t\t//desc : \"Stores the Help hint text.\",\r\n\t\t\t//type : String\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._options.tooltip;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(){\r\n\t\t\tthis.trigger(\"executed\");\r\n\t\t},\r\n\r\n        isEnabled: function(context) {\r\n        \tvar e = this.trigger(\"checkingDisabled\");\r\n        \tif (e && e.result) {\r\n        \t\treturn false;\r\n        \t} else {\r\n            \treturn true;\r\n        \t}\r\n        },\r\n\r\n        shouldShow: function(context) {\r\n        \tvar e = this.trigger(\"checkingHidden\");\r\n        \tif (e && e.result) {\r\n        \t\treturn false;\r\n        \t} else {\r\n            \treturn true;\r\n        \t}\r\n\t\t},\r\n\t\t\"init\":\t function(name,options){\r\n\t\t\tthis._name = name;\r\n\t\t\tthis._options = options || {};\r\n\t\t}\r\n\t\r\n\t});\r\n\t\r\n\treturn commands.Command = Command;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\"\r\n],function(styler){\r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-data/main',[\r\n\t\"./data\"\r\n],function(data){\r\n\treturn data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n\t\"./eventer\"\r\n],function(eventer){\r\n\treturn eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n\t\"./geom\"\r\n],function(geom){\r\n\treturn geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\"\r\n],function(fx){\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\"\r\n],function(scripter){\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx,scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(null,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,geom,elmx,$,plugins,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n\tvar Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new Map()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(categoryName,addonName,setting) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      if (setting === undefined) {\r\n        return category[addonName] || null;      \r\n      } else {\r\n        category[addonName] = setting;\r\n        return this;\r\n      }\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n\treturn base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Command\",\r\n\t\"./CommandManager\",\r\n\t\"./Widget\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}