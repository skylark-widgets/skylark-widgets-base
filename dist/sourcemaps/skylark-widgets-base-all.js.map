{"version":3,"sources":["skylark-widgets-base-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","isForEach","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","proxy","context","TypeError","delegate","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","data","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","isDefaultPrevented","sourceMethod","Event","CustomEvent","[object Object]","super","events","Listener","listenTo","one","callbacks","listeningTo","on","listening","_listeningTo","listeningEvents","listeningEvent","listenToOnce","unlistenTo","eventName","off","parse","segs","Emitter","selector","ctx","self","_hub","parsed","emit","listeners","len","reCompact","isImmediatePropagationStopped","listener","listened","evtArr","_events","evts","liveEvents","_","trigger","Evented","collections","Collection","_clear","clear","count","c","it","iterator","hasNext","thisArg","next","toArray","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","get","strKey","silent","set","oldValue","updated","remove","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","ActionManager","addAction","category","executeAction","removeAction","ActiionManager","Action","tooltip","icon","shortcut","state","_state","checked","disabled","_init","execute","_execute","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","total","ArrayStore","queryEngine","query","queryObject","required","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","Infinity","matches","idProperty","id","getIdentity","put","Math","random","overwrite","add","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","around","after","newResults","signal","previous","advised","advise","Promise","always","handler","done","fail","catch","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","notified","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","rets","series","waterful","parseMilliSeconds","str","strs","number","trim","datetimes","createEvent","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","_lut","maths","DEG2RAD","PI","RAD2DEG","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","degToRad","degrees","MathUtils","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","console","warn","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","ltrim","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","changes","changing","_changing","_previousAttributes","current","prev","_pending","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","readyRE","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","addClass","re","getStyles","view","opener","hasClass","removeClass","styler","autocssfix","cssHooks","computedStyle","getPropertyValue","removeProperty","cssText","isInvisible","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","important","Dimension","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","_velm","_query","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","SingleUploader","selectors","startUploads","cancelUploads","_initFileHandlers","dzSelector","pzSelector","pkSelector","_addFile","http","getAbsoluteUrl","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","accepts","script","json","crossDomain","processData","traditional","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","serialize","scope","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","setRequestHeader","send","request","post","patch","del","defaultOptions","blobSlice","webkitSlice","mozSlice","Upload","_options","debug","maxConnections","maxChunkSize","fileName","loaded","onComplete","onCancel","onFailure","_queue","_params","_files","_xhrs","_loaded","_send","sendAll","_cancel","_dequeue","cancelAll","getName","getSize","fileSize","getLoaded","curUploadingSize","chunkSize","curLoadedSize","formParamName","formData","lengthComputable","getQueue","FileUpload","MultiUploader","uploadUrl","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","fileList","fileItem","nodata","_initEventHandler","_initUpoadHandler","_updateFileList","_addFiles","_onProgress","_onComplete","_onCancel","_onFailure","itemSelectors","_listElement","$fileItem","fileId","$files","$item","_getItemByFileId","percent","progressHTML","_formatSize","_updateFile","_filesInProgress","doneMsg","_addToList","_formatFileName","with_files_elements","without_files_elements","when_pending","when_running","when_done","item2","_validateFile","_isAllowedExtension","_error","code","messages","replacement","showMessage","ext","allowed","bytes","toFixed","Widget","_elmx","_parse","_create","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName"],"mappings":";;;;;;;u+BAAAA,OAAA,8BAAA,WACA,OAAA,SAAAC,EAAAC,EAAAC,GACA,iBAAAD,IACAA,EAAAA,EAAAE,MAAA,MAOA,IALA,IAAAC,EAAAH,EAAAG,OACAC,EAAAL,EACAM,EAAA,EACAC,EAAAN,EAAAK,KAEAA,EAAAF,GACAC,EAAAA,EAAAE,GAAAF,EAAAE,OACAA,EAAAN,EAAAK,KAGA,OAAAD,EAAAE,GAAAL,KAGAH,OAAA,uBACA,aACA,SAAAS,GACA,IAAAC,GACAC,OAAA,SAAAT,EAAAU,GACA,OAAAH,EAAAC,EAAAR,EAAAU,KAGA,OAAAF,IAGAV,OAAA,yBACA,QACA,SAAAU,GACA,OAAAA,IAEAV,OAAA,oBAAA,yBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,oBACA,SAAAM,GACA,OAAAA,IAGAN,OAAA,6BACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,qBAEAX,OAAA,6BACA,oBACA,SAAAU,GACA,IAIAI,EAJAC,EAAAC,MAAAC,QACAC,KAAAA,SAEAC,GACAL,KAGA,uEAAAV,MAAA,KAAAgB,QAAA,SAAAZ,GACAM,EAAA,WAAAN,EAAA,KAAAA,EAAAa,gBAGA,SAAAT,GACA,OAAA,MAAAA,EAAAU,OAAAV,GACAE,EAAAI,EAAAK,KAAAX,KAAA,WAKAK,EAAAF,GAAA,SAAAH,GACA,OAAAY,QAAAA,OAAAC,cAAAT,OApBA,SAAAU,EAAAd,GACA,IAAAJ,EACA,IAAAA,KAAAI,EACA,GAAA,OAAAA,EAAAJ,GACA,OAAA,EAGA,OAAA,EAiBA,SAAAmB,EAAAC,GACA,MAAA,YAAAT,EAAAS,GAKA,SAAAC,EAAAjB,GACA,OAAAA,GAAAA,EAAAkB,SA0BA,SAAAC,EAAAnB,GACA,MAAA,iBAAAA,EAGA,SAAAoB,EAAApB,GACA,IAAAO,SAAAP,EACA,MAAA,aAAAO,GAAA,WAAAA,KAAAP,EAQA,SAAAqB,EAAArB,GACA,MAAA,iBAAAA,EAGA,SAAAsB,EAAAtB,GACA,OAAAA,GAAAA,GAAAA,EAAAuB,OAoCA,OAAAzB,EAAAC,OAAA,eAEAM,QAAAA,EAEAmB,YAvJA,SAAAxB,GACA,OAAAqB,EAAArB,KAAAiB,EAAAjB,IAAA,iBAAAA,EAAAP,SAAAsB,EAAAf,IAwJAyB,UAxIA,SAAAzB,GACA,OAAA,IAAAA,IAAA,IAAAA,GAAA,qBAAAM,EAAAK,KAAAX,IAyIA0B,UArIA,SAAA1B,GACA,YAAA,IAAAA,GAsIA2B,WAnIA,SAAA3B,GACA,OAAA,MAAAA,GAAAA,EAAAkB,UAAAlB,EAAA4B,eAoIAC,UAhIA,SAAA7B,GACA,SAAAA,GAAA,IAAAA,EAAAkB,WAiIAY,QAAAhB,EAEAA,cAAAA,EAEAC,WAAAA,EAEAE,WAAAA,EAEAc,MAAA,SAAA/B,GACA,OAAA+B,MAAA/B,IAGAgC,OArFA,SAAAhC,GACA,OAAA,OAAAA,GAuFAmB,SAAAA,EAEAc,UAAAd,EAEAC,SAAAA,EAEAc,cAhFA,SAAAlC,GACA,OAAAoB,EAAApB,KAAAsB,EAAAtB,IAAAmC,OAAAC,eAAApC,IAAAmC,OAAAE,WAiFAhB,SAAAA,EAEAiB,aAxEA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,SAAAC,SAAA,KAAAD,SAAAE,SAIA,OAHAF,SAAAG,OACAJ,GAAA,IAAAC,SAAAG,MAEAL,EAAAM,WAAAL,KAoEAM,SAnDA,SAAA9B,GACA,MAAA,iBAAAA,GACA+B,aAAA/B,IAAAgC,eAAArC,KAAAK,IAAAiC,WAmDAC,YA/CA,SAAAlD,GACA,YAAA,IAAAA,GAgDAsB,SAAAA,EAEAf,KAAAA,MAIAnB,OAAA,4BACA,WACA,SAAA+D,GACA,OAAAA,IAEA/D,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,mBACA,uBACA,SAAAU,EAAAqD,GACA,IAAA/B,EAAA+B,EAAA/B,SACA0B,EAAAK,EAAAL,SAEAM,EAAA,EAAA,EAEAC,EAAA,uBACAC,EAAA,IAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAMAC,EAAAC,SAyBA,SAAAC,EAAA7C,GACA,IAAAA,EACA,OAAA,IAAAA,EAAAA,EAAA,EAGA,IADAA,EAAA8C,EAAA9C,MACAoC,GAAApC,KAAAoC,EAAA,CACA,IAAAW,EAAA/C,EAAA,GAAA,EAAA,EACA,OAAA+C,EAAAV,EAEA,OAAArC,GAAAA,EAAAA,EAAA,EAyDA,SAAA8C,EAAA9C,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,GAAA8B,EAAA9B,GACA,OAAAsC,EAEA,GAAAlC,EAAAJ,GAAA,CACA,IAAAgD,EAAA,mBAAAhD,EAAAiD,QAAAjD,EAAAiD,UAAAjD,EACAA,EAAAI,EAAA4C,GAAAA,EAAA,GAAAA,EAEA,GAAA,iBAAAhD,EACA,OAAA,IAAAA,EAAAA,GAAAA,EAEAA,EAAAA,EAAAkD,QAAAX,EAAA,IACA,IAAAY,EAAAV,EAAAW,KAAApD,GACA,OAAAmD,GAAAT,EAAAU,KAAApD,GACA2C,EAAA3C,EAAAqD,MAAA,GAAAF,EAAA,EAAA,GACAX,EAAAY,KAAApD,GAAAsC,GAAAtC,EAGA,OAAAlB,EAAAC,OAAA,iBACA8D,SAAAA,EACAC,SAAAA,EACAQ,UAtDA,SAAAtD,GACA,IAAAuD,EAAAV,EAAA7C,GACAwD,EAAAD,EAAA,EAEA,OAAAA,GAAAA,EAAAC,EAAAD,EAAAC,EAAAD,EAAA,OAqDAnF,OAAA,8BACA,aACA,SAAAqF,GACA,OAAAA,IAEArF,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,sBACA,2BACA,sBACA,yBACA,SAAAU,EAAAD,EAAAsD,EAAAsB,GACA,IA+BAC,EAAAC,EA/BAC,EAAAzC,OAAAE,UAAAuC,eACAP,EAAAjE,MAAAiC,UAAAgC,MACA5C,EAAA0B,EAAA1B,UACAV,EAAAoC,EAAApC,WACAK,EAAA+B,EAAA/B,SACAc,EAAAiB,EAAAjB,cACA7B,EAAA8C,EAAA9C,QACAmB,EAAA2B,EAAA3B,YACAH,EAAA8B,EAAA9B,SACAiD,EAAAG,EAAAH,UAuBA,IApBAO,EAAAC,EAoBAC,EAAA,oBAAAC,OAAAA,OAAA3C,UAAA,KA0GA,SAAA4C,EAAAjF,GACA,IAAAoB,EAAApB,GAAA,SACA,IAAAkF,KACA,IAAA,IAAAC,KAAAnF,EAAAkF,EAAAE,KAAAD,GACA,OAAAD,EA0DA,SAAAG,EAAArF,EAAAV,GACA,IAAAe,EAAAf,GACA,OAAA,MAAAU,GAAA4E,EAAAjE,KAAAX,EAAAV,GAGA,IADA,IAAAG,EAAAH,EAAAG,OACAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAwF,EAAA7F,EAAAK,GACA,GAAA,MAAAK,IAAA4E,EAAAjE,KAAAX,EAAAmF,GACA,OAAA,EAEAnF,EAAAA,EAAAmF,GAEA,QAAA1F,EAgEA,SAAA6F,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAP,KAAAK,EAIAE,QAAAC,IAAAJ,EAAAJ,KAKAM,GAAAvD,EAAAsD,EAAAL,KACAjD,EAAAqD,EAAAJ,MACAI,EAAAJ,OAKAG,EAAAC,EAAAJ,GAAAK,EAAAL,GAAAM,EAAAC,SACAC,IAAAH,EAAAL,KACAI,EAAAJ,GAAAK,EAAAL,KAGA,OAAAI,EAGA,SAAAK,EAAAC,GACA,IAAAC,EAAAzB,EAAA1D,KAAAoF,UAAA,GACAR,EAAAO,EAAAE,QACAP,GAAA,EAKA,OAJAhE,EAAAqE,EAAAA,EAAArG,OAAA,MACAgG,EAAAK,EAAAG,QAIAV,OAAAA,EACAW,QAAAJ,EACAL,KAAAA,GAIA,SAAAU,IACA,IAAAN,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA1F,QAAA,SAAAgF,GACAF,EAAAO,EAAAN,OAAAC,EAAAK,EAAAJ,MAAA,KAEAI,EAAAN,OAkFA,SAAAe,EAAAtG,GAIA,IAHA,IAAAkF,EAAAD,EAAAjF,GACAP,EAAAyF,EAAAzF,OACA6G,EAAAlG,MAAAX,GACAE,EAAA,EAAAA,EAAAF,EAAAE,IACA2G,EAAA3G,GAAAK,EAAAkF,EAAAvF,IAEA,OAAA2G,EA2BA,OApZA5B,EAAA,SAAA6B,EAAAC,EAAAC,EAAAC,GAGA,GAAAH,IAAAC,EAAA,OAAA,IAAAD,GAAA,EAAAA,GAAA,EAAAC,EAEA,GAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,EAEA,GAAAD,GAAAA,EAAA,OAAAC,GAAAA,EAEA,IAAAjG,SAAAgG,EACA,OAAA,aAAAhG,GAAA,WAAAA,GAAA,iBAAAiG,IACA7B,EAAA4B,EAAAC,EAAAC,EAAAC,IAIA/B,EAAA,SAAA4B,EAAAC,EAAAC,EAAAC,GAKA,IAAAC,EAAArG,SAAAK,KAAA4F,GACA,GAAAI,IAAArG,SAAAK,KAAA6F,GAAA,OAAA,EACA,OAAAG,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAAJ,GAAA,GAAAC,EACA,IAAA,kBAGA,OAAAD,IAAAA,GAAAC,IAAAA,EAEA,IAAAD,EAAA,GAAAA,GAAA,EAAAC,GAAAD,IAAAC,EACA,IAAA,gBACA,IAAA,mBAIA,OAAAD,IAAAC,EACA,IAAA,kBACA,OAAAzB,EAAAd,QAAAtD,KAAA4F,KAAAxB,EAAAd,QAAAtD,KAAA6F,GAGA,IAAAI,EAAA,mBAAAD,EACA,IAAAC,EAAA,CACA,GAAA,iBAAAL,GAAA,iBAAAC,EAAA,OAAA,EAGA,IAAAK,EAAAN,EAAA1F,YAAAiG,EAAAN,EAAA3F,YACA,GAAAgG,IAAAC,KAAA/F,EAAA8F,IAAAA,aAAAA,GACA9F,EAAA+F,IAAAA,aAAAA,IACA,gBAAAP,GAAA,gBAAAC,EACA,OAAA,EAQAC,EAAAA,MACAC,EAAAA,MAEA,IADA,IAAAjH,EAAAgH,EAAAhH,OACAA,KAGA,GAAAgH,EAAAhH,KAAA8G,EAAA,OAAAG,EAAAjH,KAAA+G,EAQA,GAJAC,EAAArB,KAAAmB,GACAG,EAAAtB,KAAAoB,GAGAI,EAAA,CAGA,IADAnH,EAAA8G,EAAA9G,UACA+G,EAAA/G,OAAA,OAAA,EAEA,KAAAA,KACA,IAAAiF,EAAA6B,EAAA9G,GAAA+G,EAAA/G,GAAAgH,EAAAC,GAAA,OAAA,MAEA,CAEA,IAAAvB,EAAAD,EAAA/C,OAAA+C,KAAAqB,GAGA,GAFA9G,EAAAyF,EAAAzF,OAEA0C,OAAA+C,KAAAsB,GAAA/G,SAAAA,EAAA,OAAA,EACA,KAAAA,KAGA,GADA0F,EAAAD,EAAAzF,QACAkG,IAAAa,EAAArB,KAAAT,EAAA6B,EAAApB,GAAAqB,EAAArB,GAAAsB,EAAAC,GAAA,OAAA,EAMA,OAFAD,EAAAR,MACAS,EAAAT,OACA,GAgTAnG,EAAAC,OAAA,iBACAkF,QAAAA,EAEAlF,OAAAF,EAEAkH,MA7BA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EACA,QAAAvB,IAAAqB,GAAA,OAAAA,EACAE,EAAAF,OACA,GAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,aACA,GAAA1G,EAAA2G,GAAA,CACAE,KACA,IAAA,IAAAvH,EAAA,EAAAA,EAAAqH,EAAAvH,OAAAE,IACAuH,EAAA9B,KAAA2B,EAAAC,EAAArH,UAEA,GAAAuC,EAAA8E,GAEA,IAAA,IAAA7B,KADA+B,KACAF,EACAE,EAAA/B,GAAA4B,EAAAC,EAAA7B,SAGA+B,EAAAF,EAGA,OAAAE,GAWApC,UAjbAD,EAibAI,EAjbAH,GAibA,EAhbA,SAAA9E,GACA,IAAAP,EAAAsG,UAAAtG,OAEA,GADAqF,IAAA9E,EAAAmC,OAAAnC,IACAP,EAAA,GAAA,MAAAO,EAAA,OAAAA,EACA,IAAA,IAAAmH,EAAA,EAAAA,EAAA1H,EAAA0H,IAIA,IAHA,IAAA3B,EAAAO,UAAAoB,GACAjC,EAAAL,EAAAW,GACA4B,EAAAlC,EAAAzF,OACAE,EAAA,EAAAA,EAAAyH,EAAAzH,IAAA,CACA,IAAAwF,EAAAD,EAAAvF,GACAmF,QAAA,IAAA9E,EAAAmF,KAAAnF,EAAAmF,GAAAK,EAAAL,IAGA,OAAAnF,IAqaAqH,KA9SA,SAAArH,EAAAsH,EAAAC,GACA,IAAA9H,EAAA0F,EAAAxF,EAAAqB,EAEA,GAAAhB,EAGA,QALAwH,KAGA/H,EAAAO,EAAAP,SAIA,IAAA0F,KAAAnF,EACA,GAAAA,EAAA4E,eAAAO,KACAnE,EAAAhB,EAAAmF,IACA,KAAAoC,EAAAD,EAAA3G,KAAAK,EAAAA,EAAAmE,GAAAmC,EAAA3G,KAAAK,EAAAmE,EAAAnE,KACA,WAMA,IAAArB,EAAA,EAAAA,EAAAF,IACAuB,EAAAhB,EAAAL,IACA,KAAA4H,EAAAD,EAAA3G,KAAAK,EAAAA,EAAArB,GAAA2H,EAAA3G,KAAAK,EAAArB,EAAAqB,KAFArB,KASA,OAAA0G,MAqRAoB,OAlRA,SAAAlC,GACA,IAAAE,EAAAI,EAAAxB,EAAA1D,KAAAoF,UAAA,GACA,kBAAAR,IACAE,EAAAF,EACAA,EAAAM,EAAAG,SAEA,GAAAH,EAAApG,SACAoG,GAAAN,GACAA,EAAAc,MAKA,OAHAR,EAAArF,QAAA,SAAAkH,GACAvB,EAAAZ,EAAAmC,EAAAjC,KAEAF,GAuQAF,IAAAA,EAEAsC,QAjMA,SAAApB,EAAAC,GACA,OAAA9B,EAAA6B,EAAAC,IAkMAoB,SAlNA,SAAAC,EAAA7G,EAAA8G,EAAAC,GACAF,EAAArG,EAAAqG,GAAAA,EAAAvB,EAAAuB,GACAC,EAAAA,IAAAC,EAAAzD,EAAAwD,GAAA,EAEA,IAAArI,EAAAoI,EAAApI,OACAqI,EAAA,IACAA,EAAAE,UAAAvI,EAAAqI,EAAA,IAEA,OAAAzG,EAAAwG,GACAC,GAAArI,GAAAoI,EAAAI,QAAAjH,EAAA8G,IAAA,IACArI,GAAAyI,YAAAL,EAAA7G,EAAA8G,IAAA,GA0MAK,QAhMA,SAAAvH,EAAAwH,GACA,IAAAlD,EAAAA,EAAAkD,GAAA3I,EAAAyF,EAAAzF,OACA,GAAA,MAAAmB,EAAA,OAAAnB,EAEA,IADA,IAAAO,EAAAmC,OAAAvB,GACAjB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAwF,EAAAD,EAAAvF,GACA,GAAAyI,EAAAjD,KAAAnF,EAAAmF,MAAAA,KAAAnF,GAAA,OAAA,EAEA,OAAA,GA0LAkF,KA1QA,SAAAlF,GACA,GAAAoB,EAAApB,GAAA,SACA,IAAAkF,KACA,IAAA,IAAAC,KAAAnF,EAAAqF,EAAArF,EAAAmF,IAAAD,EAAAE,KAAAD,GACA,OAAAD,GAwQAiB,MAAAA,EAEAkC,KAzIA,SAAArI,EAAAsI,EAAAC,GACA,IAAAvI,EACA,OAAA,KAGA,IADA,IAAAuE,EAAA4B,KAAAnG,GACAL,EAAA,EAAAA,EAAAoG,UAAAtG,OAAAE,IAAA,CACA,IAAA6I,EAAAzC,UAAApG,GACA6I,KAAAxI,UACAuE,EAAAiE,GAGA,OAAAjE,GAgIAkE,KA3HA,SAAAzI,EAAAsI,EAAAC,GACA,IAAAvI,EACA,OAAA,KAGA,IADA,IAAAuE,KACA5E,EAAA,EAAAA,EAAAoG,UAAAtG,OAAAE,IAAA,CACA,IAAA6I,EAAAzC,UAAApG,GACA6I,KAAAxI,IACAuE,EAAAiE,GAAAxI,EAAAwI,IAGA,OAAAjE,GAkHAmE,WA/GA,SAAAC,EAAAC,GACA,GAAAvI,EAAAsI,GAAA,CACA,IAAAE,EAAAF,EAAAV,QAAAW,IACA,GAAAC,GACAF,EAAAG,OAAAD,EAAA,QAEA,GAAA3G,EAAAyG,GACA,IAAA,IAAAxD,KAAAwD,EACA,GAAAA,EAAAxD,IAAAyD,EAAA,QACAD,EAAAxD,GACA,MAKA,OAAAkB,MAkGA9B,OA/FA,SAAAvE,EAAAV,EAAAyJ,GACA1I,EAAAf,KACAA,EAAAA,EAAAE,MAAA,MAEA,IAAAC,EAAAH,EAAAG,OACA,IAAAA,EACA,OAAAsB,EAAAgI,GAAAA,EAAApI,KAAAX,GAAA+I,EAEA,IAAA,IAAApJ,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAqJ,EAAA,MAAAhJ,OAAA,EAAAA,EAAAV,EAAAK,SACA,IAAAqJ,IACAA,EAAAD,EACApJ,EAAAF,GAEAO,EAAAe,EAAAiI,GAAAA,EAAArI,KAAAX,GAAAgJ,EAGA,OAAAhJ,GAgFAiJ,UA7EA,WACA,IAAApD,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAA1F,QAAA,SAAAgF,GACAF,EAAAO,EAAAN,OAAAC,EAAAK,EAAAJ,MAAA,KAEAI,EAAAN,QAyEAe,OAAAA,MAKAlH,OAAA,8BACA,aACA,SAAA8J,GACA,OAAAA,IAEA9J,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAA8J,GACA,OAAAA,IAEA9J,OAAA,+BACA,sBACA,sBACA,yBACA,SAAAU,EAAAqD,EAAA+F,GACA,IAAAC,EAAA/I,MAAAiC,UAAA8G,OACAC,EAAAhJ,MAAAiC,UAAA+G,KACA5H,EAAA2B,EAAA3B,YAYA,SAAA6H,EAAAC,EAAAC,EAAAzB,EAAA0B,GAIA,IAHA,IAAA/J,EAAA6J,EAAA7J,OACA0H,EAAAW,GAAA0B,EAAA,GAAA,GAEAA,EAAArC,MAAAA,EAAA1H,GACA,GAAA8J,EAAAD,EAAAnC,GAAAA,EAAAmC,GACA,OAAAnC,EAGA,OAAA,EAiCA,SAAAsC,EAAAzI,GACA,OAAAA,GAAAA,EAcA,SAAA0I,EAAAJ,GACA,GAAA9H,EAAA8H,GAAA,CAEA,IADA,IAAA/E,KACA5E,EAAA,EAAAA,EAAA2J,EAAA7J,OAAAE,IAAA,CACA,IAAAiJ,EAAAU,EAAA3J,GACA,GAAA6B,EAAAoH,GACA,IAAA,IAAAe,EAAA,EAAAA,EAAAf,EAAAnJ,OAAAkK,IACApF,EAAAa,KAAAwD,EAAAe,SAGApF,EAAAa,KAAAwD,GAGA,OAAArE,EAEA,OAAA+E,EAuGA,OAAAxJ,EAAAC,OAAA,gBACAsJ,cAAAA,EAEAnB,YA9JA,SAAAoB,EAAAtI,EAAA8G,GACA,GAAA9G,GAAAA,EACA,OAAAqI,EAAAC,EAAAG,EAAA3B,GAEA,IAAAX,EAAAW,EAAA,EACArI,EAAA6J,EAAA7J,OAEA,OAAA0H,EAAA1H,GACA,GAAA6J,EAAAnC,KAAAnG,EACA,OAAAmG,EAGA,OAAA,GAoJAyC,QArIA,SAAAN,GACA,OAAAH,EAAAxI,KAAA2I,EAAA,SAAAV,GACA,OAAA,MAAAA,KAqIAiB,MAAA,SAAAlB,EAAAmB,GACA,OAAAA,EACAnB,EAAAtE,MAAA,EAAAyF,GAEAnB,EAAA,IAIAQ,OAzIA,SAAAG,EAAAS,GACA,OAAAZ,EAAAxI,KAAA2I,EAAAS,IA0IAX,KArBA,SAAAE,EAAAS,GACA,OAAAX,EAAAzI,KAAA2I,EAAAS,IAsBAL,QAAAA,EAEAM,KAvHA,SAAAV,EAAAhC,GACA,IAAA2C,KAQA,OANAf,EAAA7B,KAAAiC,EAAA,SAAA3J,EAAAiJ,GACAtB,EAAAsB,EAAAjJ,IACAsK,EAAA7E,KAAAwD,KAIAqB,GAgHAC,QA7GA,SAAAtB,EAAAU,GACA,IAAAA,EACA,OAAA,EAEA,IAAA3J,EAEA,GAAA2J,EAAArB,QACA,OAAAqB,EAAArB,QAAAW,GAGAjJ,EAAA2J,EAAA7J,OACA,KAAAE,KACA,GAAA2J,EAAA3J,KAAAiJ,EACA,OAAAjJ,EAIA,OAAA,GA8FAwK,UA3FA,SAAAnK,EAAAoK,EAAAC,GACA,GAAA7I,EAAAxB,GACA,OAAAqK,OAAAC,OAAAlK,MAAAiC,UAAAgC,MAAA1D,KAAAX,EAAAoK,GAAA,IAIA,OAAApK,IAuFAuK,MA7DA,SAAAV,EAAAW,GACA,IAAApD,EAAAoD,EAAA/K,OACAE,EAAAkK,EAAApK,OACAkK,EAAA,EAEA,GAAA,iBAAAvC,EACA,KAAAuC,EAAAvC,EAAAuC,IACAE,EAAAlK,KAAA6K,EAAAb,QAGA,UAAAhE,IAAA6E,EAAAb,IACAE,EAAAlK,KAAA6K,EAAAb,KAMA,OAFAE,EAAApK,OAAAE,EAEAkK,GA8CArJ,QArFA,SAAAiK,EAAAC,GACA,GAAAD,EAAAjK,QAAA,OAAAiK,EAAAjK,QAAAkK,GACA,IAAA,IAAA/K,EAAA,EAAAA,EAAA8K,EAAAhL,OAAAE,IAAA+K,EAAAD,EAAA9K,GAAAA,IAqFAgL,IAlFA,SAAAC,EAAAtD,GACA,IAAAtG,EACArB,EAAAwF,EADAmB,KAEA,GAAA9E,EAAAoJ,GACA,IAAAjL,EAAA,EAAAA,EAAAiL,EAAAnL,OAAAE,IAEA,OADAqB,EAAAsG,EAAA3G,KAAAiK,EAAAjL,GAAAiL,EAAAjL,GAAAA,KACA2G,EAAAlB,KAAApE,QAGA,IAAAmE,KAAAyF,EAEA,OADA5J,EAAAsG,EAAA3G,KAAAiK,EAAAzF,GAAAyF,EAAAzF,GAAAA,KACAmB,EAAAlB,KAAApE,GAEA,OAAA0I,EAAApD,IAuEAuE,OA/CA,SAAAvB,EAAAhC,EAAAwD,GACA,OAAA1K,MAAAiC,UAAAwI,OAAAlK,KAAA2I,EAAAhC,EAAAwD,IAgDAC,KA7CA,SAAAzB,GACA,OAAAH,EAAAxI,KAAA2I,EAAA,SAAAV,EAAAC,GACA,OAAAS,EAAArB,QAAAW,IAAAC,SA+CAzJ,OAAA,6BACA,YACA,SAAA4L,GACA,OAAAA,IAEA5L,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,6BACA,sBACA,sBACA,wBACA,wBACA,SAAAU,EAAAqD,EAAA+F,EAAA8B,GACA,IAAAD,EAAAC,EAAAD,KACA1F,EAAA6D,EAAA7D,IACAc,EAAA+C,EAAA/C,MACA9F,EAAA8C,EAAA9C,QACAqB,EAAAyB,EAAAzB,UAuDA,IAsLAuJ,EAtLA,WAsGA,SAAAC,IACA,OAAA7E,KAAA8E,WACA9E,KAAA8E,WAAA/E,MAAAC,KAAAN,WACAM,KAAA+E,KACA/E,KAAA+E,KAAAhF,MAAAC,KAAAN,gBADA,EAKA,OAAA,SAAAkF,EAAAI,EAAAC,EAAAC,EAAAC,GACAnL,EAAAiL,KACAE,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEAA,EAAAA,GAAAnJ,OAEAT,EAAA6J,KAAAlL,EAAAkL,KACAC,EAAAD,EACAA,GAAA,GAGA,IAAAE,EAAAH,EAEAC,IACAA,EAlFA,SAAAG,EAAAH,GACA,IAAAhH,KAmCA,OAjCAgH,EAAA/K,QAAA,SAAA2F,GACA,GAAAd,EAAAc,EAAA,cACA,MAAA,IAAAwF,MAAA,iBAGA,IADA,IAAAC,KACAzF,GACAyF,EAAAC,QAAA1F,GACAA,EAAAA,EAAA2F,WAEAvH,EAAAA,EAAA+F,OAAAsB,MAKArH,GAFAA,EAAAwG,EAAAxG,IAEA4E,OAAA,SAAAhD,GAEA,IADA,IAAA4F,EAAAL,EACAK,GAAA,CACA,GAAA5F,IAAA4F,EACA,OAAA,EAEA,GAAA1G,EAAA0G,EAAA,cAEA,IADA,IAAAC,EAAAD,EAAA,WACApM,EAAA,EAAAA,EAAAqM,EAAAvM,OAAAE,IACA,GAAAqM,EAAArM,KAAAwG,EACA,OAAA,EAIA4F,EAAAA,EAAAD,WAEA,OAAA,KAGArM,OAAA,GACA8E,EA6CA0H,CAAAR,EAAAF,IAGAA,IACAE,EA3CA,SAAAC,EAAAH,GAEA,IADA,IAAAW,EAAAR,EACA/L,EAAA,EAAAA,EAAA4L,EAAA9L,OAAAE,IAAA,CACA,IAAAwM,EAAA,IAAAC,SACAD,EAAA9J,UAAAF,OAAAkK,OAAAH,EAAA7J,WACA8J,EAAAG,UAAAJ,EACAC,EAAAL,WAAA,KACA3F,EAAAgG,EAAA9J,UAAAkJ,EAAA5L,GAAA0C,WACA8J,EAAA9J,UAAAkK,UAAAhB,EAAA5L,GACAuM,EAAAC,EAGA,OAAAD,EA+BAM,CAAAf,EAAAF,IAGA,IAAAkB,EAAApB,EAAAoB,WAAA,GACAf,EAAA,IAAAU,SACA,mBAAAK,EAAA,6KADA,GA4CA,OA/BAf,EAAArJ,UAAAF,OAAAkK,OAAAZ,EAAApJ,WAGAqJ,EAAArJ,UAAAxB,YAAA6K,EACAA,EAAAI,WAAAR,EAGAI,EAAAY,UAAAb,EAGAC,EAAAR,eACAQ,EAAAR,aAAAA,GAGAK,IACAG,EAAAgB,WAAAnB,GAGAG,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtB,EAAAG,GACA,OAtKA,SAAAE,EAAAL,EAAAG,GAEA,IAAAoB,EAAAlB,EAAArJ,UACAwK,EAAAnB,EAAAI,WAAAzJ,UACAyK,EAAAtB,GAAAA,EAAAsB,YACAtB,GAAAA,EAAAuB,UAEA,IAAA,IAAAnN,KAAAyL,EACA,GAAA,gBAAAzL,EAAA,CAKA,IAAAoJ,EAAAqC,EAAAzL,GACA,mBAAAyL,EAAAzL,GACAgN,EAAAhN,GAAAoJ,EAAAkC,cAAA4B,GAAA,mBAAAD,EAAAjN,GAkBAoJ,EAjBA,SAAApJ,EAAA8K,EAAAsC,GACA,OAAA,WACA,IAAAC,EAAA5G,KAAA6G,UAIA7G,KAAA6G,UAAAF,EAIA,IAAAG,EAAAzC,EAAAtE,MAAAC,KAAAN,WAIA,OAFAM,KAAA6G,UAAAD,EAEAE,GAdA,CAgBAvN,EAAAoJ,EAAA6D,EAAAjN,IAEAuD,EAAAjB,cAAA8G,IAAA,OAAAA,GAAAA,EAAA,IACA7G,OAAAiL,eAAAR,EAAAhN,EAAAoJ,GAEA4D,EAAAhN,GAAAoJ,EAGA,OAAA0C,EA8HA2B,CAAAhH,KAAAgF,EAAAG,KAGAE,EAAA4B,UACA5B,EAAA4B,QAAA,SAAAjC,EAAAE,EAAAC,GACA,OAAAP,EAAAI,EAAAhF,KAAAkF,EAAAC,KAIAE,EAAAiB,QAAAtB,EAAAG,GAEAE,GAIA6B,GAEA,OAAAzN,EAAAC,OAAA,cAAAkL,KAEA7L,OAAA,4BACA,WACA,SAAAoO,GACA,OAAAA,IAEApO,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,+BACA,oBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,qBAEAX,OAAA,6BACA,sBACA,sBACA,yBACA,SAAAU,EAAAqD,EAAA+F,GACA,IAAA/C,EAAA+C,EAAA/C,MACA9B,EAAAjE,MAAAiC,UAAAgC,MACAtD,EAAAoC,EAAApC,WACAM,EAAA8B,EAAA9B,SAcA,SAAAoM,EAAA/C,EAAAgD,GACA,IAAA7H,EAAA,KAAAE,WAAA1B,EAAA1D,KAAAoF,UAAA,GACA,GAAAhF,EAAA2J,GAAA,CAIA,OAHA,WACA,OAAAA,EAAAtE,MAAAsH,EAAA7H,EAAAA,EAAAyE,OAAAjG,EAAA1D,KAAAoF,YAAAA,YAGA,GAAA1E,EAAAqM,GACA,OAAA7H,GACAA,EAAAgG,QAAAnB,EAAAgD,GAAAhD,GACA+C,EAAArH,MAAA,KAAAP,IAEA4H,EAAA/C,EAAAgD,GAAAhD,GAGA,MAAA,IAAAiD,UAAA,qBAiBA,IAAAC,EAAA,WAEA,SAAAC,KACA,OAAA,SAAA7N,EAAAqL,GACAwC,EAAAxL,UAAArC,EACA,IAAAiN,EAAA,IAAAY,EAKA,OAJAA,EAAAxL,UAAA,KACAgJ,GACAlF,EAAA8G,EAAA5B,GAEA4B,GAVA,GAiBAa,GACAC,SAAA,kBACAC,YAAA,mBACAC,OAAA,oBAMAC,EAAA,OAKAC,GACAC,IAAA,IACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAC,EAAA,+BA0FA,OAAA7O,EAAAC,OAAA,eACA6O,KAAAnB,EAEAoB,SAnJA,SAAAnE,EAAAoE,GACA,IAAAC,EACA,OAAA,WACA,IAAArB,EAAArH,KAAAR,EAAAE,UAKAgJ,GAAAC,aAAAD,GACAA,EAAAE,WALA,WACAF,EAAA,KACArE,EAAAtE,MAAAsH,EAAA7H,IAGAiJ,KA4IAlB,SAAAA,EAEAsB,MAtLA,SAAAxE,GACAyE,sBACAA,sBAAAzE,GAEA0E,cAAA1E,GAEA,OAAArE,MAkLAgJ,OAnBA,SAAA9F,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAoE,UAAA,uBAEA,OAAA,YAAA9H,GACA,OAAA0D,EAAAnD,MAAAC,KAAAR,KAgBAyJ,KAjLA,aAmLA7B,MAAAA,EAEA8B,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGA1B,iBAAAA,EACA2B,SA/GA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EACAD,EAAA1G,EAAApE,YAAA8K,EAAA9B,GAGA,IAAAgC,EAAAC,SACAH,EAAA3B,QAAAC,GAAA1I,QACAoK,EAAA5B,aAAAE,GAAA1I,QACAoK,EAAA7B,UAAAG,GAAA1I,QACAwK,KAAA,KAAA,KAAA,KAGA7I,EAAA,EACA3B,EAAA,SACAkK,EAAAxL,QAAA4L,EAAA,SAAAG,EAAAhC,EAAAD,EAAAD,EAAA3D,GAcA,OAbA5E,GAAAkK,EAAArL,MAAA8C,EAAAiD,GACAlG,QAAAyK,EAAA,SAAAsB,GAAA,MAAA,KAAA9B,EAAA8B,KAEAhC,IACAzI,GAAA,cAAAyI,EAAA,kCAEAD,IACAxI,GAAA,cAAAwI,EAAA,wBAEAD,IACAvI,GAAA,OAAAuI,EAAA,YAEA5G,EAAAiD,EAAA6F,EAAAxQ,OACAwQ,IAEAzK,GAAA,OAGAoK,EAAAM,WAAA1K,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,gBAEA,IACAqK,EAAA,IAAAzD,SAAAwD,EAAAM,UAAA,MAAA,IAAA1K,GACA,MAAA2K,GAEA,MADAA,EAAA3K,OAAAA,EACA2K,EAGA,GAAAR,EACA,OAAAE,EAAAF,EAAAtJ,MAEA,IAAAoJ,EAAAhC,EAAA,SAAAkC,GACA,OAAAE,EAAAlP,KAAA0F,KAAAsJ,EAAAtJ,OACAA,MAGA+J,EAAAR,EAAAM,UAAA,MAGA,OAFAT,EAAAjK,OAAA,YAAA4K,EAAA,OAAA5K,EAAA,IAEAiK,OAyDArQ,OAAA,4BACA,WACA,SAAAiR,GACA,OAAAA,IAEAjR,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,8BACA,wBACA,sBACA,uBACA,SAAA8J,EAAAmH,EAAA7C,GACA,IAAA8C,GACAC,eAAA,qBACAC,yBAAA,gCACAC,gBAAA,wBAIA,SAAAC,EAAAC,EAAAnL,GAeA,OAdAA,GAAAmL,EAAAC,qBACApL,IACAA,EAAAmL,GAGAzH,EAAA7B,KAAAiJ,EAAA,SAAA1Q,EAAA2J,GACA,IAAAsH,EAAArL,EAAA5F,GACA+Q,EAAA/Q,GAAA,WAEA,OADAyG,KAAAkD,GAAA8G,EAAAd,WACAsB,GAAAA,EAAAzK,MAAAZ,EAAAO,YAEA4K,EAAApH,GAAA8G,EAAAb,eAGAmB,QAcAG,UAAAC,YACAC,YAAAzQ,EAAA8K,GACA4F,MAAA1Q,EAAA8K,GACAnC,EAAAD,UAAA5C,KAAAgF,GACAqF,EAAArK,OAOA,OAFAyK,EAAAJ,WAAAA,EAEAI,IAGA1R,OAAA,iCACA,sBACA,wBACA,uBACA,sBACA,WACA,WACA,SAAA+D,EAAA+F,EAAA8B,EAAAwC,EAAA0D,EAAAJ,GACA1Q,MAAAiC,UAAAgC,MAAA,IACAuF,EAAAoB,EAAApB,QAIAnI,GAHA0B,EAAAzB,UACAyB,EAAAjB,cACAiB,EAAApC,WACAoC,EAAA1B,WACAJ,EAAA8B,EAAA9B,SACAP,EAAAqC,EAAArC,cAKAqQ,GAJAjI,EAAA/C,MACA+C,EAAAD,UAGAuE,GAEA4D,SAAA,SAAApR,EAAA2Q,EAAArJ,EAAA+J,GACA,IAAArR,EACA,OAAAqG,KAQA,GALA5E,EAAA6F,KACA+J,EAAA/J,EACAA,EAAA,MAGAnE,EAAAjB,cAAAyO,GAAA,CAEA,IAAAW,EAAAX,EACA,IAAA,IAAA/Q,KAAA0R,EACAjL,KAAAkL,YAAAvR,EAAAJ,EAAA0R,EAAA1R,GAAAyR,GAEA,OAAAhL,KAGAiB,IACAA,EAAA,eAIAjG,EAAAiG,KACAA,EAAAjB,KAAAiB,IAGA+J,EACArR,EAAAqR,IAAAV,EAAArJ,EAAAjB,MAEArG,EAAAwR,GAAAb,EAAArJ,EAAAjB,MAOA,IAHA,IACAoL,EADAF,EAAAlL,KAAAqL,eAAArL,KAAAqL,iBAGA/R,EAAA,EAAAA,EAAA4R,EAAA9R,OAAAE,IACA,GAAA4R,EAAA5R,GAAAK,KAAAA,EAAA,CACAyR,EAAAF,EAAA5R,GACA,MAGA8R,GACAF,EAAAnM,KACAqM,GACAzR,IAAAA,EACAkR,YAIA,IAAAS,EAAAF,EAAAP,OACAU,EAAAD,EAAAhB,GAAAgB,EAAAhB,OAKA,OAJA,GAAAiB,EAAA3J,QAAAX,IACAsK,EAAAxM,KAAAkC,GAGAjB,MAGAwL,aAAA,SAAA7R,EAAA2Q,EAAArJ,GACA,OAAAjB,KAAA+K,SAAApR,EAAA2Q,EAAArJ,EAAA,IAGAwK,WAAA,SAAA9R,EAAA2Q,EAAArJ,GACA,IAAAiK,EAAAlL,KAAAqL,aACA,IAAAH,EACA,OAAAlL,KAGAhF,EAAAiG,KACAA,EAAAjB,KAAAiB,IAGA,IAAA,IAAA3H,EAAA,EAAAA,EAAA4R,EAAA9R,OAAAE,IAAA,CACA,IAAA8R,EAAAF,EAAA5R,GAEA,IAAAK,GAAAA,GAAAyR,EAAAzR,IAAA,CAIA,IAAA2R,EAAAF,EAAAP,OACA,IAAA,IAAAa,KAAAJ,EACA,IAAAhB,GAAAA,GAAAoB,EAAA,CAMA,IAFA,IAAAH,EAAAD,EAAAI,GAEApI,EAAA,EAAAA,EAAAiI,EAAAnS,OAAAkK,IACArC,GAAAA,GAAAsK,EAAAjS,KACA8R,EAAAzR,IAAAgS,IAAAD,EAAAH,EAAAjS,GAAA0G,MACAuL,EAAAjS,GAAA,MAIAiS,EAAAD,EAAAI,GAAAnI,EAAAgI,GAEA9Q,EAAA8Q,KACAD,EAAAI,GAAA,MAKAjR,EAAA6Q,KACAJ,EAAA5R,GAAA,OASA,OALA4R,EAAAlL,KAAAqL,aAAA9H,EAAA2H,GACAzQ,EAAAyQ,KACAlL,KAAAqL,aAAA,MAGArL,SAIA,OAAA6K,EAAAC,SAAAA,IAGA/R,OAAA,gCACA,sBACA,wBACA,uBACA,sBACA,WACA,UACA,cACA,SAAA+D,EAAA+F,EAAA8B,EAAAwC,EAAA0D,EAAAJ,EAAAK,GACA,IAAA9M,EAAAjE,MAAAiC,UAAAgC,MACAuF,EAAAoB,EAAApB,QACAlI,EAAAyB,EAAAzB,UACAQ,EAAAiB,EAAAjB,cACAnB,EAAAoC,EAAApC,WACAM,EAAA8B,EAAA9B,SAEA8E,GADAhD,EAAArC,cACAoI,EAAA/C,OACA+C,EAAAD,UAEA,SAAAgJ,EAAAtB,GACA,IAAAuB,GAAA,GAAAvB,GAAAnR,MAAA,KACA,OACAI,KAAAsS,EAAA,GACAxS,GAAAwS,EAAA7N,MAAA,GAAA2L,KAAA,MAIA,IAAAmC,EAAAhB,EAAA7D,SACAkE,GAAA,SAAAN,EAAAkB,EAAAzC,EAAArI,EAAA+K,EAAAhB,GACA,IAAAiB,EAAAjM,KACAkM,EAAAlM,KAAAkM,OAAAlM,KAAAkM,SAEA,GAAArQ,EAAAgP,GAKA,OAJAmB,EAAA/K,EACAD,KAAA6J,EAAA,SAAA3Q,EAAAmK,GACA4H,EAAAd,GAAAjR,EAAA6R,EAAAzC,EAAAjF,EAAA2H,EAAAhB,KAEAhL,KAgBA,GAbAhF,EAAA+Q,IAAArR,EAAAuG,KACA+K,EAAA/K,EACAA,EAAAqI,EACAA,EAAAyC,EACAA,OAAAzM,GAGA5E,EAAA4O,KACA0C,EAAA/K,EACAA,EAAAqI,EACAA,EAAA,OAGArI,EACA,MAAA,IAAAqE,MAAA,wBACA,IAAA5K,EAAAuG,GACA,MAAA,IAAAqE,MAAA,kCAsBA,OAnBAtK,EAAA6P,KACAA,EAAAA,EAAA1R,MAAA,OAGA0R,EAAA1Q,QAAA,SAAAmQ,GACA,IAAA6B,EAAAP,EAAAtB,GACA/Q,EAAA4S,EAAA5S,KACAF,EAAA8S,EAAA9S,IAEA6S,EAAA3S,KAAA2S,EAAA3S,QAAAwF,MACAsF,GAAApD,EACA8K,SAAAA,EACAzC,KAAAA,EACA0C,IAAAA,EACA3S,GAAAA,EACA2R,IAAAA,MAIAhL,MAGAgL,IAAA,SAAAH,EAAAkB,EAAAzC,EAAArI,EAAA+K,GACA,OAAAhM,KAAAmL,GAAAN,EAAAkB,EAAAzC,EAAArI,EAAA+K,EAAA,IAGAI,KAAA,SAAAtC,GACA,IAAA9J,KAAAkM,KACA,OAAAlM,KAGA,IAAAiM,EAAAjM,KAEAhF,EAAA8O,KACAA,EAAA,IAAAW,EAAAX,IAGAhO,OAAAiL,eAAA+C,EAAA,UACAnP,MAAAqF,OAGA,IAAAR,EAAAxB,EAAA1D,KAAAoF,UAAA,GA8CA,OA5CAF,EADAnE,EAAAmE,IACAsK,GAAA7F,OAAAzE,IAEAsK,IAEAA,EAAA5P,MAAA4P,EAAAvQ,KAAA,OAAAY,QAAA,SAAAuR,GACA,IAAAS,EAAAP,EAAAF,GACAnS,EAAA4S,EAAA5S,KACAF,EAAA8S,EAAA9S,GAEAgT,EAAAJ,EAAAC,KAAA3S,GACA,GAAA8S,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAAjT,OACAmT,GAAA,EAEAjT,EAAA,EAAAA,EAAAgT,EAAAhT,IAAA,CACA,GAAAwQ,EAAA0C,+BAAA1C,EAAA0C,gCACA,OAAAxM,KAEA,IAAAyM,EAAAJ,EAAA/S,KACAD,GAAAoT,EAAApT,IAAAoT,EAAApT,GAAAmD,WAAAnD,MAGAyQ,EAAAR,KACAmD,EAAAnD,OACAQ,EAAAR,KAAAxJ,KAAA2M,EAAAnD,KAAAQ,EAAAR,OAGAQ,EAAAR,KAAAmD,EAAAnD,MAAA,KAEAmD,EAAApI,GAAAtE,MAAA0M,EAAAT,IAAAxM,GACAiN,EAAAzB,MACAqB,EAAA/S,GAAA,KACAiT,GAAA,IAIAA,IACAN,EAAAC,KAAAR,GAAAnI,EAAA8I,OAIArM,MAGA0M,SAAA,SAAApC,GACA,IAAAqC,GAAA3M,KAAAkM,OAAAlM,KAAA4M,aAAAtC,OACA,OAAAqC,EAAAvT,OAAA,GAGAuS,IAAA,SAAAd,EAAA5J,GACA,IAAAiL,EAAAlM,KAAAkM,OAAAlM,KAAAkM,SAuCA,OAtCAlR,EAAA6P,KACAA,EAAAA,EAAA1R,MAAA,OAGA0R,EAAA1Q,QAAA,SAAAmQ,GACA,IAAA6B,EAAAP,EAAAtB,GACA/Q,EAAA4S,EAAA5S,KACAF,EAAA8S,EAAA9S,GAEAwT,EAAAX,EAAA3S,GAEA,GAAAsT,EAAA,CACA,IAAAC,KAEA,GAAA7L,GAAA5H,EACA,IAAA,IAAAC,EAAA,EAAAgT,EAAAO,EAAAzT,OAAAE,EAAAgT,EAAAhT,IAEA2H,GAAA4L,EAAAvT,GAAA+K,KAAApD,GAAA4L,EAAAvT,GAAA+K,GAAA0I,IAAA9L,EACA6L,EAAA/N,KAAA8N,EAAAvT,KAIAD,GAAAwT,EAAAvT,GAAAD,IAAA,GAAAwT,EAAAvT,GAAAD,GAAAuI,QAAAvI,IACAyT,EAAA/N,KAAA8N,EAAAvT,IAMAwT,EAAA1T,OACA8S,EAAA3S,GAAAuT,SAEAZ,EAAA3S,MAMAyG,MAEAgN,QAAA,WACA,OAAAhN,KAAAoM,KAAArM,MAAAC,KAAAN,cAKA,OAAAmL,EAAAiB,QAAAA,IAGA/S,OAAA,yBACA,gCACA,SAAA+S,GACA,OAAAA,IAEA/S,OAAA,yBACA,aACA,SAAA+S,GACA,OAAAA,IAEA/S,OAAA,uCACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,yBAEAX,OAAA,sCACA,wBACA,iBACA,SAAAkU,EAAAC,GAEA,IAAAC,EAAAD,EAAAC,WAAAF,EAAAhG,SAEAb,UAAA,aAEAgH,OAAA,WACA,MAAA,IAAA9H,MAAA,sBAGA+H,MAAA,WASA,OAFArN,KAAAoN,SACApN,KAAAgN,QAAA,iBACAhN,MAOAsN,MAAA,WAGA,IAFA,IAAAC,EAAA,EACAC,EAAAxN,KAAAyN,YACAD,EAAAE,WACAH,IAEA,OAAAA,GAGApT,QAAA,SAAAuJ,EAAAiK,GAgBA,IADA,IAAAH,EAAAxN,KAAAyN,WACAD,EAAAE,WAAA,CACA,IAAAnL,EAAAiL,EAAAI,OACAlK,EAAApJ,KAAAqT,GAAApL,EAAAA,GAEA,OAAAvC,MAIAyN,SAAA,WACA,MAAA,IAAAnI,MAAA,sBAGAuI,QAAA,WASA,IAFA,IAAAvL,KACAkL,EAAAxN,KAAAyN,YACAD,EAAAE,WACApL,EAAAvD,KAAAyO,EAAAI,QAEA,OAAAtL,KAIA,OAAA6K,IAIApU,OAAA,+BACA,gBACA,gBACA,SAAAmU,EAAAC,GAEA,IAAAW,EAAAZ,EAAAY,IAAAX,EAAAlG,SAEAb,UAAA,MAEA2H,eAAA,WACA,OAAA/N,KAAAgO,QAGAZ,OAAA,WACApN,KAAAgO,WAGAC,iBAAA,SAAAC,EAAAjN,GACA,IAAAqB,EAAAtC,KAAA+N,iBACA,OAAAzL,EAAAQ,OAAA,SAAAhE,GACA,QAAAA,EAAA8K,MAAAsE,KACAjN,GAAAA,EAAAnC,IACA,MAOAqP,IAAA,SAAAC,EAAAC,GAgBA,GAAA,iBAAA,EACA,KAAA,0BAOA,IAAA/L,EAAAtC,KAAA+N,iBACA,OAAAzL,EAAA8L,IAGAX,SAAA,WACA,IAAAnU,EAAA,EACA,OACAoU,QAAA,WACA,OAAApU,EAAA0G,KAAAgO,OAAA5U,QAEAwU,KAAA,WACA,IAAA9O,EAAAkB,KAAAgO,OAAA1U,KACA,OAAA0G,KAAAgO,OAAAlP,GAAAA,MAKAwP,IAAA,SAAAF,EAAAzT,GAeA,GAAA,iBAAA,EACA,KAAA,0BASA,IAAA2H,EAAAtC,KAAA+N,kBACA,GAAAzL,EAAAV,QAAAwM,IACA9L,EAAAvD,KAAAqP,GAEA,IAAAG,EAAAjM,EAAA8L,GACA,GAAAG,IAAA5T,EAAA,CACA2H,EAAA8L,GAAAzT,EACA,IAAA6T,KACAA,EAAAJ,IACA7U,KAAA6U,EACAzT,MAAAA,EACA4T,SAAAA,GAEAvO,KAAAgN,QAAA,WACA1D,KAAAkF,IAGA,OAAAxO,MAIAyO,OAAA,SAAAL,GAWA,GAAA,iBAAA,EACA,KAAA,0BAEA,IAAA9L,EAAAtC,KAAA+N,iBACAvL,EAAAF,EAAAV,QAAAwM,GACA5L,GAAA,WACAF,EAAA8L,UACA9L,EAAAE,KAIAkM,aAAA,SAAAR,EAAAjN,GAeA,IAAAqB,KACA2J,EAAAjM,KAMA,OALAA,KAAAiO,iBAAAC,EAAA,SAAApP,GACA,IAAAyD,EAAA0J,EAAAkC,IAAArP,GACAmC,GAAAA,EAAAsB,GACAD,EAAAvD,KAAAwD,KAEAD,GAGAqM,eAAA,SAAAT,GAWA,IAAAjC,EAAAjM,KACAA,KAAAiO,iBAAAC,EAAA,SAAApP,GACAmN,EAAAwC,OAAA3P,MAIA8P,QAAA,WASA,IAFA,IAAAtM,EAAAtC,KAAA+N,iBAEAzU,EAAA,EAAAA,EAAAgJ,EAAAlJ,OAAAE,IAAA,CACA,IAAAwF,EAAAwD,EAAAhJ,GACAuV,MAAA/P,GAAAwD,EAAAxD,GAEA,OAAA+P,OAGA5U,SAAA,SAAA6U,GAYA,IAAAxM,EAAAtC,KAAA+N,iBAEA,OAAAzL,EAAAqH,KAAAmF,GAAA,MAGA/J,KAAA,SAAAuE,GACA,IAAAhH,EAAAtC,KAAAgO,UACA,IAAA,IAAAzU,KAAA+P,EACAhH,EAAAvD,KAAAxF,GACA+I,EAAA/I,GAAA+P,EAAA/P,MAKA,OAAAuU,IAIA/U,OAAA,mCACA,gBACA,SACA,SAAAmU,EAAA6B,GAEA,IAAAC,EAAA9B,EAAA8B,QAAAD,EAAA9H,YAGA,OAAA+H,IAEAjW,OAAA,sCACA,wBACA,UACA,SAAAkU,EAAAgC,GAEA,IAAAC,EAAAjC,EAAAhG,SACAb,UAAA,UAGA+I,UAAA,SAAAC,EAAA7V,EAAA8K,EAAAc,KAIAkK,cAAA,aAIAC,aAAA,SAAAF,EAAA7V,OAMA,OAAA0V,EAAAC,cAAAA,IAKAnW,OAAA,+BACA,wBACA,wBACA,kCACA,SACA,mBACA,SAAA8J,EAAAoK,EAAA+B,EAAAC,EAAAM,GAEA,IAAAC,EAAAvC,EAAAhG,SACAb,UAAA,SAEA7M,KAAA,GAEA6V,SAAA,GAEA/F,KAAA,GAEAoG,QAAA,GAEAC,KAAA,GAEAC,SAAA,GAEAC,OACAzB,IAAA,WACA,OAAAnO,KAAA6P,SAAA7P,KAAA6P,OAAA,IAAAb,GACAc,SAAA,EACAC,UAAA,OAKAjL,WAAA,SAAAK,GACAA,GACAtC,EAAA/C,MAAAE,KAAAmF,IAIA6K,MAAA,aASAC,QAAA,SAAAxQ,GACAO,KAAAkQ,UACAlQ,KAAAkQ,SAAAzQ,GAEAO,KAAAgN,QAAA,YACAvN,OAAAA,OAMA,OAAAwP,EAAAO,OAAAA,IAKAzW,OAAA,wBACA,wBACA,SAAA4L,GACA,OAAAA,IAEA5L,OAAA,uBACA,uBACA,SAAAoO,GACA,OAAAA,IAEApO,OAAA,4BACA,WACA,SAAAoO,GACA,IA4JAgJ,EAAA,SAAAC,GAuBA,IAAAA,EACA,OAAAA,EAGA,IAAAC,IAAAD,EAAAE,KAKA,SAAAC,EAAAC,GAGAJ,EAAAI,GAAA,WACA,IAAAhR,EAAAE,UACAxB,EAAAuS,SAAAC,KAAAN,EAAA,SAAAA,GAEA,OAAAD,EAAApW,MAAAiC,UAAAwU,GAAAzQ,MAAAqQ,EAAA5Q,MAIA,GAAA,YAAAgR,GAAAH,EACA,OAAAnS,GAaA,OA5BAmS,IACAD,EAAAtU,OAAAyL,SAAA6I,IAmBAG,EAAA,WACAA,EAAA,UACAA,EAAA,OACA,MAAAH,EAAAO,QACAP,EAAAO,MAAAF,SAAAC,KAAAN,EAAA,SAAAA,GACA,OAAAA,EAAAhX,UAGAgX,GAGAQ,EAAAzJ,GACAf,UAAA,aAEAyK,YA3NA,SAAAC,EAAA3L,GA6CA,cAAA2L,GACA,QACA,MAAA,IAAAxL,MAAA,+BAAAwL,GACA,IAAA,SAAA,IAAA,YACA,IAAAC,EAAAD,EACAA,EAAA,SAAAvW,GACA,IAAA,IAAAuE,KAAAiS,EAAA,CACA,IAAAC,EAAAD,EAAAjS,GACA,GAAAkS,GAAAA,EAAAjT,MAEA,IAAAiT,EAAAjT,KAAAxD,EAAAuE,GAAAvE,GACA,OAAA,OAEA,GAAAyW,GAAAzW,EAAAuE,GACA,OAAA,EAGA,OAAA,GAEA,MACA,IAAA,SAEA,IAAAkB,KAAA8Q,GACA,MAAA,IAAAxL,MAAA,sBAAAwL,EAAA,uBAEAA,EAAA9Q,KAAA8Q,GAEA,IAAA,YAkDA,SAAAb,EAAAhN,GAEA,IAAAmN,EAhDA,SAAAhM,EAAAnD,EAAAgQ,GAyBA,IAAAtW,EAAArB,EAAA,EAAAyH,EAAAqD,GAAAA,EAAAhL,QAAA,EAAAwK,KACA7C,GAAA,iBAAAqD,IAAAA,EAAAA,EAAAjL,MAAA,KACA,iBAAA8H,IAAAA,EAAAiQ,MAAAjQ,IAAAkQ,QAAAlQ,IACA,GAAAgQ,EACA,KAAA3X,EAAAyH,IAAAzH,EACAqB,EAAAyJ,EAAA9K,GACA2H,EAAA3G,KAAA2W,EAAAtW,EAAArB,EAAA8K,IACAR,EAAA7E,KAAApE,QAIA,KAAArB,EAAAyH,IAAAzH,EACAqB,EAAAyJ,EAAA9K,GACA2H,EAAAtG,EAAArB,EAAA8K,IACAR,EAAA7E,KAAApE,GAIA,OAAAiJ,EAKAd,CAAAG,EAAA6N,GAEAM,EAAAjM,GAAAA,EAAAkM,KAmBA,GAlBAD,GACAhB,EAAAiB,KAAA,mBAAAD,EAAAA,EAAA,SAAAlR,EAAAC,GACA,IAAA,IAAAkR,EAAA/X,EAAA,EAAA+X,EAAAD,EAAA9X,GAAAA,IAAA,CACA,IAAAgY,EAAApR,EAAAmR,EAAAE,WACAC,EAAArR,EAAAkR,EAAAE,WAIA,GAFAD,EAAA,MAAAA,EAAAA,EAAA1T,UAAA0T,EACAE,EAAA,MAAAA,EAAAA,EAAA5T,UAAA4T,EACAF,GAAAE,EAGA,QAAAH,EAAAI,aAAA,MAAAH,GAAAA,EAAAE,IAAA,EAAA,EAGA,OAAA,IAIArM,IAAAA,EAAAuM,OAAAvM,EAAAmI,OAAA,CACA,IAAAqD,EAAAP,EAAAhX,QACAgX,EAAAA,EAAApS,MAAAmH,EAAAuM,OAAA,GAAAvM,EAAAuM,OAAA,IAAAvM,EAAAmI,OAAAqE,EAAAA,KACAhB,MAAAA,EAEA,OAAAP,EAGA,OADAH,EAAA2B,QAAAd,EACAb,GAoEA4B,WAAA,KAGA1D,IAAA,SAAA2D,GAOA,OAAA9R,KAAAsJ,KAAAtJ,KAAAc,MAAAgR,KAGAC,YAAA,SAAAxX,GACA,OAAAA,EAAAyF,KAAA6R,aAGAG,IAAA,SAAAzX,EAAA4K,GACA,IAAAmE,EAAAtJ,KAAAsJ,KACAxI,EAAAd,KAAAc,MACA+Q,EAAA7R,KAAA6R,WACAC,EAAAvX,EAAAsX,GAAA1M,GAAA,OAAAA,EAAAA,EAAA2M,GAAAD,KAAAtX,EAAAA,EAAAsX,GAAAI,KAAAC,SACA,GAAAJ,KAAAhR,EAAA,CAEA,GAAAqE,IAAA,IAAAA,EAAAgN,UACA,MAAA,IAAA7M,MAAA,yBAGAgE,EAAAxI,EAAAgR,IAAAvX,OAGAuG,EAAAgR,GAAAxI,EAAAvK,KAAAxE,GAAA,EAEA,OAAAuX,GAGAM,IAAA,SAAA7X,EAAA4K,GAGA,OAFAA,EAAAA,OAAAgN,WAAA,EAEAnS,KAAAgS,IAAAzX,EAAA4K,IAGAsJ,OAAA,SAAAqD,GAOA,IAAAhR,EAAAd,KAAAc,MACAwI,EAAAtJ,KAAAsJ,KACA,GAAAwI,KAAAhR,EAIA,OAHAwI,EAAA7G,OAAA3B,EAAAgR,GAAA,GAEA9R,KAAAqS,QAAA/I,IACA,GAGAwH,MAAA,SAAAA,EAAA3L,GA8BA,OAAAgL,EAAAnQ,KAAA6Q,YAAAC,EAAA3L,EAAAnF,CAAAA,KAAAsJ,QAGA+I,QAAA,SAAA/I,GAKAA,EAAAhH,OAEAtC,KAAA6R,WAAAvI,EAAAgJ,YAAAtS,KAAA6R,WACAvI,EAAAtJ,KAAAsJ,KAAAA,EAAAhH,OAEAtC,KAAAsJ,KAAAA,EAEAtJ,KAAAc,SACA,IAAA,IAAAxH,EAAA,EAAAyH,EAAAuI,EAAAlQ,OAAAE,EAAAyH,EAAAzH,IACA0G,KAAAc,MAAAwI,EAAAhQ,GAAA0G,KAAA6R,aAAAvY,GAIAyL,KAAA,SAAAI,GACA,IAAA,IAAA7L,KAAA6L,EACAnF,KAAA1G,GAAA6L,EAAA7L,GAEA0G,KAAAqS,QAAArS,KAAAsJ,aAKA,OAAAsH,IAEA7X,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAA6F,EAAAiT,EAAA,EAqEA,SAAAC,EAAAtY,GACA,OAAA,SAAAgF,EAAAuT,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAA3T,EAAAuT,GACAI,GAAAA,EAAA3T,QAAAA,IAEAA,EAAAuT,GAAAG,EAAA,WAKA,IAJA,IAAAE,EAAAP,EAEA/S,EAAAE,UACAqT,EAAAH,EAAAG,OACAA,GACAvT,EAAAuT,EAAAL,OAAA3S,MAAAC,KAAAR,IAAAA,EACAuT,EAAAA,EAAAnF,KAGA,GAAAgF,EAAAI,OACA,IAAA5C,EAAAwC,EAAAI,OAAAN,OAAA1S,KAAAR,GAIA,IADA,IAAAyT,EAAAL,EAAAK,MACAA,GAAAA,EAAAnB,GAAAgB,GAAA,CACA,GAAAG,EAAAN,iBAAA,CACA,IAAAO,EAAAD,EAAAP,OAAA3S,MAAAC,KAAAR,GAEA4Q,EAAA8C,IAAA5T,EAAA8Q,EAAA8C,OAEA9C,EAAA6C,EAAAP,OAAApY,KAAA0F,KAAAoQ,EAAA5Q,GAEAyT,EAAAA,EAAArF,KAEA,OAAAwC,GAEAyC,IACAD,EAAAI,QAAAN,OAAA,SAAAxT,EAAAM,GACA,OAAAqT,EAAA9S,MAAAb,EAAAM,MAGAoT,EAAA1T,OAAAA,GAEA,IAAAkR,EA3GA,SAAAwC,EAAA1Y,EAAAwY,EAAAC,GACA,IAEAQ,EAFAC,EAAAR,EAAA1Y,GACA8Y,EAAA,UAAA9Y,EAEA,GAAA8Y,EAAA,CACA,IAAAK,EAAAX,EAAA,WACA,OAAAU,EAAAV,OAAA1S,KAAAN,aAEAyT,GACA1E,OAAA,WACA4E,IACAA,EAAAT,EAAAF,EAAA,OAGAA,OAAA,SAAAxT,EAAAM,GACA,OAAA6T,EACAA,EAAAtT,MAAAb,EAAAM,GACA4T,EAAAV,OAAAxT,EAAAM,UAKA2T,GACA1E,OAAA,WACA,GAAA0E,EAAAT,OAAA,CACA,IAAAU,EAAAD,EAAAC,SACAxF,EAAAuF,EAAAvF,KACAA,GAAAwF,GAGAA,EACAA,EAAAxF,KAAAA,EAEAgF,EAAA1Y,GAAA0T,EAEAA,IACAA,EAAAwF,SAAAA,WARAR,EAAA1Y,GAaA0Y,EAAAF,EAAAS,EAAAT,OAAA,OAGAZ,GAAAS,IACAG,OAAAA,EACAC,iBAAAA,GAGA,GAAAS,IAAAJ,EACA,GAAA,SAAA9Y,EAAA,CAGA,KAAAkZ,EAAAxF,OAAAwF,EAAAA,EAAAxF,QACAwF,EAAAxF,KAAAuF,EACAA,EAAAC,SAAAA,MACA,UAAAlZ,IAEA0Y,EAAA1Y,GAAAiZ,EACAA,EAAAvF,KAAAwF,EACAA,EAAAA,SAAAD,QAIAP,EAAA1Y,GAAAiZ,EAEA,OAAAA,EAyCAG,CAAAV,GAAAC,EAAA3Y,EAAAwY,EAAAC,GAEA,OADAD,EAAA,KACAtC,GAIA,OAAA3W,EAAAC,OAAA,gBACAuZ,MAAAT,EAAA,SAEAQ,OAAAR,EAAA,UAEAO,OAAAP,EAAA,cAGAzZ,OAAA,6BACA,YACA,SAAAyZ,GACA,OAAAA,IAEAzZ,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAAyZ,GACA,OAAAA,IAEAzZ,OAAA,gCACA,uBACA,sBACA,yBACA,SAAA4L,EAAAqF,EAAAnH,GACA,aAEA,IAAA7E,EAAAjE,MAAAiC,UAAAgC,MACAoJ,EAAA4C,EAAA5C,MACAtD,EAAAa,EAAAb,UACA5F,EAAA2E,EAAA3E,OACA4B,EAAA+C,EAAA/C,MAEAA,EAAAyT,QAAAvX,WACAwX,OAAA,SAAAC,GAIA,OADAzT,KAAAsQ,KAAAmD,EAAAA,GACAzT,MAEA0T,KAAA,WACA,IAAA,IAAApa,EAAA,EAAAA,EAAAoG,UAAAtG,OAAAE,IACA0G,KAAAsQ,KAAA5Q,UAAApG,IAEA,OAAA0G,MAEA2T,KAAA,SAAAF,GAIA,OADAzT,KAAA4T,MAAAH,GACAzT,QAKA,IAAAyQ,EAAA,WACA,IAAAxE,EAAAjM,KACAA,KAAA6T,QAAAC,EAAA,IAAAP,QAAA,SAAAQ,EAAAC,GACA/H,EAAAgI,SAAAF,EACA9H,EAAAiI,QAAAF,MAeA,SAAAF,EAAAD,GAEA,GAAAA,EAAAM,WAAA,OAAAN,EAGA,IAAAO,GAAA,EACAC,GAAA,EACAF,GAAA,EAGAjW,EAAA2V,EAAAvD,KACA,SAAAgE,GAGA,OAFAH,GAAA,EACAC,GAAA,EACAE,GAEA,SAAAxK,GAGA,MAFAuK,GAAA,EACAD,GAAA,EACAtK,IAIA5L,EAAAiW,WAAA,WAAA,OAAAA,GACAjW,EAAAkW,UAAA,WAAA,OAAAA,GACAlW,EAAAmW,WAAA,WAAA,OAAAA,GAEAnW,EAAA0R,MAAA,WACA,OAAAuE,EACA,WAEAE,EACA,WAEA,WAGA,IAAAE,KACAlI,KAgDA,OA7CAnO,EAAAoS,KAAA,SAAAkE,EAAAC,EAAAC,GAIA,OAHAA,GACA1U,KAAA2U,SAAAD,GAEAZ,EAAAP,QAAAvX,UAAAsU,KAAAhW,KAAA0F,KACAwU,GAAA,SAAAhV,GACA,OAAAA,QAAAF,IAAAE,EAAAoV,QACAJ,EAAAzU,MAAAP,EAAAoV,QAAApV,GAEAgV,EAAAhV,IAGAiV,GAAA,SAAAjV,GACA,OAAAA,QAAAF,IAAAE,EAAAoV,QACAH,EAAA1U,MAAAP,EAAAoV,QAAApV,GAEAiV,EAAAjV,OAMAtB,EAAAyW,SAAA,SAAAlB,GAKA,OAJAc,EAAApa,QAAA,SAAAQ,GACA8Y,EAAA9Y,KAEA0R,EAAAtN,KAAA0U,GACAzT,MAGA9B,EAAA2W,KAAA3W,EAAAoS,KAEApS,EAAA4W,OAAA,SAAAna,GACA,IAGA,OAFA4Z,EAAAxV,KAAApE,GAEA0R,EAAAlS,QAAA,SAAAsS,GACA,OAAAA,EAAA9R,KAEA,MAAAoa,GACA/U,KAAAgU,OAAAe,GAEA,OAAA/U,MAGA9B,EA+IA,OA3IAuS,EAAAzU,UAAA+X,QAAA,SAAApZ,GACA,IAAA6E,EAAAxB,EAAA1D,KAAAoF,WACA,OAAAM,KAAAgV,YAAA,KAAAxV,IAGAiR,EAAAzU,UAAAgZ,YAAA,SAAA3N,EAAA7H,GAKA,OAJAA,EAAAA,EAAAsE,EAAAtE,OACAoV,QAAAvN,EACArH,KAAAiU,SAAAzU,GACAQ,KAAAiV,WAAA,EACAjV,MAGAyQ,EAAAzU,UAAA8Y,OAAA,SAAAna,GACA,IAAAua,EAAAhX,EAAA8B,KAAA,WAEA,OADAkV,EAAAJ,OAAAna,GACAqF,MAGAyQ,EAAAzU,UAAAgY,OAAA,SAAAmB,GACA,IAAA3V,EAAAxB,EAAA1D,KAAAoF,WACA,OAAAM,KAAAoV,WAAA,KAAA5V,IAGAiR,EAAAzU,UAAAoZ,WAAA,SAAA/N,EAAA7H,GAKA,OAJAA,EAAAA,EAAAsE,EAAAtE,OACAoV,QAAAvN,EACArH,KAAAkU,QAAA1U,GACAQ,KAAAqV,WAAA,EACArV,MAGAyQ,EAAAzU,UAAAmY,WAAA,WACA,IAAAe,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAAf,cAGA1D,EAAAzU,UAAAqY,WAAA,WACA,IAAAa,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAAb,cAGA5D,EAAAzU,UAAA4T,MAAA,WACA,IAAAsF,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAAtF,SAGAa,EAAAzU,UAAAsU,KAAA,SAAArP,EAAAqU,EAAAC,GACA,IAAAL,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAA5E,KAAArP,EAAAqU,EAAAC,IAGA9E,EAAAzU,UAAA2Y,SAAA,SAAAY,GACA,IAAAL,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAAP,SAAAY,IAGA9E,EAAAzU,UAAA4X,MAAA,SAAA0B,GACA,IAAAJ,EAAAhX,EAAA8B,KAAA,WACA,OAAAkV,EAAAtB,MAAA0B,IAIA7E,EAAAzU,UAAAwX,OAAA,WACA,IAAA0B,EAAAhX,EAAA8B,KAAA,WAEA,OADAkV,EAAA1B,OAAAzT,MAAAmV,EAAAxV,WACAM,MAGAyQ,EAAAzU,UAAA0X,KAAA,WACA,IAAAwB,EAAAhX,EAAA8B,KAAA,WAEA,OADAkV,EAAAxB,KAAA3T,MAAAmV,EAAAxV,WACAM,MAGAyQ,EAAAzU,UAAA2X,KAAA,SAAA2B,GACA,IAAAJ,EAAAhX,EAAA8B,KAAA,WAEA,OADAkV,EAAAvB,KAAA2B,GACAtV,MAIAyQ,EAAA+E,IAAA,SAAAvS,GAEA,IAAAwS,EAAA,IAAAhF,EAEA,OADA8C,QAAAiC,IAAAvS,GAAAqN,KAAAmF,EAAA1B,QAAAxL,KAAAkN,GAAAA,EAAAzB,OAAAzL,KAAAkN,IACAvX,EAAAuX,EAAA,YAGAhF,EAAAjN,MAAA,SAAAP,GACA,OAAA6Q,EAAAP,QAAAmC,KAAAzS,KAIAwN,EAAAC,KAAA,SAAAiF,EAAA1U,EAAAqU,EAAAC,GACA,IAAAK,EAAAD,GAAA,mBAAAA,EAAArF,KACAuF,EAAAD,GAAAD,aAAApC,QAEA,IAAAqC,EACA,OAAAlW,UAAAtG,OAAA,EACA6H,EAAAA,EAAA0U,GAAAA,GAEA,IAAAlF,GAAAsD,QAAA4B,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAArF,EAAAkF,EAAAI,QACAJ,EAAArF,KAAAlJ,EAAA0O,EAAA/B,QAAA+B,GAAA1O,EAAA0O,EAAA9B,OAAA8B,GAAAA,EAAAhB,QACAa,EAAAG,EAAAjC,QAGA,OAAA5S,GAAAqU,GAAAC,EACAI,EAAArF,KAAArP,EAAAqU,EAAAC,GAEAI,GAGAlF,EAAAuD,OAAA,SAAAgC,GACA,IAAAP,EAAA,IAAAhF,EAEA,OADAgF,EAAAzB,OAAAgC,GACAP,EAAA5B,SASApD,EAAAwF,UANAxF,EAAAsD,QAAA,SAAAzK,GACA,IAAAmM,EAAA,IAAAhF,EAEA,OADAgF,EAAA1B,QAAAhU,MAAA0V,EAAA/V,WACA+V,EAAA5B,SAMApD,EAAAoD,QAAA,SAAA5S,GACA,IAAAwU,EAAA,IAAAhF,EAIA,OAFAxP,EAAAwU,EAAA1B,QAAAxL,KAAAkN,GAAAA,EAAAzB,OAAAzL,KAAAkN,GAAAA,EAAAd,SAAApM,KAAAkN,IAEAA,EAAA5B,SAGApD,IAEA1X,OAAA,6BACA,mBACA,wBACA,cACA,SAAAU,EAAAoJ,EAAA4N,GACA,IAAAzP,EAAA6B,EAAA7B,KAEAkV,GACAzF,SAAAA,EAEA0F,SAAA,SAAA/R,EAAA5E,EAAAwM,GACA,IAAAoK,KAQA,OAPApK,EAAAA,GAAA,KACAxM,EAAAA,MAEAwB,EAAAoD,EAAA,SAAA9K,EAAAoK,GACA0S,EAAArX,KAAA2E,EAAA3D,MAAAiM,EAAAxM,MAGAiR,EAAA+E,IAAAY,IAGAC,OAAA,SAAAjS,EAAA5E,EAAAwM,GACA,IAAAoK,KACAX,EAAA,IAAAhF,EACAyE,EAAAO,EAAA5B,QAaA,OAXA7H,EAAAA,GAAA,KACAxM,EAAAA,MAEAiW,EAAA1B,UACA/S,EAAAoD,EAAA,SAAA9K,EAAAoK,GACAwR,EAAAA,EAAA5E,KAAA,WACA,OAAA5M,EAAA3D,MAAAiM,EAAAxM,KAEA4W,EAAArX,KAAAmW,KAGAzE,EAAA+E,IAAAY,IAGAE,SAAA,SAAAlS,EAAA5E,EAAAwM,GACA,IAAAyJ,EAAA,IAAAhF,EACAyE,EAAAO,EAAA5B,QAUA,OARA7H,EAAAA,GAAA,KACAxM,EAAAA,MAEAiW,EAAAT,YAAAhJ,EAAAxM,GAEAwB,EAAAoD,EAAA,SAAA9K,EAAAoK,GACAwR,EAAAA,EAAA5E,KAAA5M,KAEAwR,IAIA,OAAAzb,EAAAC,OAAA,cAAAwc,KAEAnd,OAAA,4BACA,WACA,SAAAmd,GACA,OAAAA,IAEAnd,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAmd,GACA,OAAAA,IAEAnd,OAAA,qCACA,oBACA,SAAAU,GA2DA,OAAAA,EAAAC,OAAA,mBACA6c,kBA3DA,SAAAC,GAEA,IAAAC,EAAAD,EAAArd,MAAA,KACAud,EAAAnZ,SAAAkZ,EAAA,IAEA,GAAA/a,MAAAgb,GACA,OAAA,EAKA,OAAAD,EAAA,GAAAE,OAAA9Y,QAAA,MAAA,KACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAA6Y,EACA,IAAA,QACA,IAAA,OACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,OAfA,KAeAA,EACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,MACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,OAAA,MAAAA,EACA,IAAA,SACA,IAAA,QACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,IACA,IAAA,IACA,OAAA,OAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,QACA,OAAA,QAQA3d,OAAA,gCACA,eACA,SAAA6d,GACA,OAAAA,IAEA7d,OAAA,2BAAA,gCAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,2BACA,2BACA,SAAA6d,GACA,OAAAA,IAEA7d,OAAA,0BACA,gCACA,SAAA0X,GACA,OAAAA,IAEA1X,OAAA,oCACA,WACA,WACA,SAAA8R,EAAAJ,GAOA,OAAAI,EAAAgM,YANA,SAAA3c,EAAA8K,GAGA,OAAA,IAAAyF,EAAAvQ,EAAA8K,MAKAjM,OAAA,6BACA,WACA,UACA,aACA,YACA,iBACA,SAAA8R,GACA,OAAAA,IAEA9R,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAA8R,GACA,OAAAA,IAEA9R,OAAA,uBACA,uBACA,SAAAiR,GACA,OAAAA,IAEAjR,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAAqd,GACAC,WAAA,EACAC,OAAA,KACAC,OAAAjX,KACAkX,QAAA,KACAC,KAAA,MAGA,iBAAAC,SAAAA,QAAAC,UAAAD,QAAAC,SAAAF,MAAAC,QAAAC,SAAAC,KACAR,EAAAE,QAAA,EACAF,EAAAC,WAAA,GAGAD,EAAAG,OAAA,WACA,MAAA,oBAAAA,QAAA,mBAAAA,OAIAA,OACA,oBAAA/b,OAEAA,OAEA,oBAAA+Q,KAEAA,KAEAjM,KAdA,GAiBA,IAAAuX,EAAA,KAWA,GATAzb,OAAAiL,eAAA+P,EAAA,WAAA,WACA,IAAAS,EAAA,CACA,IAAAC,EAAA,oBAAAtc,OAAAuc,QAAA,gBAAAvc,OACAqc,EAAAC,EAAAE,SAGA,OAAAH,IAGAT,EAAAC,UAAA,CAiBA,IAAAY,EAhBA,SAAAC,GACAA,EAAAA,EAAAxd,cAEA,IAAAwP,EAAA,wBAAAiO,KAAAD,IACA,wBAAAC,KAAAD,IACA,qCAAAC,KAAAD,IACA,kBAAAC,KAAAD,IACAA,EAAAhW,QAAA,cAAA,GAAA,gCAAAiW,KAAAD,OAGA,OACAV,QAAAtN,EAAA,IAAA,GACAkO,QAAAlO,EAAA,IAAA,KAIAmO,CAAAC,UAAAC,WAEAf,EAAAJ,EAAAI,WAEAS,EAAAT,UACAA,EAAAS,EAAAT,UAAA,EACAA,EAAAY,QAAAH,EAAAG,SAIAZ,EAAAgB,OACAhB,EAAAiB,QAAA,EACAjB,EAAAiB,SACAjB,EAAAkB,QAAA,GAIA,OAAA3e,EAAAC,OAAA,eAAAod,KAEA/d,OAAA,6BACA,YACA,SAAA+d,GACA,OAAAA,IAEA/d,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAA+d,GACA,OAAAA,IAEA/d,OAAA,6BACA,mBACA,uBACA,SAAAU,EAAAqD,GAKA,IAFA,IAAAub,KAEA/e,EAAA,EAAAA,EAAA,IAAAA,IAEA+e,EAAA/e,IAAAA,EAAA,GAAA,IAAA,IAAA,EAAAW,SAAA,IAIA,IAAAqe,GAEAC,QAAAtG,KAAAuG,GAAA,IACAC,QAAA,IAAAxG,KAAAuG,GAIAE,MAAA,SAAA/d,EAAAge,EAAAC,GAEA,OAAA3G,KAAA2G,IAAAD,EAAA1G,KAAA0G,IAAAC,EAAAje,KAOAke,gBAAA,SAAApV,EAAAqV,GAEA,OAAArV,EAAAqV,EAAAA,GAAAA,GAMAC,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,OAAAD,GAAAH,EAAAC,IAAAG,EAAAD,IAAAD,EAAAD,IAMAI,KAAA,SAAAL,EAAAM,EAAAC,GAEA,OAAA,EAAAA,GAAAP,EAAAO,EAAAD,GAMAE,WAAA,SAAAR,EAAAL,EAAAC,GAEA,OAAAI,GAAAL,EAAA,EACAK,GAAAJ,EAAA,GAEAI,GAAAA,EAAAL,IAAAC,EAAAD,IAEAK,GAAA,EAAA,EAAAA,IAIAS,aAAA,SAAAT,EAAAL,EAAAC,GAEA,OAAAI,GAAAL,EAAA,EACAK,GAAAJ,EAAA,GAEAI,GAAAA,EAAAL,IAAAC,EAAAD,IAEAK,EAAAA,GAAAA,GAAA,EAAAA,EAAA,IAAA,KAMAU,QAAA,SAAAC,EAAAC,GAEA,OAAAD,EAAA1H,KAAA4H,MAAA5H,KAAAC,UAAA0H,EAAAD,EAAA,KAMAG,UAAA,SAAAH,EAAAC,GAEA,OAAAD,EAAA1H,KAAAC,UAAA0H,EAAAD,IAMAI,gBAAA,SAAAC,GAEA,OAAAA,GAAA,GAAA/H,KAAAC,WAIA+H,SAAA,SAAAC,GAEA,OAAAA,EAAAC,UAAA5B,SAIA6B,SAAA,SAAAC,GAEA,OAAAA,EAAAF,UAAA1B,SAIA6B,aAAA,SAAA3f,GAEA,OAAA,IAAAA,EAAAA,EAAA,IAAA,IAAAA,GAIA4f,eAAA,SAAA5f,GAEA,OAAAsX,KAAAuI,IAAA,EAAAvI,KAAAwI,KAAAxI,KAAAyI,IAAA/f,GAAAsX,KAAA0I,OAIAC,gBAAA,SAAAjgB,GAEA,OAAAsX,KAAAuI,IAAA,EAAAvI,KAAA4H,MAAA5H,KAAAyI,IAAA/f,GAAAsX,KAAA0I,OAIAE,6BAAA,SAAAC,EAAA5a,EAAAC,EAAAoN,EAAAwN,GAQA,IAAAC,EAAA/I,KAAA+I,IACAC,EAAAhJ,KAAAgJ,IAEAC,EAAAF,EAAA7a,EAAA,GACAgb,EAAAF,EAAA9a,EAAA,GAEAib,EAAAJ,GAAA9a,EAAAqN,GAAA,GACA8N,EAAAJ,GAAA/a,EAAAqN,GAAA,GAEA+N,EAAAN,GAAA9a,EAAAqN,GAAA,GACAgO,EAAAN,GAAA/a,EAAAqN,GAAA,GAEAiO,EAAAR,GAAAzN,EAAArN,GAAA,GACAub,EAAAR,GAAA1N,EAAArN,GAAA,GAEA,QAAA6a,EAEAD,EAAAxM,IAAA4M,EAAAG,EAAAF,EAAAG,EAAAH,EAAAI,EAAAL,EAAAE,GAEA,QAAAL,EAEAD,EAAAxM,IAAA6M,EAAAI,EAAAL,EAAAG,EAAAF,EAAAG,EAAAJ,EAAAE,GAEA,QAAAL,EAEAD,EAAAxM,IAAA6M,EAAAG,EAAAH,EAAAI,EAAAL,EAAAG,EAAAH,EAAAE,GAEA,QAAAL,EAEAD,EAAAxM,IAAA4M,EAAAG,EAAAF,EAAAM,EAAAN,EAAAK,EAAAN,EAAAE,GAEA,QAAAL,EAEAD,EAAAxM,IAAA6M,EAAAK,EAAAN,EAAAG,EAAAF,EAAAM,EAAAP,EAAAE,GAEA,QAAAL,EAEAD,EAAAxM,IAAA6M,EAAAM,EAAAN,EAAAK,EAAAN,EAAAG,EAAAH,EAAAE,GAIAM,QAAAC,KAAA,oFAUA,OAAAliB,EAAAC,OAAA,cAAA4e,KAEAvf,OAAA,4BACA,WACA,SAAAuf,GACA,OAAAA,IAEAvf,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAuf,GACA,OAAAA,IAEAvf,OAAA,yBACA,yBACA,SAAAqF,GACA,OAAAA,IAEArF,OAAA,iCACA,oBACA,SAAAU,GAEA,IAAAmiB,EAAA9f,OAAA+f,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAlU,IAAA,SACAmU,IAAA,SACAC,IAAA,WAEA,SAAAC,EAAA7O,GACA,OAAAqO,EAAArO,GAEA,IAAA8O,EAAA,aA2GA,IAAAC,EAAA,EAWA,SAAAlT,EAAA0I,EAAAxI,GA0BA,IAEA/P,EAAAgjB,EACAC,EAAAC,EAgBA/Y,EACAY,EACAoY,EArBAC,EAAAjd,UAAAkd,OAwBA,OAvBAD,EAAAzL,MAAAY,KAAA6K,EAAAzL,MAAAY,IACAvY,EAAAuY,EAAAyK,EAAA,YAAAxe,KAAA+T,GAAA6K,EAAAxO,IAAA2D,IAAAvY,EAAA,mBAAAuY,GACA0K,EAAA,EAAAC,GACA,UACAE,EAAA9S,SAAA,OAAA8S,EAAA9S,SAAA,iBAAA,wBACA,gBACA0S,EACA1e,QAAA,MAAA,KAAAA,QAAA,MAAA,KACAA,QAAA,0BAAA,SACAA,QAAA,aAAA,IACAA,QAAA,WAAA,WAAA,MAAA,sBAAA2e,EAAA,uBACA3e,QAAA,qBAAA,gBACAA,QAAA,kBAAA,+BACAA,QAAA,iBAAA,wBACA,OAAA8e,EAAA9S,SAAA,GAAA,KAAA,qEACAtQ,EAAA,mDACAA,EAAA,MACAsE,QAAA,qBAAA,IACA6F,EAAA,IAAAqC,SAAA0W,GACAnY,GAAAwX,IAAA,QAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,SAAAlU,IAAA,UACA2U,EAAA,SAAAH,GAAA,OAAA,GAAAA,GAAA1e,QAAA,aAAA,SAAAkP,GAAA,OAAAzI,EAAAyI,MACA,SAAA8P,GAAA,OAAAnZ,EAAApJ,KAAAqiB,EAAAtV,SAAAqV,WAAAA,EAAAF,KAAA,EAAA1V,IAAA,GAAA+V,MAAAA,OAEAvT,EAAAqT,EAAAzL,MAAAY,GAAAxI,GAAAqT,EAAAzL,MAAAY,GAoEA,OAjEA1I,EAAA8H,SAGA9H,EAAA+E,IAAA,SAAA2D,GACA,OAAA4F,SAAAoF,eAAAhL,GAAAiL,WA6DAtjB,EAAAC,OAAA,iBACAsjB,UAAA,SAAAxG,GACA,OAAAA,EAAA3Y,QAAA,cAAA,SAAAqC,GACA,OAAAA,EAAA+c,cAAApf,QAAA,IAAA,OAIAqf,UA1OA,SAAA1G,GACA,OAAAA,EAAA3Y,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAzD,eAuOA+iB,iBApOA,SAAAxiB,GACA,IACA,OAAAA,EACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAoD,KAAApD,GAAAyiB,KAAAxR,MAAAjR,GACAA,GAAAA,EACA,MAAAmP,GACA,OAAAnP,IA4NA+hB,WAxNA,SAAAlG,GACA,GAAA,MAAAA,EACA,MAAA,GAEA,IAAAA,EACA,OAAAnc,OAAAmc,GAGA,OAAAA,EAAAvc,WAAA4D,QAAAwe,EAAAD,IAkNAiB,aA/MA,WACA,MAAA,uCAAAxf,QAAA,QAAA,SAAA0P,GACA,IAAA+P,EAAA,GAAArL,KAAAC,SAAA,EACAoC,EAAA,MAAA/G,EAAA+P,EAAA,EAAAA,EAAA,EACA,OAAAhJ,EAAAra,SAAA,OA6MAsjB,MAxEA,SAAA/G,GACA,OAAAA,EAAA3Y,QAAA,OAAA,KAyEA2f,WAAA,SAAAhH,GACA,OAAAA,EAAAiH,OAAA,GAAArjB,cAAAoc,EAAAxY,MAAA,IAGA0f,MA1EA,SAAAlH,GACA,OAAAA,EAAA3Y,QAAA,OAAA,KA2EA8f,eAAA,SAAAhjB,GACA,OAAAyiB,KAAAQ,UAAAjjB,IAIAkjB,WAlNA,SAAAzU,EAEA9E,EAEAwZ,EAEA7M,GAmBA,SAAA8M,EAAAjf,EAAAwF,GACA,GAAAxF,EAAA8K,MAAA,MAAA,CACA,IAAAoU,EACAC,EAAA,SAAApf,EAAAlF,GACA,IAAAukB,EAAArf,EAAAe,MACA,OAAAse,EACAvkB,EAAAukB,GACAD,EAAApf,EAAAmf,EAAArkB,EAAAukB,IADA,KAGAF,GAGA,OAAAC,EAAAnf,EAAA3F,MAAA,KAAAglB,UAAA7Z,GAEA,OAAAA,EAAAxF,GAIA,OAxBAmS,EAAAA,GAAA/V,OACA4iB,EAAAA,EACA1W,MAAA6J,EAAA6M,GAAA,SAAAxJ,GACA,OAAAA,GAqBAlL,EAAAvL,QAAA,yCACA,SAAA+L,EAAA9K,EAAAsf,GACA,IAAAzjB,EAAAojB,EAAAjf,EAAAwF,GAIA,OAHA8Z,IACAzjB,EAAAojB,EAAAK,EAAAnN,GAAA3W,KAAA2W,EAAAtW,EAAAmE,IAEAgf,EAAAnjB,EAAAmE,GAAA7E,cAmKAokB,QA9EA,SAAA7H,GAIAA,GAHAA,EAAAA,EAAA3Y,QAAA,aAAA,KAGAzD,cAKA,IAFA,IAAAkkB,EAAA,qGAEAhlB,EAAA,EAAAyH,EAAAud,EAAAllB,OAAAE,EAAAyH,EAAAzH,IACAkd,EAAAA,EAAA3Y,QAAA,IAAA6L,OAAA4U,EAAAb,OAAAnkB,GAAA,KAFA,qGAEAmkB,OAAAnkB,IAUA,OAJAkd,EAAAA,EAAA3Y,QAAA,OAAA,KAEAA,QAAA,MAAA,MAgEA8Y,KA5NA,SAAAH,GACA,OAAA,MAAAA,EAAA,GAAAnc,OAAA2B,UAAA2a,KAAArc,KAAAkc,IA6NA+H,SApKA,SAAAC,GACA,IAAA1M,IAAAwK,EAAA,GACA,OAAAkC,EAAAA,EAAA1M,EAAAA,GAoKA2M,WAAA,SAAAjI,GACA,OAAAA,EAAAiH,OAAA,GAAAR,cAAAzG,EAAAxY,MAAA,QAKAjF,OAAA,gCACA,aACA,SAAA2lB,GA8IA,OAAAA,EAAAC,QACAC,OAzCA,SAAAC,EAAAC,GACAA,EAAA,MAAAA,GAAAA,EACA,IACAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGAhmB,EAAA,EAEAulB,EAAAA,EAAAhhB,QAAA,sBAAA,IAEA,KAAAvE,EAAAulB,EAAAzlB,QAEA8lB,EAAAlf,KAAAuf,QAAA3d,QAAAid,EAAApB,OAAAnkB,MACA6lB,EAAAnf,KAAAuf,QAAA3d,QAAAid,EAAApB,OAAAnkB,MACA8lB,EAAApf,KAAAuf,QAAA3d,QAAAid,EAAApB,OAAAnkB,MACA+lB,EAAArf,KAAAuf,QAAA3d,QAAAid,EAAApB,OAAAnkB,MAEAylB,EAAAG,GAAA,EAAAC,GAAA,EACAH,GAAA,GAAAG,IAAA,EAAAC,GAAA,EACAH,GAAA,EAAAG,IAAA,EAAAC,EAEAC,GAAAjlB,OAAAmlB,aAAAT,GAEA,IAAAK,IACAE,GAAAjlB,OAAAmlB,aAAAR,IAEA,IAAAK,IACAC,GAAAjlB,OAAAmlB,aAAAP,IAKAH,IACAQ,EArGA,SAAAG,GACA,IAAAlD,EAAA,GACAjjB,EAAA,EACAiU,EAAAmS,GAAAxE,GAAA,EAEA,KAAA5hB,EAAAmmB,EAAArmB,SAEAmU,EAAAkS,EAAAE,WAAArmB,IAEA,KACAijB,GAAAliB,OAAAmlB,aAAAjS,GACAjU,KAEAiU,EAAA,KAAAA,EAAA,KACA2N,GAAAuE,EAAAE,WAAArmB,EAAA,GACAijB,GAAAliB,OAAAmlB,cAAA,GAAAjS,IAAA,EAAA,GAAA2N,IACA5hB,GAAA,IAGA4hB,GAAAuE,EAAAE,WAAArmB,EAAA,GACAsmB,GAAAH,EAAAE,WAAArmB,EAAA,GACAijB,GAAAliB,OAAAmlB,cAAA,GAAAjS,IAAA,IAAA,GAAA2N,KAAA,EAAA,GAAA0E,IACAtmB,GAAA,GAKA,OAAAijB,EA0EAsD,CAAAP,IAGA,OAAAA,GAOAQ,OAhFA,SAAAjB,EAAAC,GAEA,IACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAA,GAEAhmB,EAAA,GAHAwlB,EAAA,MAAAA,GAAAA,KAOAD,EAlEA,SAAAtC,GACAA,EAAAA,EAAA1e,QAAA,QAAA,MAGA,IAFA,IAAA4hB,EAAA,GAEAhc,EAAA,EAAAA,EAAA8Y,EAAAnjB,OAAAqK,IAAA,CAEA,IAAA8J,EAAAgP,EAAAoD,WAAAlc,GAEA8J,EAAA,IACAkS,GAAAplB,OAAAmlB,aAAAjS,GAEAA,EAAA,KAAAA,EAAA,MACAkS,GAAAplB,OAAAmlB,aAAAjS,GAAA,EAAA,KACAkS,GAAAplB,OAAAmlB,aAAA,GAAAjS,EAAA,OAGAkS,GAAAplB,OAAAmlB,aAAAjS,GAAA,GAAA,KACAkS,GAAAplB,OAAAmlB,aAAAjS,GAAA,EAAA,GAAA,KACAkS,GAAAplB,OAAAmlB,aAAA,GAAAjS,EAAA,MAKA,OAAAkS,EA2CAM,CAAAlB,IAGA,KAAAvlB,EAAAulB,EAAAzlB,QAEA2lB,EAAAF,EAAAc,WAAArmB,KACA0lB,EAAAH,EAAAc,WAAArmB,KACA2lB,EAAAJ,EAAAc,WAAArmB,KAEA4lB,EAAAH,GAAA,EACAI,GAAA,EAAAJ,IAAA,EAAAC,GAAA,EACAI,GAAA,GAAAJ,IAAA,EAAAC,GAAA,EACAI,EAAA,GAAAJ,EAEAvjB,MAAAsjB,GACAI,EAAAC,EAAA,GACA3jB,MAAAujB,KACAI,EAAA,IAGAC,EAAAA,EACAtf,KAAAuf,QAAA9B,OAAAyB,GAAAlf,KAAAuf,QAAA9B,OAAA0B,GACAnf,KAAAuf,QAAA9B,OAAA2B,GAAApf,KAAAuf,QAAA9B,OAAA4B,GAIA,OAAAC,MAkDAvmB,OAAA,8BACA,YACA,YACA,SAAA2lB,GACA,OAAAA,IAEA3lB,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAA2lB,GACA,OAAAA,IAEA3lB,OAAA,0BACA,YACA,YACA,aACA,SAAAkU,EAAAyR,EAAA7b,GACA,IAAAvB,EAAAuB,EAAAvB,QACAxB,EAAA+C,EAAA/C,MACA5B,EAAA2E,EAAA3E,OACAzD,EAAAoI,EAAApI,cACAiG,EAAAmC,EAAAnC,MACA6d,EAAAG,EAAAH,SAEAyB,EAAA/S,EAAAhG,SACAnC,WAAA,SAAAmb,EAAA9a,GACA,IAAApD,EAAAke,MACA9a,IAAAA,MACAnF,KAAAkgB,IAAA3B,EAAAve,KAAAmgB,WACAngB,KAAAigB,cACA9a,EAAA3D,aAAAxB,KAAAwB,WAAA2D,EAAA3D,YACA2D,EAAAyG,QAAA7J,EAAA/B,KAAA4L,MAAA7J,EAAAoD,QACA,IAAA1G,EAAAP,EAAA8B,KAAA,YACA+B,EAAAjC,KAAArB,EAAAsD,GACA/B,KAAAsO,IAAAvM,EAAAoD,GACAnF,KAAAogB,YAIAA,QAAA,KAGAC,gBAAA,KAIAC,YAAA,KAIAH,UAAA,IAIAI,OAAA,SAAApb,GACA,OAAAzE,EAAAV,KAAAigB,aAKA9R,IAAA,SAAAqS,GACA,OAAAxgB,KAAAigB,WAAAO,IAKAxhB,IAAA,SAAAwhB,GACA,OAAA,MAAAxgB,KAAAmO,IAAAqS,IAMAlS,IAAA,SAAAxP,EAAA2hB,EAAAtb,GACA,GAAA,MAAArG,EAAA,OAAAkB,KAGA,IAAA+B,EAWA,GAVA,iBAAAjD,GACAiD,EAAAjD,EACAqG,EAAAsb,IAEA1e,MAAAjD,GAAA2hB,EAGAtb,IAAAA,OAGAnF,KAAA0gB,UAAA3e,EAAAoD,GAAA,OAAA,EAGA,IAAAwb,EAAAxb,EAAAwb,MACAtS,EAAAlJ,EAAAkJ,OACAuS,KACAC,EAAA7gB,KAAA8gB,UACA9gB,KAAA8gB,WAAA,EAEAD,IACA7gB,KAAA+gB,oBAAArgB,EAAAV,KAAAigB,YACAjgB,KAAAogB,YAGA,IAAAY,EAAAhhB,KAAAigB,WACAG,EAAApgB,KAAAogB,QACAa,EAAAjhB,KAAA+gB,oBAGA,IAAA,IAAAP,KAAAze,EACA0e,EAAA1e,EAAAye,GACAlf,EAAA0f,EAAAR,GAAAC,IAAAG,EAAA7hB,KAAAyhB,GACAlf,EAAA2f,EAAAT,GAAAC,UAGAL,EAAAI,GAFAJ,EAAAI,GAAAC,EAIAE,SAAAK,EAAAR,GAAAQ,EAAAR,GAAAC,EAOA,GAHAzgB,KAAAsgB,eAAAve,IAAA/B,KAAA8R,GAAA9R,KAAAmO,IAAAnO,KAAAsgB,eAGAjS,EAAA,CACAuS,EAAAxnB,SAAA4G,KAAAkhB,SAAA/b,GACA,IAAA,IAAA7L,EAAA,EAAAA,EAAAsnB,EAAAxnB,OAAAE,IACA0G,KAAAgN,QAAA,UAAA4T,EAAAtnB,GAAA0G,KAAAghB,EAAAJ,EAAAtnB,IAAA6L,GAMA,GAAA0b,EAAA,OAAA7gB,KACA,IAAAqO,EACA,KAAArO,KAAAkhB,UACA/b,EAAAnF,KAAAkhB,SACAlhB,KAAAkhB,UAAA,EACAlhB,KAAAgN,QAAA,SAAAhN,KAAAmF,GAKA,OAFAnF,KAAAkhB,UAAA,EACAlhB,KAAA8gB,WAAA,EACA9gB,MAKA2gB,MAAA,SAAAH,EAAArb,GACA,OAAAnF,KAAAsO,IAAAkS,OAAA,EAAA1gB,KAAAqF,GAAAwb,OAAA,MAIAtT,MAAA,SAAAlI,GACA,IAAApD,KACA,IAAA,IAAAjD,KAAAkB,KAAAigB,WAAAle,EAAAjD,QAAA,EACA,OAAAkB,KAAAsO,IAAAvM,EAAAjC,KAAAqF,GAAAwb,OAAA,MAKAQ,WAAA,SAAAX,GACA,OAAA,MAAAA,GAAA/lB,EAAAuF,KAAAogB,cACA9gB,IAAAU,KAAAogB,QAAAI,IASAY,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAArhB,KAAAmhB,cAAAzgB,EAAAV,KAAAogB,SACA,IAAAkB,EAAAthB,KAAA8gB,UAAA9gB,KAAA+gB,oBAAA/gB,KAAAigB,WACAG,KACA,IAAA,IAAAI,KAAAa,EAAA,CACA,IAAAZ,EAAAY,EAAAb,GACAlf,EAAAggB,EAAAd,GAAAC,KACAL,EAAAI,GAAAC,GAEA,OAAAhmB,EAAA2lB,IAAAA,GAKAhN,SAAA,SAAAoN,GACA,OAAA,MAAAA,GAAAxgB,KAAA+gB,oBACA/gB,KAAA+gB,oBAAAP,GADA,MAMAe,mBAAA,WACA,OAAA7gB,EAAAV,KAAA+gB,sBAIArgB,MAAA,WACA,OAAA,IAAAV,KAAAxF,YAAAwF,KAAAigB,aAIAuB,MAAA,WACA,OAAAxhB,KAAAhB,IAAAgB,KAAAsgB,cAIAmB,QAAA,SAAAtc,GACA,OAAAnF,KAAA0gB,aAAA5gB,KAAAqF,GAAAuc,UAAA,MAKAhB,UAAA,SAAA3e,EAAAoD,GACA,IAAAA,EAAAuc,WAAA1hB,KAAA0hB,SAAA,OAAA,EACA3f,EAAAjC,KAAAE,KAAAigB,WAAAle,GACA,IAAAgT,EAAA/U,KAAAqgB,gBAAArgB,KAAA0hB,SAAA3f,EAAAoD,IAAA,KACA,OAAA4P,IACA/U,KAAAgN,QAAA,UAAAhN,KAAA+U,EAAAjV,EAAAqF,GAAAkb,gBAAAtL,MACA,MAIA,OAAAiL,IAEAjnB,OAAA,iCACA,gCACA,SAAA+S,GACA,OAAAA,IAEA/S,OAAA,iCACA,aACA,SAAA+S,GACA,OAAAA,IAEA/S,OAAA,6BACA,mBACA,iCACA,SAAAU,EAAAwT,GACA,IAAA0U,EAAA,IAAA1U,EAEA,OAAAxT,EAAAC,OAAA,eACAkoB,QAAA,SAAAroB,EAAAsoB,EAAAC,GACA,IAAAxY,KAAAtL,MAAA1D,KAAAoF,UAAA,GAEA,OAAAiiB,EAAA3U,SACA9S,KAAAX,EACA+P,KAAAA,KAIAyY,UAAA,SAAAxoB,EAAAkT,EAAAT,GACA,IAAAyH,EAAA,SAAA3J,GACA2C,EAAA1M,MAAAiM,EAAAlC,EAAAR,OAGA,OADAqY,EAAAxW,GAAA5R,EAAAka,IAEAhF,OAAA,WACAkT,EAAAhW,IAAApS,EAAAka,UAQA1a,OAAA,4BACA,WACA,SAAAipB,GACA,OAAAA,IAEAjpB,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAipB,GACA,OAAAA,IAEAjpB,OAAA,uBACA,uBACA,SAAA+D,GACA,OAAAA,IAEA/D,OAAA,uBACA,YACA,WACA,eACA,WACA,UACA,cACA,aACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,YACA,YACA,aACA,YACA,UACA,WACA,SACAU,EACAkL,EACAiM,EACA4B,EACA0D,EACAU,EACAnG,EACA3E,EACAmB,EACApC,EACAb,EACA8M,EACA3P,EACAmR,EACAla,EACAyE,EACAmd,EACAtB,EACAsD,EACAllB,GAEA,aAEA/C,MAAAiC,UAAAiI,OACAlK,MAAAiC,UAAA4F,QACA7H,MAAAiC,UAAAgC,MACAjE,MAAAiC,UAAA8G,OAJA,IAKAhD,EAAA+C,EAAA/C,MAEApF,GADAmI,EAAAD,UACA9F,EAAApC,YA6BA,IAAAunB,EAAA,EAMA,SAAAC,IACA,OAAAA,EAuCA,OApCApiB,EAAAoiB,GACArL,YAAA/K,EAAA+K,YAEAsL,QAvCA,SAAA9a,EAAAhG,EAAAmB,EAAA4f,GACA,OAAA1nB,EAAA2G,GAAAA,EAAA/G,KAAA+M,EAAA7E,EAAA4f,GAAA/gB,GAwCAghB,eArCA,SAAAC,GACA,IACAzW,GADAyW,EAAAA,GAAApnB,OAAAkB,SAAAF,MACA/C,MAAA,KACAsG,KAEAoM,EAAAzS,OAAA,GACAyS,EAAA,GAAA1S,MAAA,KAAAgB,QAAA,SAAAooB,GACA,IAAAC,EAAAD,EAAAppB,MAAA,KACAsG,EAAA+iB,EAAA,IAAAA,EAAA,KAGA,OAAA/iB,GA4BAgjB,QAxBA,SAAA9nB,GAGA,OAAA+nB,WAAA/nB,IAAA,GAuBAgoB,IAjBA,SAAAhpB,GACA,OAAAA,EAAAsoB,OAAAtoB,EAAAsoB,KAAAA,MAkBAW,IAAA,oBAAA1nB,OAAAA,OAAA0nB,KAAA1nB,OAAA2nB,UAAA,OAKA/iB,EAAAoiB,EAAAvd,EAAA6N,EAAAoE,EAAA5M,EAAA5L,EAAAyE,EAAA6b,EAAA5hB,GACA8T,WAAAA,EAEAsF,MAAAA,EAEAzF,SAAAA,EAEA3E,QAAAA,EAEAmB,QAAAA,EAEA6J,OAAAA,EAEA3P,MAAAA,EAEA6Y,SAAAA,EAEAgC,MAAAA,IAGAvoB,EAAAyoB,MAAAA,IAEAnpB,OAAA,gCACA,wBACA,uBACA,SAAAU,EAAAyoB,GACA,aAEA,IAqBAY,EACAC,EAtBA7L,EAAAgL,EAAApL,OAAAI,QAKA8L,GACAC,iBAAA,sBACAC,cAAA,gBACAC,YAAA,gCACAC,WAAA,iBAEAC,EAAA,KAGAC,EAAA,GAEAC,EAAA,GAEAC,KACAC,KAIAC,EAAA,qCAEAhM,EAAAxc,OAAAwc,SACAiM,EAAAjM,EAAAkM,cAAA,OAEAC,EAAAF,EAAAG,uBACAH,EAAAI,oBACAJ,EAAAK,kBACAL,EAAAE,gBAEAI,EAAAN,EAAAO,mBACAP,EAAAQ,yBACAR,EAAAS,sBACAT,EAAAU,oBAOAC,GALA5M,EAAA6M,gBACA7M,EAAA8M,wBACA9M,EAAA+M,qBACA/M,EAAAgN,iBAEAf,EAAAgB,OAEA,IAAA,IAAAprB,KAAA+qB,EAAA,CACA,IAAA3M,EAAApe,EAAAqQ,MAAAmZ,GAAAW,GACA,GAAA/L,EAAA,CACAoL,IACAD,EAAAnL,EAAA,GACAoL,EAAA,IAAArZ,OAAA,KAAAoZ,EAAA,UAEAA,EACAQ,EAAA,IAAAR,EAAA1oB,cAAA,IACAmpB,EAAAT,EAAA1oB,eAGAopB,EAAAtB,EAAA1E,WAAA7F,EAAA,KAAApe,EACA,IAAAqrB,EAAA1C,EAAAhF,UAAAvF,EAAA,IACA8L,EAAAmB,GAAAtB,EAAAsB,EAEA5B,EAAAzpB,KACA8pB,EAAAL,EAAAzpB,KA0DA,OArDA8pB,QACA/jB,IAAAglB,EAAA,aACAjB,EAAAL,EAAA,YAgBAd,EAAApiB,MAAAoX,GACAoM,eAAAA,EAEAuB,OAAA,QAAAhN,KAAA3c,OAAA8c,UAAAC,WAEA6M,uBATA,SAAAvrB,GACA,OAAAiqB,EAAAjqB,IAAAA,GAUAwrB,qBAfA,SAAAxrB,GACA,OAAAkqB,EAAAlqB,IAAAA,GAgBAyrB,kBArBA,SAAAzrB,GACA,OAAAgqB,EAAAA,EAAAhqB,EAAAA,EAAAa,eAsBAypB,gBAAAA,EAEAI,kBAAAA,EAEAM,eAAAN,EAEA7nB,SAAA,WACA,OAAAlB,OAAAkB,UAGA6oB,aAMA5B,IACAnM,EAAA+N,QAAA7B,YACA8B,IAAA7B,IAIAM,EAAA,KAEAlqB,EAAAC,OAAA,eAAAwd,KAGAne,OAAA,6BACA,aACA,SAAAme,GACA,OAAAA,IAEAne,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,wBACA,sBACA,wBACA,SAAAU,EAAAyoB,EAAAhL,GACA,IAAA2N,IAAA7M,UAAAC,UAAArO,MAAA,eAAAoO,UAAAC,UAAArO,MAAA,SACAub,EAAA,qBACAC,EAAA,6BACAC,EAAA3N,SAAAkM,cAAA,OACA0B,EAAA5N,SAAAkM,cAAA,SACA2B,EAAA7N,SAAAkM,cAAA,SACA4B,EAAA9N,SAAAkM,cAAA,MACA6B,GACAC,GAAAH,EACAI,MAAAL,EACAM,MAAAN,EACAO,MAAAP,EACAQ,GAAAN,EACAO,GAAAP,EACAQ,IAAAX,GAEAY,EAAA,mBACA3hB,EAAAvK,MAAAiC,UAAAsI,IACAtG,EAAAjE,MAAAiC,UAAAgC,MAEA,SAAAkoB,EAAAC,EAAAC,GASA,OARAlE,EAAA/mB,YAAAgrB,KACAA,GAAAA,IAEAC,IACAD,EAAA7hB,EAAAhK,KAAA6rB,EAAA,SAAAhP,GACA,OAAAA,EAAAkP,WAAA,MAGAnE,EAAA7e,QAAA8iB,GAGA,SAAAG,EAAAC,EAAAC,GACA,IAAAjtB,EAAAgtB,EAAAD,UAAAC,EAAAD,SAAAlsB,cACA,YAAAkF,IAAAknB,EACAjtB,IAAAitB,EAAApsB,cAEAb,EAiCA,SAAAktB,EAAAC,EAAAvP,GACA,GAAA+K,EAAAxnB,WAAAgsB,GACA,OAAAA,EAAA3mB,MAAAoX,MAEA,GAAA+K,EAAA/mB,YAAAurB,GAAA,CAEA,IADA,IAAAC,EACArtB,EAAA,EAAAA,EAAAotB,EAAAttB,OAAAE,IACA4oB,EAAAxnB,WAAAgsB,EAAAptB,MACAotB,EAAAptB,GAAAotB,EAAAptB,GAAAyG,MAAAoX,MACA+K,EAAA/mB,YAAAurB,EAAAptB,MACAqtB,GAAA,IAIAA,IACAD,EAAAxE,EAAA7e,QAAAqjB,IAGA,OAAAA,EAqBA,SAAAE,EAAAzP,EAAAuP,EAAAN,GACAM,EAAAD,EAAAC,EAAAvP,GAGA,IAFA,IAAA0P,EAAA1P,EACAgP,EAAAD,EAAAQ,EAAAN,GACA9sB,EAAA,EAAAA,EAAA6sB,EAAA/sB,OAAAE,IACAutB,EAAAC,YAAAX,EAAA7sB,IAEA,OAAA0G,KAgCA,SAAA4jB,EAAAmD,EAAA/hB,EAAAC,GACA,IAAAkS,EAQA,GALAA,EADA,OAAApZ,KAAAgpB,GACArP,SAAAsP,gBAAA,6BAAAD,GAEArP,SAAAkM,cAAAmD,GAGA/hB,EACA,IAAA,IAAAzL,KAAAyL,EACAmS,EAAA8P,aAAA1tB,EAAAyL,EAAAzL,IAMA,OAHA0L,GACA2hB,EAAA3hB,EAAAkS,GAEAA,EAiKA,IAAA+P,EAAA,0EAqCA,SAAAC,EAAAhQ,EAAAlS,EAAAmiB,GACA,GAAAA,EACA,OAAAjQ,EAAA0P,aAAA5hB,EAEA,GAAAyS,SAAA2P,gBAAAC,SACA,OAAAriB,EAAAqiB,SAAAnQ,GAEA,KAAAA,GAAA,CACA,GAAAlS,IAAAkS,EACA,OAAA,EAGAA,EAAAA,EAAA0P,WAGA,OAAA,EAoCA,SAAAU,EAAAhB,GACA,OAAAA,EAIA,GAAAA,EAAA1rB,SACA0rB,EAGAA,EAAAiB,cAPA9P,SAkMA,SAAA+P,IACA,OAAAA,EAoFA,OAjFAvF,EAAApiB,MAAA2nB,GACAC,OA9jBA,SAAAC,GAEA,IAAAC,EADAD,EAAAA,GAAAjQ,SAKA,IACAkQ,EAAAD,EAAAE,cACA,MAAA9S,GACA6S,EAAAD,EAAAlL,KAMAmL,IACAA,EAAAD,EAAAlL,MAMAmL,EAAAtB,WACAsB,EAAAD,EAAAlL,MAGA,OAAAmL,GAsiBA3U,MA/gBA,SAAAkE,EAAAuP,EAAAN,GACAM,EAAAD,EAAAC,EAAAvP,GACA,IACAlS,GADA6iB,EAAA3Q,GACA0P,WACA,GAAA5hB,EAIA,IAHA,IAAAkhB,EAAAD,EAAAQ,EAAAN,GACA0B,EAAAA,EAAAC,YAEAzuB,EAAA,EAAAA,EAAA6sB,EAAA/sB,OAAAE,IACAwuB,EACA7iB,EAAA+iB,aAAA7B,EAAA7sB,GAAAwuB,GAEA7iB,EAAA6hB,YAAAX,EAAA7sB,IAIA,OAAA0G,MAigBA4mB,OAAAA,EAEA7T,OAtfA,SAAAoE,EAAAuP,EAAAN,GACAM,EAAAD,EAAAC,EAAAvP,GACA,IAAA2Q,EAAA3Q,EACAlS,EAAA6iB,EAAAjB,WACA,GAAA5hB,EAEA,IADA,IAAAkhB,EAAAD,EAAAQ,EAAAN,GACA9sB,EAAA,EAAAA,EAAA6sB,EAAA/sB,OAAAE,IACA2L,EAAA+iB,aAAA7B,EAAA7sB,GAAAwuB,GAGA,OAAA9nB,MA8eAioB,KAAA,SAAAL,GACAA,EAAAK,QAGAxL,KAAA,WACA,OAAA/E,SAAA+E,MAGA/b,MAtaA,SAAAyW,EAAA/X,GACA,IACAsB,EADAuL,EAAAjM,KAIA,IAAA6kB,GAAA,IAAA1N,EAAAtc,UAAAuE,EACA,OAAA+X,EAAAkP,UAAAjnB,GAIA,IAAAA,EAQA,OAPAsB,EAAAgX,SAAAkM,cAAAzM,EAAAmP,UAGAtlB,KAAAiL,EAAAic,WAAA/Q,GAAA,SAAAqJ,GACAvU,EAAAkc,UAAAznB,EAAA8f,EAAA8F,SAAAra,EAAAmc,UAAAjR,EAAAqJ,EAAA8F,aAGA5lB,GAsZA4mB,SA7YA,SAAAnQ,EAAAkR,GACA,OAAAlB,EAAAkB,EAAAlR,IA8YAmR,SApfA,SAAA/B,GACA,GAAAD,EAAAC,EAAA,UACA,OAAAA,EAAAgC,gBAEA,OAAAhC,EAAAiC,YAkfA5E,cAAAA,EAEA6E,eAzcA,SAAAC,GAGA,GADAA,EAAAxG,EAAAvL,KAAA+R,GACAtD,EAAArnB,KAAA2qB,GACA,OAAA9E,EAAAla,OAAAif,KAGA,IAAApvB,EAAA4rB,EAAApnB,KAAA2qB,IAAAhf,OAAAif,GACApvB,KAAAksB,IACAlsB,EAAA,KAEA,IAAAqvB,EAAAnD,EAAAlsB,GAQA,OAPAqvB,EAAA7L,UA1BA,SAAA8L,GAGA,IAFA,IAAA1vB,EAAA0vB,EAAA1vB,MAAA,MACA2vB,EAAA,GACAxvB,EAAA,EAAAA,EAAAH,EAAAC,OAAA,EAAAE,IAAA,CACA,IAAAyvB,EAAA5vB,EAAAG,GAAAH,MAAA,KACA2vB,GAAA3vB,EAAAG,GAAA,MAAAyvB,EAAAA,EAAA3vB,OAAA,GAAAD,MAAA,KAAA,GAAA,IAEA,OAAA2vB,EAAA3vB,EAAAA,EAAAC,OAAA,GAmBA4vB,CAAA,GAAAN,GACAO,IAAAjrB,EAAA1D,KAAAsuB,EAAAJ,YAEAS,IAAA9uB,QAAA,SAAAgd,GACAyR,EAAAM,YAAA/R,KAGA8R,KAybAE,eA7YA,SAAA9f,GACA,OAAAqO,SAAAyR,eAAA9f,IA8YAse,IAxYA,WACA,OAAAjQ,UAyYA0R,MAlYA,SAAAjS,GACA,KAAAA,EAAAkS,iBAAA,CACA,IAAAhB,EAAAlR,EAAAmS,WACAnS,EAAA+R,YAAAb,GAEA,OAAAroB,MA+XAupB,WA1XA,SAAA3B,GACA,IAAA,IAAAA,EACA1Q,EAAAsS,eAAAzpB,MAAA2X,cACA,CAAA,IAAAkQ,EAIA,OACAlQ,SAAA+R,mBACA/R,SAAAgS,yBACAhS,SAAAiS,sBACAjS,SAAAkS,oBAPA1S,EAAA+M,kBAAAlkB,MAAA6nB,GACAA,IAuXAiC,UA1WA,SAAAC,EAAAC,GACA,IAAAzlB,EAAA0lB,EAAAC,EAAAC,EAAAC,EACA7D,EAAAwD,EAAAxD,SAAAlsB,cAEA,GAAA,SAAAksB,EAGA,OAFAhiB,EAAAwlB,EAAAjD,WACAmD,EAAA1lB,EAAA/K,QACAuwB,EAAA5tB,OAAA8tB,GAAA,QAAA1lB,EAAAgiB,SAAAlsB,kBAGA6vB,EAAAG,EAAA,gBAAAJ,EAAA,OACA5wB,OAAA,GAAA6wB,EAAAI,GAAA,aAGA,0CAAAtsB,KAAAuoB,IACA4D,GAAAJ,EAAA/Z,YAQAoa,EAAAC,EAAAN,GAAAQ,QAAA,YAAA,MAEAJ,GAAAC,EAAApa,UAIAma,EADA,MAAA5D,GACAwD,EAAA5tB,MAEA6tB,EAGA,OAAAG,GAAAE,EAAAN,GAAAO,GAAA,aAAAE,QAAAH,EAAAN,KA0UApB,KA/TA,SAAAvR,EAAAuR,GACA,QAAAppB,IAAAopB,EACA,OAAAvR,EAAA4F,UAOA,GALA/c,KAAAopB,MAAAjS,GACAuR,EAAAA,GAAA,GACAxG,EAAAlnB,SAAA0tB,KACAA,EAAAA,EAAA7qB,QAAAqpB,EAAA,cAEAhF,EAAAlnB,SAAA0tB,IAAAxG,EAAApnB,SAAA4tB,GACAvR,EAAA4F,UAAA2L,OACA,GAAAxG,EAAA/mB,YAAAutB,GACA,IAAA,IAAApvB,EAAA,EAAAA,EAAAovB,EAAAtvB,OAAAE,IACA6d,EAAA2P,YAAA4B,EAAApvB,SAGA6d,EAAA2P,YAAA4B,GAGA,OAAA1oB,MA8SAwqB,SAxPA,SAAAC,GACA,OAAAA,IAAA/S,SAAAmQ,gBAAA4C,EAAAvwB,MAAAuwB,EAAAvuB,OAyPAirB,UAAAA,EAEA7rB,WAjRA,SAAA6b,GACA,OAAA,MAAAA,GAAAA,EAAAtc,UAAAsc,EAAA5b,eAkRAmvB,aA3QA,SAAAvT,GACA,OAAAA,IAAAO,SAAA+E,MAAA/E,SAAA+E,KAAA6K,SAAAnQ,IA4QAlc,SAAAinB,EAAAjnB,SAEAqrB,SAAAA,EAEAqE,aA/MA,SAAApE,GACA,IAAAthB,EAAAshB,EAAAoE,cAAAjT,SAAA+E,KACA,KAAAxX,IAAAghB,EAAAloB,KAAAkH,EAAAqhB,WAAA,UAAA5O,SAAAkT,YAAAC,iBAAA5lB,GAAA6lB,UACA7lB,EAAAA,EAAA0lB,aAEA,OAAA1lB,GA4MAsiB,SAAAA,EAEAwD,YAhPA,SAAAxE,GACA,IAAAoB,EAAAJ,EAAAhB,GACA,OAAAoB,EAAAiD,aAAAjD,EAAAqD,cAgPAC,QAvOA,SAAA9T,EAAAuP,EAAAN,GAIA,IAHA,IAAAS,EAAA1P,EACA2Q,EAAAjB,EAAAyC,WACAnD,EAAAD,EAAAQ,EAAAN,GACA9sB,EAAA,EAAAA,EAAA6sB,EAAA/sB,OAAAE,IACAwuB,EACAjB,EAAAmB,aAAA7B,EAAA7sB,GAAAwuB,GAEAjB,EAAAC,YAAAX,EAAA7sB,IAGA,OAAA0G,MA8NAkrB,OAlKA,SAAA3E,GACA,MAAAqB,KACArB,EAAA7O,UAIA,OAFA6O,EAAA4E,aAEAnrB,MA8JAyO,OA7MA,SAAA0I,GACA,GAAAA,GAAAA,EAAA0P,WACA,IACA1P,EAAA0P,WAAAqC,YAAA/R,GACA,MAAArN,GACA4R,QAAAC,KAAA,8BAAA7R,GAGA,OAAA9J,MAuMAkpB,YApMA,SAAA/R,EAAAiU,GACAlJ,EAAA/mB,YAAAiwB,KACAA,GAAAA,IAEA,IAAA,IAAA9xB,EAAA,EAAAA,EAAA8xB,EAAAhyB,OAAAE,IACA6d,EAAA+R,YAAAkC,EAAA9xB,IAGA,OAAA0G,MA8LAnC,QA1JA,SAAAsZ,EAAAkU,GAEA,OADAA,EAAAxE,WAAAyE,aAAAnU,EAAAkU,GACArrB,MA0JAurB,WAtJA,SAAAd,EAAAc,GACA,QAAAjsB,IAAAmrB,QAAAnrB,IAAAmrB,EAAA9F,MACA,OACA8F,EAAAe,cAAAD,EAAA,WACA,OAAA,GACA,aAEAd,EAAA9F,MAAA8G,cAAAF,EAAA,OAAA,OACAd,EAAA9F,MAAA+G,gBAAAH,EAAA,OAAA,OACAd,EAAAkB,aAAAJ,EAAA,KAAA,OA+IAK,SAvIA,SAAAA,EAAAzU,EAAA9S,GACAA,EAAA8S,GACA,IAAA,IAAA7d,EAAA,EAAAgT,EAAA6K,EAAAqR,WAAApvB,OAAAE,EAAAgT,EAAAhT,IACAsyB,EAAAzU,EAAAqR,WAAAlvB,GAAA+K,GAEA,OAAArE,MAoIAme,QA7HA,SAAAhH,GAEA,IADA,IAAAmS,EAAAnS,EAAAmS,WACAhwB,EAAA6d,EAAAiU,SAAAhyB,OAAA,EAAAE,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,IAAA+uB,EAAAlR,EAAAiU,SAAA9xB,GACA6d,EAAA6Q,aAAAK,EAAAiB,KA0HAuC,QAhHA,SAAA1U,EAAA2U,GACA5J,EAAAlnB,SAAA8wB,KACAA,EAAA9rB,KAAAyoB,eAAAqD,GAAAxC,YAEAnS,EAAA0P,WAAAmB,aAAA8D,EAAA3U,GACA2U,EAAAhF,YAAA3P,IA6GA4U,aArGA,SAAA5U,EAAA2U,GACA,IAAAtD,EAAAxqB,EAAA1D,KAAA6c,EAAAqR,YACArR,EAAA2P,YAAAgF,GACA,IAAA,IAAAxyB,EAAA,EAAAA,EAAAkvB,EAAApvB,OAAAE,IACAwyB,EAAAhF,YAAA0B,EAAAlvB,IAEA,OAAA0G,MAiGAgsB,OA1FA,SAAA7U,GACA,IAAAlS,EAAAkS,EAAA0P,WACA,GAAA5hB,EAAA,CACA,GAAAjF,KAAAisB,MAAAhnB,EAAA4hB,YAAA,OACA5hB,EAAA4hB,WAAAmB,aAAA7Q,EAAAlS,OAyFAxL,EAAAC,OAAA,aAAA+tB,KAEA1uB,OAAA,2BACA,WACA,SAAA0uB,GACA,OAAAA,IAEA1uB,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,8BACA,wBACA,sBACA,uBACA,sBACA,SAAAU,EAAAyoB,EAAAhL,EAAAuQ,GACA,IAAAyE,KACAppB,EAAA/I,MAAAiC,UAAA8G,OACA9E,EAAAjE,MAAAiC,UAAAgC,MACAmuB,EAAAjV,EAAA2M,iBAUA,WAEA,IAAA1X,EACAigB,EACAC,EACAC,EAyDAhO,EAxDApN,KACAqb,KACAC,EAAA,MAEA5gB,EAAA,SAAA6gB,EAAAC,GACA,GAAA,MAAAD,EAAA,OAAA,KACA,IAAA,IAAAA,EAAAE,MAAA,OAAAF,EACAA,GAAA,GAAAA,GAAA5uB,QAAA,aAAA,IAEA,IAAA+uB,GADAN,IAAAI,GACAH,EAAArb,EACA,GAAA0b,EAAAH,GAAA,OAAAG,EAAAH,GAUA,IATAtgB,GACAwgB,OAAA,EACAE,eACAC,IAAAL,EACAtO,QAAA,WACA,OAAAvS,EAAA5L,KAAA8sB,KAAA,KAGAV,GAAA,EACAK,IAAAA,EAAAA,EAAA5uB,QAAAkvB,EAAAC,MAEA,OADA7gB,EAAA/S,OAAA+S,EAAA0gB,YAAAzzB,OACAwzB,EAAAzgB,EAAA2gB,KAAA,EAAA3O,EAAAhS,GAAAA,GAGA8gB,EAAA,SAAAC,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAAnvB,KAAAmvB,GAAAA,EAAArvB,QAAA,KAAA,IACA,IAAAqvB,GAGA/O,EAAA,SAAAsO,GAEA,IADA,IAAAI,EAAAJ,EAAAI,YACAvzB,EAAA,EAAAA,EAAAuzB,EAAAzzB,OAAAE,IAAA,CAQA,IAPA,IAAA6zB,EAAAN,EAAAvzB,GACA8zB,GACAC,SACAtG,IAAA,IACAmG,WAAAD,EAAAE,EAAA,GAAAD,aAGA5pB,EAAA,EAAAA,EAAA6pB,EAAA/zB,OAAAkK,IAAA,CACA,IAAAgqB,EAAAH,EAAA7pB,GACAgqB,EAAAL,oBAAAK,EAAAL,kBAAA,KACAK,EAAAJ,WAAAI,EAAAL,yBACAK,EAAAL,kBAGAE,EAAAhP,UAAApf,KAAAquB,GAEA,OAAAX,GAGAc,GAEAjP,EAAA,kCAEA,SAAA/B,GACA,OAAAA,EAAA1e,QAAAygB,EAFA,QAMAyO,EAAA,IAAArjB,OACA,0QACA7L,QAAA,eAAA,IAAA0vB,EAAA,sBAAA,KACA1vB,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAGA,SAAAmvB,EACAQ,EAEAC,EACAP,EACAQ,EAEAC,EACA7b,EACAxR,EAEAstB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAX,IAAA,IAAArB,KACAjgB,EAAA0gB,cAAAT,MACAC,GAAA,EACAoB,GAAA,MAAA,GAGA,GAAAP,GAAAQ,IAAA,IAAArB,EAAA,CACAa,EAAAA,GAAA,IACA,IAAAmB,EAAAliB,EAAA0gB,YAAAT,GACAE,GAAA+B,EAAAhC,KACAgC,EAAAhC,GAAAY,kBAAAA,EAAAC,IACAmB,IAAAhC,IACAa,WAAAA,EACAnG,IAAA,KAIA,IAAAuH,EAAAniB,EAAA0gB,YAAAT,GAAAC,GAEA,GAAAsB,EACAW,EAAAvH,IAAA4G,EAAA9vB,QAAA2uB,EAAA,SAEA,GAAA1a,EACAwc,EAAAxc,GAAAA,EAAAjU,QAAA2uB,EAAA,SAEA,GAAAlsB,EACAA,EAAAA,EAAAzC,QAAA2uB,EAAA,IAEA8B,EAAAC,YAAAD,EAAAC,cACAD,EAAAE,UAAAF,EAAAE,YACAF,EAAAC,UAAAxvB,KAAAuB,GACAguB,EAAAE,QAAAzvB,MACApE,MAAA2F,EACAysB,OAAA,IAAArjB,OAAA,UAAA6jB,EAAAjtB,GAAA,kBAGA,GAAA2tB,EAEAG,GADAA,EAAAA,GAAAD,GACAC,EAAAvwB,QAAA2uB,EAAA,IAAA,KAEA8B,EAAAG,UAAAH,EAAAG,YACAH,EAAAG,QAAA1vB,MACAD,IAAAmvB,EAAApwB,QAAA2uB,EAAA,IACA7xB,MAAAyzB,EACAl0B,KAAA,GAAA8zB,EAAA50B,OAAA,QAAA,iBAGA,GAAAw0B,EAAA,CAIA,IAAA7vB,EAAAgvB,EAEA,OALAa,EAAAA,EAAA/vB,QAAA2uB,EAAA,IACAuB,GAAAA,GAAA,IAAAlwB,QAAA2uB,EAAA,IAIAqB,GACA,IAAA,KACAd,EAAA,IAAArjB,OAAA,IAAA6jB,EAAAQ,IACA,MACA,IAAA,KACAhB,EAAA,IAAArjB,OAAA6jB,EAAAQ,GAAA,KACA,MACA,IAAA,KACAhB,EAAA,IAAArjB,OAAA,UAAA6jB,EAAAQ,GAAA,WACA,MACA,IAAA,KACAhB,EAAA,IAAArjB,OAAA,IAAA6jB,EAAAQ,GAAA,SACA,MACA,IAAA,IACAhwB,EAAA,SAAApD,GACA,OAAAozB,GAAApzB,GAEA,MACA,IAAA,KACAoD,EAAA,SAAApD,GACA,OAAAA,GAAAA,EAAAiH,QAAAmsB,IAAA,GAEA,MACA,IAAA,KACAhwB,EAAA,SAAApD,GACA,OAAAozB,GAAApzB,GAEA,MACA,QACAoD,EAAA,SAAApD,GACA,QAAAA,GAIA,IAAAozB,GAAA,WAAAhwB,KAAA8vB,KAAA9vB,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAApD,GACA,OAAAA,GAAAoyB,EAAAhvB,KAAApD,KAGA2zB,EAAArO,aAAAqO,EAAArO,eACAqO,EAAArO,WAAAlhB,MACAD,IAAA8uB,EACAc,SAAAb,EACAlzB,MAAAozB,EACAhwB,KAAAA,IAKA,MAAA,GAKA,IAAA4uB,EAAA3sB,KAAA2sB,UAEAA,EAAA/gB,MAAA,SAAA6gB,GACA,OAAA7gB,EAAA6gB,IAGAE,EAAAY,aAAAA,EAEAvtB,KAAA2sB,QAAA3sB,KAAA2sB,MAAAA,KAEA5sB,MAAAmsB,GAGA,IAEAyC,EAAA,sCACAC,EAAA,SACA5wB,EAAAjE,MAAAiC,UAAAgC,MAGAkuB,EAAA2C,cAAA3C,EAAAS,MAAA/gB,MAGA,IAAA6iB,EAAAvC,EAAAuC,SAEAK,OAAA,SAAArE,GACA,IAAAlxB,EAAAkxB,EAAAnE,SAAAlsB,cACA,MAAA,UAAAb,GAAA,WAAAkxB,EAAAvwB,MAAA,WAAAX,GAGAuW,QAAA,SAAAyW,GACA,QAAAA,EAAAzW,SAGAwX,SAAA,SAAAf,EAAA/jB,EAAA2jB,EAAA9c,GACA,GAAA+gB,EAAApqB,MAAAqJ,OAAAzH,QAAAyH,IAAA,EAAA,OAAArJ,MAGA+P,SAAA,SAAAwW,GACA,QAAAA,EAAAxW,UAGAgf,QAAA,SAAAxI,GACA,OAAAA,EAAAxW,UAGA1R,GAAA,SAAAkoB,EAAA/jB,EAAA2jB,EAAAxrB,GACA,OAAA6H,GAAA7H,GAGAq0B,KAAA,SAAAzI,EAAA/jB,EAAA2jB,EAAAxrB,GACA,OAAA6H,EAAA,GAAA,GAGAysB,MAAA,SAAA1I,GACA,OAAA7O,SAAAmQ,gBAAAtB,IAAAA,EAAArqB,MAAAqqB,EAAArsB,MAAAqsB,EAAA2I,WAGArF,UAAA,SAAAtD,GACA,OAAAkB,EAAAoC,UAAAtD,EAAA,MAAAA,EAAA2I,WAGA1rB,MAAA,SAAA+iB,EAAA/jB,GACA,OAAA,IAAAA,GAGA2sB,GAAA,SAAA5I,EAAA/jB,EAAA2jB,EAAAxrB,GACA,OAAA6H,EAAA7H,GAGAqE,IAAA,SAAAunB,EAAA/jB,EAAA2jB,EAAAiJ,GACA,OAAArsB,EAAAwjB,EAAA6I,IAIAC,OAAA,SAAA5E,GACA,OAAAmE,EAAA7wB,KAAA0sB,EAAAnE,WAGAgJ,OAAA,SAAA/I,GACA,OAAA2F,EAAAuC,QAAA,QAAAlI,IAGA1H,MAAA,SAAA4L,GACA,OAAAkE,EAAA5wB,KAAA0sB,EAAAnE,WAGA8G,KAAA,SAAA7G,EAAA/jB,EAAA2jB,GACA,OAAA3jB,IAAA2jB,EAAA/sB,OAAA,GAGAm2B,GAAA,SAAAhJ,EAAA/jB,EAAA2jB,EAAAxrB,GACA,OAAA6H,EAAA7H,GAGA60B,IAAA,SAAAjJ,EAAA/jB,EAAA2jB,EAAAiJ,GACA,OAAAxd,EAAA2U,EAAA6I,IAGAK,IAAA,SAAAlJ,EAAA/jB,EAAA2jB,EAAAxrB,GACA,OAAA6H,EAAA,GAAA,GAOAyC,OAAA,SAAAshB,GACA,QAAAA,EAAAM,YAGA6I,SAAA,SAAAnJ,GACA,QAAAA,EAAAmJ,UAGAC,SAAA,SAAApJ,GACA,IAAAqJ,EAAArJ,EAAA2I,SACAnF,EAAA,MAAA6F,EACA,QAAA7F,GAAA6F,GAAA,IAAAnI,EAAAoC,UAAAC,QAAAC,IAGA1gB,KAAA,SAAAkd,GACA,MAAA,SAAAA,EAAArsB,MAGAqwB,QAAA,SAAAhE,GACA,OAAAA,EAAAsJ,aAAAtJ,EAAAsJ,aAEAzG,MAAA,SAAA7C,GACA,OAAAA,EAAA8C,kBAYA,SAAAyG,EAAA51B,GACA,OAAA,SAAAuwB,GACA,IAAAlxB,EAAAkxB,EAAAnE,SAAAlsB,cACA,MAAA,UAAAb,GAAAkxB,EAAAvwB,OAAAA,GAIA,SAAA61B,EAAA71B,GACA,OAAA,SAAAuwB,GACA,IAAAlxB,EAAAkxB,EAAAnE,SAAAlsB,cACA,OAAA,UAAAb,GAAA,WAAAA,IAAAkxB,EAAAvwB,OAAAA,GAKA,IAAAZ,KAvBA,QAAA,KAAA,QAAAa,QAAA,SAAAoI,GACAksB,EAAAlsB,GAAAytB,eAAA,IAKAvB,EAAA,IAAAA,EAAA,IAkBAwB,OAAA,EACAC,UAAA,EACAC,MAAA,EACAC,UAAA,EACAC,OAAA,GAEA5B,EAAAn1B,GAAAw2B,EAAAx2B,GAEA,IAAAA,KACAg3B,QAAA,EACAC,OAAA,GAEA9B,EAAAn1B,GAAAy2B,EAAAz2B,GAiWA,SAAAk3B,EAAArZ,EAAApL,EAAA0kB,GAGA,IAFA,IAAA3pB,KACA4pB,EAAAD,GAAAvO,EAAAlnB,SAAAy1B,IACAtZ,EAAAA,EAAA0P,aAAA,IAAA1P,EAAAtc,UAAA,CACA,GAAA41B,EACA,GAAAC,GACA,GAAA9e,EAAAuF,EAAAsZ,GACA,WAEA,GAAAvO,EAAA/mB,YAAAs1B,IACA,GAAAvO,EAAAre,QAAAsT,EAAAsZ,IAAA,EACA,WAEA,GAAAtZ,GAAAsZ,EACA,MAGA1kB,IAAA6F,EAAAuF,EAAApL,IACAjF,EAAA/H,KAAAoY,GAOA,OAAArQ,EAkBA,SAAAskB,EAAAjU,EAAApL,GAGA,IAFA,IAAAyc,EAAArR,EAAAqR,WACA1hB,KACAxN,EAAA,EAAAA,EAAAkvB,EAAApvB,OAAAE,IAAA,CACA,IAAA6d,EAAAqR,EAAAlvB,GACA,GAAA6d,EAAAtc,UACAiM,EAAA/H,KAAAoY,GAMA,OAHApL,IACAjF,EAAAolB,EAAAppB,OAAAgE,EAAAiF,IAEAjF,EAgBA,SAAA6pB,EAAApK,EAAAxa,GAEA,IACA,OAAA/N,EAAA1D,KAAAisB,EAAAqK,iBAAA7kB,IACA,MAAA8kB,IAGA,OAAA3E,EAAApb,MAAAyV,EAAAxa,GAQA,SAAA+kB,EAAAvK,EAAAxa,GAEA,IACA,OAAAwa,EAAAwK,cAAAhlB,GACA,MAAA8kB,IAGA,IAAA1K,EAAA+F,EAAApb,MAAAyV,EAAAxa,GACA,OAAAoa,EAAA/sB,OAAA,EACA+sB,EAAA,GAEA,KASA,SAAApjB,EAAAwjB,EAAAxa,GAKA,OAJAA,IACAA,EAAAwa,EACAA,EAAA7O,SAAA+E,MAEA7K,EAAA2U,EAAAxa,GACAwa,EAEAuK,EAAAvK,EAAAxa,GAuBA,SAAAud,EAAA/C,EAAAxa,EAAAvI,GAGA,IAFA,IAAAglB,EAAAjC,EAAAiC,WACArR,EAAAqR,EAAA,GACArR,GAAA,CACA,GAAA,GAAAA,EAAAtc,SAAA,CACA,IAAAkR,GAAA6F,EAAAuF,EAAApL,GACA,OAAAoL,EAEA,GAAA3T,EACA,MAGA2T,EAAAA,EAAA4Q,YAGA,OAAA,KASA,SAAAiJ,EAAAzK,EAAAxa,EAAAqhB,GAGA,IAFA,IAAA5E,EAAAjC,EAAAiC,WACArR,EAAAqR,EAAAA,EAAApvB,OAAA,GACA+d,GAAA,CACA,GAAA,GAAAA,EAAAtc,SAAA,CACA,IAAAkR,GAAA6F,EAAAuF,EAAApL,GACA,OAAAoL,EAEA,GAAAiW,EACA,MAGAjW,EAAAA,EAAA8Z,gBAGA,OAAA,KAQA,SAAArf,EAAA2U,EAAAxa,GACA,IAAAA,IAAAwa,GAAA,IAAAA,EAAA1rB,SACA,OAAA,EAGA,GAAAqnB,EAAAlnB,SAAA+Q,GAAA,CACA,IACA,OAAAogB,EAAA7xB,KAAAisB,EAAAxa,EAAAlO,QAAA,iCAAA,cACA,MAAAgzB,IAGA,OAAA3E,EAAAtiB,MAAA2c,EAAAxa,GACA,OAAAmW,EAAA/mB,YAAA4Q,GACAmW,EAAAre,QAAA0iB,EAAAxa,IAAA,EACAmW,EAAArmB,cAAAkQ,GACAmgB,EAAAgF,MAAA3K,EAAAxa,GAEAwa,IAAAxa,EAWA,SAAAgc,EAAAxB,EAAAxa,EAAAolB,GAEA,IADA,IAAAha,EAAAoP,EAAAwB,YACA5Q,GAAA,CACA,GAAA,GAAAA,EAAAtc,SAAA,CACA,IAAAkR,GAAA6F,EAAAuF,EAAApL,GACA,OAAAoL,EAEA,GAAAga,EACA,MAGAha,EAAAA,EAAA4Q,YAEA,OAAA,KAQA,SAAAqJ,EAAA7K,EAAAxa,GAGA,IAFA,IAAAoL,EAAAoP,EAAAwB,YACAjhB,KACAqQ,GACA,GAAAA,EAAAtc,WACAkR,IAAA6F,EAAAuF,EAAApL,IACAjF,EAAA/H,KAAAoY,IAGAA,EAAAA,EAAA4Q,YAEA,OAAAjhB,EAQA,SAAA7B,EAAAshB,EAAAxa,GACA,IAAAoL,EAAAoP,EAAAM,WACA,OAAA1P,GAAApL,IAAA6F,EAAAuF,EAAApL,GAIA,KAHAoL,EAYA,SAAA8Z,EAAA1K,EAAAxa,EAAAolB,GAEA,IADA,IAAAha,EAAAoP,EAAA0K,gBACA9Z,GAAA,CACA,GAAA,GAAAA,EAAAtc,SAAA,CACA,IAAAkR,GAAA6F,EAAAuF,EAAApL,GACA,OAAAoL,EAEA,GAAAga,EACA,MAGAha,EAAAA,EAAA8Z,gBAEA,OAAA,KAQA,SAAAI,EAAA9K,EAAAxa,GAGA,IAFA,IAAAoL,EAAAoP,EAAA0K,gBACAnqB,KACAqQ,GACA,GAAAA,EAAAtc,WACAkR,IAAA6F,EAAAuF,EAAApL,IACAjF,EAAA/H,KAAAoY,IAGAA,EAAAA,EAAA8Z,gBAEA,OAAAnqB,EAQA,SAAAwqB,EAAA/K,EAAAxa,GAGA,IAFA,IAAAoL,EAAAoP,EAAAM,WAAAyC,WACAxiB,KACAqQ,GACA,GAAAA,EAAAtc,UAAAsc,IAAAoP,IACAxa,IAAA6F,EAAAuF,EAAApL,IACAjF,EAAA/H,KAAAoY,IAGAA,EAAAA,EAAA4Q,YAEA,OAAAjhB,EA3pBAolB,EAAAqF,OAAA,SAAAC,GACA,IAEAzK,EACAjV,EACA0c,EACAvO,EACAwO,EANAgD,EAAA,GACAC,KAWA,IAHA5f,EAAA0f,EAAA1f,MACA2f,GAAA,IAAA3f,GAEA0c,EAAAgD,EAAAhD,QACA,IAAA,IAAAl1B,EAAAk1B,EAAAp1B,OAAAE,KACAm4B,GAAA,IAAAjD,EAAAl1B,GAAAqB,MAGA,GAAAslB,EAAAuR,EAAAvR,WACA,IAAA,IAAA3mB,EAAA,EAAAA,EAAA2mB,EAAA7mB,OAAAE,IACA2mB,EAAA3mB,GAAAo1B,SACA+C,GAAA,IAAAxR,EAAA3mB,GAAAwF,IAAAmhB,EAAA3mB,GAAAo1B,SAAAtR,KAAAQ,UAAAqC,EAAA3mB,GAAAqB,OAAA,IAEA82B,GAAA,IAAAxR,EAAA3mB,GAAAwF,IAAA,IAIA,GAAA2vB,EAAA+C,EAAA/C,QACA,IAAAn1B,EAAAm1B,EAAAr1B,OAAAE,KACAq4B,KAAAlD,EAAAn1B,GACA0G,KAAAyuB,QAAAkD,KAAA7yB,KACA4yB,EAAA3yB,KAAA4yB,WAEAryB,IAAAqyB,KAAAh3B,QACA82B,GAAA,IAAAE,KAAA7yB,IAAA,IAAAse,KAAAQ,UAAA+T,OAgBA,OAVA5K,EAAAyK,EAAAzK,MACA,MAAAA,IACA0K,EAAA1K,EAAA9J,cAAAwU,GAIAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKAxF,EAAAgF,MAAA,SAAA/Z,EAAAqa,EAAAhvB,EAAA2jB,EAAAyL,GACA,IAAA7K,EACAjV,EACA0c,EACAvO,EACAwO,EAEAn1B,EAAAq4B,EAAAjsB,EAAAmsB,EAEA,IAAAD,EAAA,CACA,GAAA7K,EAAAyK,EAAAzK,IAAA,CACA,IAAAT,EAAAnP,EAAAmP,SAAArJ,cACA,GAAA,KAAA8J,GACA,GAAAT,EAAA,IAAA,OAAA,OAEA,GAAAA,IAAAS,GAAA,IAAA9J,cAAA,OAAA,EAIA,IAAAnL,EAAA0f,EAAA1f,KACAqF,EAAA2a,aAAA,OAAAhgB,EACA,OAAA,EAKA,GAAA0c,EAAAgD,EAAAhD,QACA,IAAAl1B,EAAAk1B,EAAAp1B,OAAAE,KAEA,KADAoM,EAAAyR,EAAA2a,aAAA,YACAtD,EAAAl1B,GAAAyzB,OAAAhvB,KAAA2H,GAAA,OAAA,EAIA,GAAAua,EAAAuR,EAAAvR,WACA,IAAA3mB,EAAA2mB,EAAA7mB,OAAAE,KAEA,IADAq4B,EAAA1R,EAAA3mB,IACAo1B,UAAAiD,EAAA5zB,KAAAoZ,EAAA2a,aAAAH,EAAA7yB,OAAAqY,EAAA4a,aAAAJ,EAAA7yB,KAAA,OAAA,EAKA,GAAA2vB,EAAA+C,EAAA/C,QACA,IAAAn1B,EAAAm1B,EAAAr1B,OAAAE,KAEA,GADAq4B,EAAAlD,EAAAn1B,GACAu4B,EAAA7xB,KAAAyuB,QAAAkD,EAAA7yB,MACA,IAAA8yB,GAAAC,EAAA7B,gBAAA4B,IAAAC,EAAA7B,iBACA6B,EAAA1a,EAAA3U,EAAA2jB,EAAAwL,EAAAh3B,OACA,OAAA,OAIA,IAAAi3B,IAAAzF,EAAA7xB,KAAA6c,EAAAwa,EAAA7yB,KACA,OAAA,EAKA,OAAA,GAGAotB,EAAAtiB,MAAA,SAAAuN,EAAApL,GAEA,IAAAI,EAQA,KALAA,EADA+V,EAAAlnB,SAAA+Q,GACAmgB,EAAAS,MAAA/gB,MAAAG,GAEAA,GAIA,OAAA,EAIA,IAEAzS,EACA04B,EAHAnF,EAAA1gB,EAAA0gB,YACAoF,EAAA,EAGA,IAAA34B,EAAA,EACA04B,EAAAnF,EAAAvzB,GAAAA,IACA,GAAA,GAAA04B,EAAA54B,OAAA,CACA,IAAA+zB,EAAA6E,EAAA,GACA,GAAAhyB,KAAAkxB,MAAA/Z,EAAAgW,GACA,OAAA,EAEA8E,IAIA,GAAAA,GAAA9lB,EAAA/S,OACA,OAAA,EAGA,IACAmJ,EADA4jB,EAAAnmB,KAAA8Q,MAAA4G,SAAAvL,GAEA,IAAA7S,EAAA,EAAAiJ,EAAA4jB,EAAA7sB,MACA,GAAAiJ,IAAA4U,EACA,OAAA,EAGA,OAAA,GAIA+U,EAAAgG,aAAA,SAAA/L,EAAAgH,GACA,IAAAgF,EAAArvB,EAAAxI,KAAA6rB,EAAA,SAAAhP,EAAA3U,GACA,OAAA0pB,EAAAgF,MAAA/Z,EAAAgW,EAAA3qB,EAAA2jB,GAAA,KAMA,OAHAgM,EAAArvB,EAAAxI,KAAA63B,EAAA,SAAAhb,EAAA3U,GACA,OAAA0pB,EAAAgF,MAAA/Z,EAAAgW,EAAA3qB,EAAA2vB,GAAA,MAKAjG,EAAAppB,OAAA,SAAAqjB,EAAApa,GAGA,IAAAmW,EAAAlnB,SAAA+Q,GAGA,OAAAmgB,EAAAgG,aAAA/L,EAAApa,GAIA,IACAzS,EACA04B,EAFAnF,EANAX,EAAAS,MAAA/gB,MAAAG,GAMA8gB,YAGA/lB,KACA,IAAAxN,EAAA,EACA04B,EAAAnF,EAAAvzB,GAAAA,IAAA,CACA,GAAA,GAAA04B,EAAA54B,OAOA,MAAA,IAAAkM,MAAA,0BAAAyG,GANA,IAAAohB,EAAA6E,EAAA,GAEAG,EAAAjG,EAAAgG,aAAA/L,EAAAgH,GAEArmB,EAAAob,EAAAxd,KAAAoC,EAAA7C,OAAAkuB,IAMA,OAAArrB,GAIAolB,EAAAkG,QAAA,SAAA7L,EAAA8L,GACA,IAEAC,EAFAC,EAAAF,EAAAnF,WACAsE,EAAAa,EAEAlM,KAEA,OAAAoM,GACA,IAAA,IACApM,EAAAiF,EAAA7E,EAAAiL,GACA,MACA,IAAA,KACAc,EAAAvK,EAAAxB,EAAAiL,GAAA,KAEArL,EAAApnB,KAAAuzB,GAEA,MACA,IAAA,KACAA,EAAAhJ,EAAA/C,EAAAiL,GAAA,KAEArL,EAAApnB,KAAAuzB,GAEA,MACA,IAAA,IACAnM,EAAAiL,EAAA7K,EAAAiL,GACA,MACA,IAAA,KACA,IAAAvQ,EAAAgQ,EAAA1K,EAAAiL,GAAA,GACA5jB,EAAAma,EAAAxB,EAAAiL,GAAA,GACAvQ,GACAkF,EAAApnB,KAAAkiB,GAEArT,GACAuY,EAAApnB,KAAA6O,GAEA,MACA,IAAA,KACAuY,EAAAmL,EAAA/K,EAAAiL,GACA,MACA,IAAA,IACArL,EAAAqK,EAAAjK,EAAAiL,GACA,MACA,IAAA,MACAc,EAAArtB,EAAAshB,EAAAiL,KAEArL,EAAApnB,KAAAuzB,GAEA,MACA,IAAA,KACAnM,EAAA8K,EAAA1K,EAAAiL,GAAA,GACA,MACA,IAAA,MACAc,EAAAtB,EAAAzK,EAAAiL,GAAA,KAEArL,EAAApnB,KAAAuzB,GAEA,MACA,IAAA,KACAnM,EAAAkL,EAAA9K,EAAAiL,GACA,MACA,QACA,IAAAgB,EAAAxyB,KAAAuxB,OAAAc,GAEA,GADAlM,EAAAnoB,EAAA1D,KAAAisB,EAAAqK,iBAAA4B,EAAAf,iBACAe,EAAAd,cACA,IAAA,IAAAp4B,EAAAk5B,EAAAd,cAAAt4B,OAAA,EAAAE,GAAA,EAAAA,IACA6sB,EAAArjB,EAAAxI,KAAA6rB,EAAA,SAAA5jB,EAAAC,GACA,OAAA0pB,EAAAgF,MAAA3uB,GACAksB,SAAA+D,EAAAd,cAAAp4B,KACAkJ,EAAA2jB,GAAA,KAGAA,EAAArjB,EAAAxI,KAAA6rB,EAAA,SAAA5jB,EAAAC,GACA,OAAA0pB,EAAAgF,MAAA3uB,GACAksB,SAAA+D,EAAAd,cAAAp4B,KACAkJ,EAAA2jB,GAAA,KAOA,OAAAA,GAGA+F,EAAApb,MAAA,SAAAqG,EAAApL,EAAA0mB,GAUA,IAPA,IAIAT,EAAAU,EAJAvmB,EAAAnM,KAAA2sB,MAAA/gB,MAAAG,GAGA4mB,KAEA9F,EAAA1gB,EAAA0gB,YAEAvzB,EAAA,EACA04B,EAAAnF,EAAAvzB,GAAAA,IAAA,CAGA,IAFA,IACAs5B,EADAC,GAAA1b,GAEA7T,EAAA,EACAovB,EAAAV,EAAA1uB,GAAAA,KACAsvB,EAAA1Q,EAAA5d,IAAAuuB,EAAA,SAAAtwB,EAAAjJ,GACA,OAAA4yB,EAAAkG,QAAA7vB,EAAAmwB,QAGAG,EAAAD,GAGAA,IACAD,EAAAA,EAAA1uB,OAAA2uB,IAIA,OAAAD,GAmWA,IAAAG,EAAA,WACA,OAAAA,GA4CA,OAzCA5Q,EAAApiB,MAAAgzB,GAEAC,SAhWA,SAAA5b,EAAApL,EAAA0kB,GACA,IAAAC,EAAAD,GAAAvO,EAAAlnB,SAAAy1B,GACA,KAAAtZ,EAAAA,EAAA0P,YAAA,CACA,GAAAjV,EAAAuF,EAAApL,GACA,OAAAoL,EAEA,GAAAsZ,EACA,GAAAC,GACA,GAAA9e,EAAAuF,EAAAsZ,GACA,WAEA,GAAAtZ,GAAAsZ,EACA,MAIA,OAAA,MAkVAD,UAAAA,EAEAwC,KA1SA,SAAAlhB,EAAA6V,GAEA,OADAA,EAAAA,GAAAF,EAAAE,OACA7K,eAAAhL,IA0SAsZ,SAAAA,EAEAd,QArRA,SAAAnT,EAAApL,GACA,KAAAoL,IAAAvF,EAAAuF,EAAApL,IACAoL,EAAAA,EAAA0P,WAGA,OAAA1P,GAkRA2Z,WAAAA,EAEAH,YAAAA,EAEA5tB,KAAAA,EAEAkwB,QA5NA,SAAA1M,EAAAxa,GACAA,IACAA,EAAAwa,EACAA,EAAA7O,SAAA+E,MAEA,OAAAkU,EAAApK,EAAAxa,IAyNAud,WAAAA,EAEA0H,UAAAA,EAEApf,QAAAA,EAEAmW,YAAAA,EAEAqJ,aAAAA,EAEAnsB,OAAAA,EAEAgsB,gBAAAA,EAEAI,iBAAAA,EAEA5C,QAAAvC,EAAAuC,QAEA6C,SAAAA,IAGA73B,EAAAC,OAAA,cAAAo5B,KAEA/5B,OAAA,4BACA,YACA,SAAA+5B,GAEA,OAAAA,IAEA/5B,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,sBACA,sBACA,SAAAU,EAAAyoB,EAAA4Q,EAAArL,GACA,IAAAnjB,EAAAvK,MAAAiC,UAAAsI,IAEA0Y,GADAjjB,MAAAiC,UAAA8G,OACAof,EAAAlF,WACAG,EAAA+E,EAAA/E,iBAEA+V,EAAA,WACAC,GACAjE,SAAA,WACAkE,SAAA,WACAC,IAAA,UACAC,MAAA,YACAC,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,mBAUA,IAAAC,GACAC,QACA7lB,IAAA,SAAAsc,GACA,IAAAhK,EAAAgK,EAAAqH,aAAA,SACA,OAAA,MAAArR,EAAAA,GAAApX,EAAAohB,GATA7gB,MAAA,0BACAD,KAAA,OAWAsqB,QACA9lB,IAAA,SAAAsc,GACA,IAAA9vB,EAAAq5B,EAAA16B,EACA6L,EAAAslB,EAAAtlB,QACArE,EAAA2pB,EAAAyJ,cACAlpB,EAAA,eAAAyf,EAAAvwB,KACA+F,EAAA+K,EAAA,QACA4N,EAAA5N,EAAAlK,EAAA,EAAAqE,EAAA/L,OAUA,IAPAE,EADAwH,EAAA,EACA8X,EAGA5N,EAAAlK,EAAA,EAIAxH,EAAAsf,EAAAtf,IAGA,IAFA06B,EAAA7uB,EAAA7L,IAEAo2B,WAGAsE,EAAAjkB,YACAikB,EAAAnN,WAAA9W,WACA0X,EAAAnB,SAAA0N,EAAAnN,WAAA,aAAA,CAMA,GAHAlsB,EAAA8lB,EAAAuT,GAGAhpB,EACA,OAAArQ,EAIAsF,EAAAlB,KAAApE,GAIA,OAAAsF,GAGAqO,IAAA,SAAAmc,EAAA9vB,GAMA,IALA,IAAAw5B,EAAAH,EACA7uB,EAAAslB,EAAAtlB,QACAlF,EAAAiiB,EAAApe,UAAAnJ,GACArB,EAAA6L,EAAA/L,OAEAE,OACA06B,EAAA7uB,EAAA7L,IAIAo2B,SACAxN,EAAAre,QAAAkwB,EAAAC,OAAA7lB,IAAA6lB,GAAA/zB,IAAA,KAEAk0B,GAAA,GAUA,OAHAA,IACA1J,EAAAyJ,eAAA,GAEAj0B,KA6CA,SAAAugB,EAAA+F,EAAAhtB,EAAAoB,GACA,QAAA2E,IAAA3E,EAAA,CACA,GAAA,iBAAApB,EAAA,CACA,IAAA,IAAA66B,KAAA76B,EACAinB,EAAA+F,EAAA6N,EAAA76B,EAAA66B,IAEA,OAAAp0B,KAEA,OAAAumB,EAAAuL,aAAAvL,EAAAuL,aAAAv4B,GAAAgtB,EAAAhtB,GAIA,OADAgtB,EAAAU,aAAAV,EAAAU,aAAA1tB,EAAAoB,GAAA4rB,EAAAhtB,GAAAoB,EACAqF,KAoBA,SAAAq0B,EAAA9N,EAAA+N,GACA,IAAAC,EAAAhO,EAAA,SAIA,OAHAgO,GAAAD,IACAC,EAAAhO,EAAA,SAbA,SAAAA,GACA,IAAAgO,KAMA,OALArS,EAAAlhB,KAAAulB,EAAAtG,eAAA,SAAA3mB,EAAAknB,GACA,GAAAA,EAAAjnB,KAAAqI,QAAA,WACA2yB,EAAAvX,EAAAwD,EAAAjnB,KAAAsE,QAAA,QAAA,MAAAsf,EAAAqD,EAAA7lB,UAGA45B,EAMAC,CAAAjO,IAEAgO,EAuBA,SAAAE,EAAAlO,EAAAhtB,EAAAoB,GACA,IAAA45B,EAAAF,EAAA9N,GAAA,GACAgO,EAAAvX,EAAAzjB,IAAAoB,EAUA,SAAA2O,EAAAid,EAAAhtB,EAAAoB,GAEA,QAAA2E,IAAA3E,EAAA,CACA,GAAA,iBAAApB,EAAA,CACA,IAAA,IAAAm7B,KAAAn7B,EACAk7B,EAAAlO,EAAAmO,EAAAn7B,EAAAm7B,IAEA,OAAA10B,KAEA,OAzCA,SAAAumB,EAAAhtB,GACA,QAAA+F,IAAA/F,EACA,OAAA86B,EAAA9N,GAAA,GAEA,IAAAgO,EAAAF,EAAA9N,GACA,GAAAgO,EAAA,CACA,GAAAh7B,KAAAg7B,EACA,OAAAA,EAAAh7B,GAEA,IAAAo7B,EAAA3X,EAAAzjB,GACA,GAAAo7B,KAAAJ,EACA,OAAAA,EAAAI,GAGA,IAAAP,EAAA,QAAA76B,EAAAsE,QAAAq1B,EAAA,OAAA94B,cACA,OAAAomB,EAAA+F,EAAA6N,GA0BAQ,CAAArO,EAAAhtB,GAIA,OADAk7B,EAAAlO,EAAAhtB,EAAAoB,GACAqF,KAQA,SAAA60B,EAAAtO,GACAA,EAAA,iBACAA,EAAA,SAiFA,SAAAld,EAAAkd,EAAAuO,GACA,YAAAx1B,IAAAw1B,EACAvO,EAAAwO,aAEAxO,EAAAwO,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACA90B,MASA,SAAAygB,EAAA8F,EAAA5rB,GACA,IAAAq6B,EAAAjB,EAAAxN,EAAArsB,OAAA65B,EAAAxN,EAAAD,SAAAlsB,eACA,QAAAkF,IAAA3E,EAgBA,OAAAq6B,GAAA,QAAAA,QAAA11B,KAAAwH,IAAAkuB,EAAA7mB,IAAAoY,EAAA,UACAzf,KAGAA,IAAAyf,EAAA5rB,MAGA,iBAAAmM,IACAA,IAAAjJ,QAAA,MAAA,IAIA,MAAAiJ,IAAA,GAAAA,KAYA,MAAAnM,EACAA,EAAA,GAEA,iBAAAA,EACAA,GAAA,GAEAunB,EAAAloB,QAAAW,KACAA,EAAAunB,EAAA5d,IAAA3J,EAAA,SAAAs6B,GACA,OAAA,MAAAA,EAAA,GAAAA,EAAA,MAKAD,GAAA,QAAAA,QAAA11B,IAAA01B,EAAA1mB,IAAAiY,EAAA5rB,EAAA,WACA4rB,EAAA5rB,MAAAA,GAWA,SAAAu6B,IACA,OAAAA,EA6BA,OArUAhT,EAAAlhB,MAAA,QAAA,YAAA,WACA+yB,EAAA/zB,OACAsO,IAAA,SAAAmc,EAAA9vB,GACA,GAAAunB,EAAAloB,QAAAW,GACA,OAAA8vB,EAAA3a,QAAAoS,EAAAre,QAAA4c,EAAAgK,GAAA9vB,IAAA,MA8RAm4B,EAAArE,QAAAnlB,KAAA,SAAAmhB,EAAAnxB,EAAAsQ,EAAAurB,GACA,QAAA7rB,EAAAmhB,EAAA0K,GAAAvrB,EAAA,KAQAsY,EAAApiB,MAAAo1B,GACAE,KAjRA,SAAA7O,EAAAhtB,EAAAoB,GACA,OAAAqF,KAAAwgB,KAAA+F,EAAA,QAAAhtB,EAAAoB,IAkRA6lB,KAAAA,EAEAqU,UAAAA,EAEAvrB,KAAAA,EAEA+rB,MAlJA,SAAAlP,EAAAmP,GACA,OAAAhxB,EAAAhK,KAAA6rB,EAAA,SAAAI,GACA,OAAAA,EAAA+O,MAkJA3yB,KAxIA,SAAA4jB,EAAAhtB,EAAAoB,GAEA,OADApB,EAAA45B,EAAA55B,IAAAA,OACA+F,IAAA3E,EACA4rB,EAAAhtB,IAEAgtB,EAAAhtB,GAAAoB,EACAqF,OAoIAu1B,WA3HA,SAAAhP,EAAAhtB,GAIA,OAHAA,EAAAJ,MAAA,KAAAgB,QAAA,SAAAqmB,IA3KA,SAAA+F,EAAAhtB,EAAAoB,GACA,MAAAA,EACA4rB,EAAAiP,gBAAAj8B,GAEAgtB,EAAAU,aAAA1tB,EAAAoB,GAwKAssB,CAAAV,EAAA/F,KAEAxgB,MAyHAy1B,WA5KA,SAAAlP,EAAAmP,GACA,GAAAA,EAAA,CACAxT,EAAAlnB,SAAA06B,KACAA,EAAAA,EAAAv8B,MAAA,QAEA,IAAAo7B,EAAAF,EAAA9N,GAAA,GACAmP,EAAAv7B,QAAA,SAAAZ,UACAg7B,EAAAh7B,UAGAs7B,EAAAtO,GAEA,OAAAvmB,MAkKA21B,WAlHA,SAAApP,EAAAhtB,GAIA,OAHAA,EAAAJ,MAAA,KAAAgB,QAAA,SAAAwI,UACA4jB,EAAA5jB,KAEA3C,MAgHAqJ,KAAAA,EAEAoX,IAAAA,EAEAsT,SAAAA,IAGAt6B,EAAAC,OAAA,YAAAw7B,KAEAn8B,OAAA,4BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAAyoB,EAAAuF,EAAAqL,GACA,IAUA8C,EAVAC,EAAA97B,MAAAiC,UAAA65B,KACA92B,EAAAhF,MAAAiC,UAAA+C,KAGAf,GAFAjE,MAAAiC,UAAA85B,MACA/7B,MAAAiC,UAAAiI,OACAlK,MAAAiC,UAAAgC,OAEA8E,GADA/I,MAAAiC,UAAAsI,IACAvK,MAAAiC,UAAA8G,QACA3I,EAAAJ,MAAAiC,UAAA7B,QACAyH,EAAA7H,MAAAiC,UAAA4F,QACAyP,EAAAtX,MAAAiC,UAAAqV,KAGA0kB,EAAA,2CAEA5T,EAAAD,EAAAC,QACAhnB,EAAA+mB,EAAA/mB,YACAH,EAAAknB,EAAAlnB,SACA0J,EAAAwd,EAAAxd,KACAhK,EAAAwnB,EAAAxnB,WAEAR,EAAAgoB,EAAAhoB,KAOAa,GANAmnB,EAAAloB,QAEAkoB,EAAAjnB,SAEAinB,EAAA5mB,WAEA4mB,EAAAnnB,UAEAmnB,EAAArmB,cAEAqmB,EAAA3e,QAEA2e,EAAA7e,QAEA6e,EAAAlF,UAEAkF,EAAAhF,UACA4V,EAAA1H,SAEA,SAAA4K,EAAAtyB,EAAA2D,EAAA4uB,GACA,OAAA,SAAAvN,GACA,IAAAwN,EAAA/P,EAAAjE,EAAA5d,IAAA5E,UAAA,SAAA2B,GAEA,MAAA,aADA60B,EAAAh8B,EAAAmH,KACA,UAAA60B,GAAA,SAAAA,GAAA,MAAA70B,EACAA,EAAAomB,EAAAgB,eAAApnB,KAEA,OAAA8kB,EAAA/sB,OAAA,EACA4G,MAEAA,KAAAgB,KAAA,SAAAwB,GACAkB,EAAA3D,MAAAsH,GAAArH,KAAAmmB,EAAA3jB,EAAA,MAEAxC,OAIA,SAAAm2B,EAAAzyB,EAAA2D,GACA,OAAA,WACA,IACA5H,EAAAzB,EAAA1D,KAAAoF,WACAxB,EAAAgkB,EAAA5d,IAFAtE,KAEA,SAAAyqB,EAAAjoB,GACA,OAAAkB,EAAA3D,MAAAsH,GAAAojB,GAAAxmB,OAAAxE,MAEA,OAAAqR,EAAApM,EAAAxG,KAIA,SAAAk4B,EAAA1yB,EAAA2D,EAAA+lB,GACA,OAAA,SAAArhB,GAEA/N,EAAA1D,KAAAoF,WADA,IAEAxB,EAAA8B,KAAAsE,IAAA,SAAA9B,EAAAioB,GAEA,OAAAA,EAAAsG,cACArtB,EAAA3D,MAAAsH,EAAA+lB,GAAA3C,IAAAA,EAAA1e,SAKA,OAAAqhB,GAAArhB,EACA7N,EAAA4E,OAAAiJ,GAEA7N,GAKA,SAAAm4B,EAAA3yB,EAAA2D,EAAA+lB,GACA,OAAA,SAAAkJ,EAAAvqB,GAEA/N,EAAA1D,KAAAoF,WADA,IAMAxB,EAAA8B,KAAAsE,IAAA,SAAA9B,EAAAioB,GAGA,OAAA/mB,EAAA3D,MAAAsH,EAAA+lB,GAAA3C,EAAA6L,IAAA7L,EAAA1e,EAAAuqB,MAKA,OAAAlJ,GAAArhB,EACA7N,EAAA4E,OAAAiJ,GAEA7N,GAMA,SAAAq4B,EAAA7yB,EAAA2D,GACA,OAAA,WACA,IACA5H,EAAAzB,EAAA1D,KAAAoF,WAIA,OAHAM,KAAAgB,KAAA,SAAAwB,EAAA2U,GACAzT,EAAA3D,MAAAsH,GAAArH,MAAAiE,OAAAxE,MAHAO,MAuDA,SAAAw2B,EAAA9yB,EAAA2D,EAAA4uB,GACA,OAAA,SAAAt7B,GAGA,OAAAunB,EAAA7mB,UAAAV,IACAR,EAAAG,KAHA0F,KAGA,SAAAyqB,EAAAjoB,GACA,IAAAi0B,EAEAA,EADAR,EACA9T,EAAAsI,EAAA9vB,EAAA6H,EAAAyzB,EAAAxL,IAEA9vB,EAEA+I,EAAA3D,MAAAsH,GAAAojB,EAAAgM,MAVAz2B,MAAAA,KAcA,GACA0D,EAAA3D,MAAAsH,GAfArH,KAeA,UADA,GAQA,IAmfAoqB,EAnfAsM,EAAAxU,EAAA/a,OACAf,UAAA,aACArB,KAAA,SAAAgH,EAAA1E,GACA,IACAuC,EAAAuc,EAAAhP,EAAAnS,EAsDA,GApDA+G,IAHA/L,KAIAqH,QAAAA,EAAAA,GAAAogB,EAAAE,MAEA3sB,EAAA+Q,IANA/L,KAQA+L,SAAAA,GAGAnC,EADA,MAAAmC,EAAA0R,OAAA,IAAA,MAAA1R,EAAA0R,OAAA1R,EAAA3S,OAAA,IAAA2S,EAAA3S,QAAA,GACA,KAAA2S,EAAA,MAEAgqB,EAAAle,KAAA9L,IAIAnC,EAAA,IAEAuc,EAAAsB,EAAAgB,eAAA1c,GAEAmW,EAAArmB,cAAAwL,KACArC,EAAAqC,KAIA8P,EAAA2b,EAAAE,KAAAppB,EAAA,GAAA6d,EAAAF,SAAAlgB,OAIA8e,GAAAhP,KAMA+K,EAAAlnB,SAAAqM,KACAA,EAAAyrB,EAAA/vB,KAAAsE,IAGA8e,EAAA2M,EAAAnC,YAAAtpB,EAAA0E,KAKAoa,EAFApa,IAAA7Q,QAAAC,EAAA4Q,GAEAA,GAGAA,IAOAoa,IAEApnB,EAAAgB,MAzDAC,KAyDAmmB,GAEAnhB,GACA,IAAA,IAAAzL,KAAAyL,EAEAkd,EAAAxnB,WAAAsF,KAAAzG,IACAyG,KAAAzG,GAAAyL,EAAAzL,IAEAyG,KAAAwgB,KAAAjnB,EAAAyL,EAAAzL,IAMA,OAvEAyG,QA2EA8Q,EAAA,WACA8kB,EAAA,SAAAr7B,GACA,OAAAA,aAAAm8B,GAEA3xB,KAAA,SAAAgH,EAAA1E,GACA,OAAA,IAAAqvB,EAAA3qB,EAAA1E,IAGA,IAAA+iB,EAAA,SAAAre,EAAA1E,GACA,OAAA3M,EAAAqR,IACAqe,EAAAuM,MAAA,WACA5qB,EAAAqe,KAEAwM,GACAhB,EAAA7pB,GACAA,EAEA1E,GAAAuuB,EAAAvuB,IAAArM,EAAA+Q,GACA1E,EAAAtE,KAAAgJ,GAEAhH,KAAAgH,EAAA1E,IAEAuvB,EAAAxM,EAAA1S,UAEA0S,EAAA/lB,GAAAqyB,EAAA16B,UACAkmB,EAAApiB,MAAAsqB,EAAA/lB,IAGAjL,OAAA,EAEAkL,IAAA,SAAAD,GACA,OAAA+lB,EAAA1lB,EAAAwd,EAAA5d,IAAAtE,KAAA,SAAA4nB,EAAAtuB,GACA,OAAA+K,EAAA/J,KAAAstB,EAAAtuB,EAAAsuB,QAIA5pB,MAAA,WACA,OAAAosB,EAAApsB,EAAA+B,MAAAC,KAAAN,aAGAvF,QAAA,WACA,OAAAA,EAAA4F,MAAAC,KAAAN,YAGAyO,IAAA,SAAA3L,GACA,YAAAlD,IAAAkD,EAAAxE,EAAA1D,KAAA0F,MAAAA,KAAAwC,GAAA,EAAAA,EAAAA,EAAAxC,KAAA5G,SAGAwI,QAAA,WACA,OAAAA,EAAA7B,MAAAC,KAAAN,YAGA2R,KAAA,WACA,OAAAA,EAAAtR,MAAAC,KAAAN,YAGAmO,QAAA,WACA,OAAA7P,EAAA1D,KAAA0F,OAGA62B,KAAA,WACA,OAAA72B,KAAA5G,QAIAqV,OAAA,SAAA1C,GACA,OAAAA,EACA/L,KAAA+C,KAAAgJ,GAAA0C,UAEAzO,KAAAgB,KAAA,SAAA1H,EAAA6d,GACAsQ,EAAAhZ,OAAA0I,KAEAnX,OAGAgB,KAAA,SAAAC,GAEA,OADAihB,EAAAlhB,KAAAhB,KAAAiB,GACAjB,MAGA8C,OAAA,SAAAiJ,GACA,OAAArR,EAAAqR,GAAA/L,KAAAwvB,IAAAxvB,KAAAwvB,IAAAzjB,IACAqe,EAAAtnB,EAAAxI,KAAA0F,KAAA,SAAA8pB,GACA,OAAAgJ,EAAAlhB,QAAAkY,EAAA/d,OAIAqG,IAAA,SAAArG,EAAA1E,GACA,OAAA+iB,EAAA1lB,EAAA1E,KAAA6N,UAAA5J,OAAAmmB,EAAAre,EAAA1E,GAAAwG,cAGAwc,GAAA,SAAAte,GACA,GAAA/L,KAAA5G,OAAA,EAAA,CAEA,GAAA8oB,EAAAlnB,SAAA+Q,GACA,OAAA8pB,EAAAv7B,KAFA0F,KAEA,SAAAyqB,GACA,OAAAqI,EAAAlhB,QAAA6Y,EAAA1e,KAEA,GAAAmW,EAAA/mB,YAAA4Q,GACA,OAAA8pB,EAAAv7B,KANA0F,KAMA,SAAAyqB,GACA,OAAAvI,EAAAre,QAAA4mB,EAAA1e,IAAA,IAEA,GAAAmW,EAAAtnB,WAAAmR,GACA,OAAA8pB,EAAAv7B,KAVA0F,KAUA,SAAAyqB,GACA,OAAAA,GAAA1e,IAIA,OAAA,GAGAyjB,IAAA,SAAAzjB,GACA,IAAAoa,KACA,GAAAzrB,EAAAqR,SAAAzM,IAAAyM,EAAAzR,KACA0F,KAAAgB,KAAA,SAAAwB,EAAA2U,GACApL,EAAAzR,KAAA0F,KAAAwC,EAAA2U,IAAAgP,EAAApnB,KAAAiB,YAEA,CACA,IAAA82B,EAAA,iBAAA/qB,EAAA/L,KAAA8C,OAAAiJ,GACA5Q,EAAA4Q,IAAArR,EAAAqR,EAAAxJ,MAAAvE,EAAA1D,KAAAyR,GAAAqe,EAAAre,GACA/L,KAAA7F,QAAA,SAAAytB,GACAkP,EAAAl1B,QAAAgmB,GAAA,GAAAzB,EAAApnB,KAAA6oB,KAGA,OAAAwC,EAAAjE,IAGAnnB,IAAA,SAAA+M,GACA,OAAA/L,KAAA8C,OAAA,WACA,OAAA/H,EAAAgR,GACA0b,EAAAH,SAAAtnB,KAAA+L,GACAqe,EAAApqB,MAAA+C,KAAAgJ,GAAA8qB,UAIAx4B,GAAA,SAAAmE,GACA,OAAA,IAAAA,EAAAxC,KAAAhC,MAAAwE,GAAAxC,KAAAhC,MAAAwE,GAAAA,EAAA,IAGAgB,MAAA,WACA,OAAAxD,KAAA3B,GAAA,IAGA+uB,KAAA,WACA,OAAAptB,KAAA3B,IAAA,IAGA0E,KAAAqzB,EAAAtD,EAAAnC,YAAAmC,GAEAxI,QAAA8L,EAAAtD,EAAAxI,QAAAwI,GAaAiE,QAAAX,EAAAtD,EAAAtC,UAAAsC,GAEAkE,aAAAX,EAAAvD,EAAAtC,UAAAsC,GAGA7tB,OAAAmxB,EAAAtD,EAAA7tB,OAAA6tB,GAEA1H,SAAAgL,EAAAtD,EAAA1H,SAAA0H,GAEAxK,SAAA6N,EAAA1O,EAAAa,SAAAb,GAEA2B,MAAAmN,EAAA9O,EAAA2B,MAAA3B,GAEAiB,KAAA8N,EAAA/O,EAAAiB,KAAAjB,GAGA4N,MAAA,SAAAC,GACA,OAAApT,EAAA5d,IAAAtE,KAAA,SAAA4nB,GACA,OAAAA,EAAA0N,MAIA2B,UAAA,SAAAC,GACA,IAAApwB,EAAAsjB,EAAA8M,GAEA,OADApwB,EAAAqwB,WAAAn3B,KACA8G,GAGAswB,YAAA,SAAAC,GACA,OAAAr3B,KAAA+S,OAAAskB,GAAA5oB,UAGA6oB,KAAA,SAAA5O,GAcA,IAAA6O,EAAA,mBAAA7O,EAEA,OAAA1oB,KAAAgB,KAAA,SAAA1H,GACA8wB,EAAApqB,MAAAw3B,QAAAD,EAAA7O,EAAApuB,KAAA0F,KAAA1G,GAAAovB,MAIA8O,QAAA,SAAA9O,GAaA,IAAA4O,EAyBA,OAvBAt3B,KAAA,KACA,mBAAA0oB,IACAA,EAAAA,EAAApuB,KAAA0F,KAAA,KAIAs3B,EAAAlN,EAAA1B,EAAA1oB,KAAA,GAAAwnB,eAAAnpB,GAAA,GAAAqC,OAAA,GAEAV,KAAA,GAAA6mB,YACAyQ,EAAAtP,aAAAhoB,KAAA,IAGAs3B,EAAAhzB,IAAA,WAGA,IAFA,IAAAmmB,EAAAzqB,KAEAyqB,EAAAgN,mBACAhN,EAAAA,EAAAgN,kBAGA,OAAAhN,IACA7D,OAAA5mB,OAGAA,MAIA03B,UAAA,SAAAhP,GAUA,MAAA,mBAAAA,EACA1oB,KAAAgB,KAAA,SAAA1H,GACA8wB,EAAApqB,MAAA03B,UAAAhP,EAAApuB,KAAA0F,KAAA1G,MAIA0G,KAAAgB,KAAA,WACA,IAAAiL,EAAAme,EAAApqB,MACAsoB,EAAArc,EAAAqc,WAEAA,EAAAlvB,OACAkvB,EAAAkP,QAAA9O,GAGAzc,EAAA2a,OAAA8B,MAMAsD,OAAA,SAAAjgB,GAiBA,OAHA/L,KAAAiF,OAAA8G,GAAAyjB,IAAA,QAAAxuB,KAAA,WACAopB,EAAApqB,MAAAo3B,YAAAp3B,KAAAwoB,cAEAxoB,MAIAU,MAAA,WACA,OAAAV,KAAAsE,IAAA,WACA,OAAAtE,KAAAqmB,WAAA,MAKAsR,OAAA,SAAAC,GACA,OAAA53B,KAAAgB,KAAA,WACA,IAAA4mB,EAAAwC,EAAApqB,YACAV,IAAAs4B,EAAA,QAAAhQ,EAAAiQ,IAAA,WAAAD,GAAAhQ,EAAAkQ,OAAAlQ,EAAAmQ,UAIA9W,KAAA,SAAAlV,GACA,OAAAqe,EAAApqB,KAAAq1B,MAAA,2BAAAvyB,OAAAiJ,GAAA,MAGAisB,QAAA5B,EAAAtD,EAAAzB,iBAAAyB,GAEAllB,KAAA,SAAA7B,GACA,OAAAqe,EAAApqB,KAAAq1B,MAAA,uBAAAvyB,OAAAiJ,GAAA,MAGAksB,QAAA7B,EAAAtD,EAAA1B,aAAA0B,GAEAxB,SAAA8E,EAAAtD,EAAAxB,SAAAwB,GAEAhyB,MAAA,SAAA2pB,GACA,OAAAA,EACAzqB,KAAA4B,QAAAwoB,EAAAK,GAAA,IAEAzqB,KAAAiF,SAAAmmB,WAAAxpB,QAAA5B,KAAA,OAMAoqB,EAAA/lB,GAAA6zB,OAAA9N,EAAA/lB,GAAAoK,OAEA2b,EAAA/lB,GAAA8zB,MAAA,SAAAC,EAAAC,GACA,OAAAr4B,KAAAs4B,WAAAF,GAAAG,WAAAF,GAAAD,IAIA3Q,EAAAmE,SAiEA,OA9DAxB,EAAA/lB,GAAA4O,MAAA+iB,EAAAvO,EAAAxU,MAAAwU,GAEA2C,EAAA/lB,GAAA4mB,QAAA+K,EAAAvO,EAAAwD,QAAAxD,GAEA2C,EAAA/lB,GAAA0O,OAAAijB,EAAAvO,EAAA1U,OAAA0U,GAEA2C,EAAA/lB,GAAAuiB,OAAAoP,EAAAvO,EAAAb,OAAAa,GAGAvF,EAAAlhB,MACAw3B,SAAA,SACAC,UAAA,UACAzQ,aAAA,SACA0Q,YAAA,QACAC,WAAA,eACA,SAAAp/B,EAAAq/B,GACAxO,EAAA/lB,GAAA9K,GAAA,SAAAwS,GAOA,IANA,IAAA8sB,EACA/xB,KACAgyB,EAAA1O,EAAAre,GACAqhB,EAAA0L,EAAA1/B,OAAA,EACAE,EAAA,EAEAA,GAAA8zB,EAAA9zB,IACAu/B,EAAAv/B,IAAA8zB,EAAAptB,KAAAA,KAAAU,OAAA,GACA0pB,EAAA0O,EAAAx/B,IAAAs/B,GAAAC,GAIA95B,EAAAgB,MAAA+G,EAAA+xB,EAAA1qB,OAGA,OAAAnO,KAAAi3B,UAAAnwB,MA8BAsjB,EAlaA,GA4kBA,OAvKAA,EAmBAtZ,GAlBAzM,GAAA00B,aAAA,SAAAC,GACA,IAAAlO,EAAA9qB,KAAA63B,IAAA,YACAoB,EAAA,aAAAnO,EACAoO,EAAAF,EAAA,uBAAA,gBACAD,EAAA/4B,KAAA+2B,UAAAj0B,OAAA,WACA,IAAAmC,EAAAmlB,EAAApqB,MACA,QAAAi5B,GAAA,WAAAh0B,EAAA4yB,IAAA,cAGAqB,EAAAn7B,KAAAkH,EAAA4yB,IAAA,YAAA5yB,EAAA4yB,IAAA,cACA5yB,EAAA4yB,IAAA,iBACAx5B,GAAA,GAEA,MAAA,UAAAysB,GAAAiO,EAAA3/B,OAEA2/B,EADA3O,EAAApqB,KAAA,GAAAwnB,eAAA9P,WAOA,SAAA0S,GACAA,EAAA/lB,GAAA6gB,IAAA,WACA,OAAAllB,KAAAm3B,YAAA/M,KAGAA,EAAA/lB,GAAA80B,QAAA,WACA,OAAAn5B,KAAAoS,IAAApS,KAAAm3B,YAAA/M,MAGAA,EAAA/lB,GAAA+0B,QAAA,SAAArtB,GACA,OAAA/L,KAAAm3B,WACAprB,EACA/L,KAAAoS,IAAApS,KAAAm3B,WAAAr0B,OAAAiJ,IAEA/L,KAAAoS,IAAApS,KAAAm3B,YAGAn3B,MAIA,uGAAA7G,MAAA,KAAAgB,QAAA,SAAAm7B,GACA,IAAAjxB,EAAA+lB,EAAA/lB,GAAAixB,GACAlL,EAAA/lB,GAAAixB,GAAA,WACA,IAAAxuB,EAAAzC,EAAAtE,MAAAC,KAAAN,WAEA,OADAoH,EAAAqwB,WAAAn3B,KACA8G,KA1BA,CA6BAgK,GAGA,SAAAsZ,GA6DA,IACAiP,EA7DAjP,EAAA/lB,GAAAyM,MAAAsZ,EAAA/lB,GAAAtB,KAEAqnB,EAAA/lB,GAAAi1B,MAAA,SAAAxR,EAAAgD,GAwBA,OALA5I,EAAAlnB,SAAA8sB,GACAA,EAAAgL,EAAAhC,WAAAhJ,GACA8N,EAAA9N,KACAA,EAAAA,EAAA,IAEA9nB,KAAAgB,KAAA,SAAA1H,EAAA6d,GACA,OAAA2T,GACA,IAAA,SACArD,EAAA1U,OAAA+U,EAAA3Q,GACA,MACA,IAAA,QACAsQ,EAAAxU,MAAA6U,EAAA3Q,GACA,MACA,IAAA,UACAsQ,EAAA5pB,QAAAiqB,EAAA3Q,GACA,MACA,IAAA,OACAsQ,EAAA2B,MAAAtB,GACAL,EAAAb,OAAAkB,EAAA3Q,GACA,MACA,IAAA,QACAsQ,EAAAwD,QAAAnD,EAAA3Q,GACA,MAEA,QACAsQ,EAAAb,OAAAkB,EAAA3Q,OAKAiT,EAAA/lB,GAAAk1B,WAAA,SAAAC,EAAA1O,GAIA,OAHA0O,EAAApwB,WACAowB,EAAAtX,EAAArE,WAAA2b,EAAApwB,SAAAowB,IAEAx5B,KAAA4mB,OAAA4S,IAKApP,EAAA/lB,GAAAo1B,kBACAJ,EAAA,kBAAA3hB,SAAAkM,cAAA,OACA,cACA,YAEA,WACA,OAAA5jB,KAAAmL,GAAAkuB,EAAA,uBAAA,SAAA/uB,GACAA,EAAAJ,qBAKAkgB,EAAA/lB,GAAAq1B,gBAAA,WACA,OAAA15B,KAAA2L,IAAA,yBAGAye,EAAA/lB,GAAA6mB,OAAA,WACA,OAAAzD,EAAAkS,KAAA35B,KAAA,KAGAoqB,EAAA/lB,GAAAu1B,YAAA,WACA,OAAAnS,EAAAmS,YAAA55B,KAAA,KAlFA,CAsFA8Q,GAEAA,EAAAzM,GAAAw1B,OAAA,SAAAtgC,EAAA4L,GACA,IAAA3F,EAAAxB,EAAA1D,KAAAoF,UAAA,GACAuM,EAAAjM,KACA85B,EAAA95B,KAKA,OAHAA,KAAAgB,KAAA,WACA84B,EAAAC,QAAAC,YAAAj6B,MAAAkM,GAAAjM,KAAAzG,GAAA0K,OAAAzE,MAEAs6B,GAIAhpB,EAAAmpB,OACAjE,uBAAAA,EACAG,YAAAA,EACAK,cAAAA,EACAJ,iBAAAA,EACA8D,iBA5sBA,SAAAx2B,EAAA2D,GACA,OAAA,WACA,IACA5H,EAAAzB,EAAA1D,KAAAoF,WACA,OAAAm2B,EAAAv7B,KAFA0F,KAEA,SAAAyqB,GACA,OAAA/mB,EAAA3D,MAAAsH,GAAAojB,GAAAxmB,OAAAxE,QAwsBA42B,uBAAAA,EACA8D,+BA1tBA,SAAAz2B,EAAA2D,EAAA4uB,GACA,OAAA,SAAApU,GACA,IACApiB,EAAAzB,EAAA1D,KAAAoF,WAKA,OAJAvF,EAAAG,KAFA0F,KAEA,SAAAyqB,EAAAjoB,GACA,IAAA43B,EAAAjY,EAAAsI,EAAA5I,EAAArf,EAAAyzB,EAAAxL,IACA/mB,EAAA3D,MAAAsH,GAAAojB,EAAA2P,GAAAn2B,OAAAxE,EAAAzB,MAAA,OAJAgC,OAytBAu2B,kBAAAA,EACA8D,mBAtsBA,SAAA32B,EAAA2D,EAAA4uB,GACA,OAAA,SAAA18B,EAAAoB,GAGA,OAAAunB,EAAArmB,cAAAtC,IAAA2oB,EAAA7mB,UAAAV,IACAR,EAAAG,KAHA0F,KAGA,SAAAyqB,EAAAjoB,GACA,IAAAi0B,EAEAA,EADAR,EACA9T,EAAAsI,EAAA9vB,EAAA6H,EAAAyzB,EAAAxL,EAAAlxB,IAEAoB,EAEA+I,EAAA3D,MAAAsH,GAAAojB,EAAAlxB,EAAAk9B,MAVAz2B,MAAAA,KAcA,GACA0D,EAAA3D,MAAAsH,GAfArH,KAeA,GAAAzG,SADA,KA0rBAE,EAAAC,OAAA,aAAAoX,KAGA/X,OAAA,2BACA,WACA,SAAA+X,GACA,OAAAA,IAEA/X,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,sBACA,sBACA,SAAAU,EAAAyoB,EAAAuF,EAAAqL,EAAA1I,GACA,IAAA9lB,EAAAvK,MAAAiC,UAAAsI,IACAtG,EAAAjE,MAAAiC,UAAAgC,MAKAs8B,EAAApY,EAAA/a,OACAf,UAAA,gBAEAtB,WAAA,SAAAqS,GACA+K,EAAAlnB,SAAAmc,KAGAA,EAFA,MAAAA,EAAAsG,OAAA,GAEAgK,EAAAgB,eAAAtR,GAAA,GAGAO,SAAAoF,eAAA3F,IAGAnX,KAAAu6B,KAAApjB,KAIAmjB,EAAAt+B,UAAAouB,EAAAkQ,EAAAt+B,UAAA8U,MAAA,SAAA/E,GACA,OAAAqe,EAAAre,EAAA/L,KAAAu6B,OAGAD,EAAAt+B,UAAAuqB,IAAA,WACA,OAAAvmB,KAAAu6B,MAMA,IAAA9J,EAAA,IAAA6J,EAAA5iB,SAAA+E,MACA+d,EAAA,SAAArjB,GACA,OAAAA,EACA,IAAAmjB,EAAAnjB,GAEAsZ,GAgIA,OA7FAvO,EAAApiB,MAAA06B,GACAC,MAAA,SAAAtU,EAAAuU,EAAAl7B,GAMA,OALA2mB,EAAAhsB,QAAA,SAAAgd,GACA,IAAAoP,EAAApP,aAAAmjB,EAAAnjB,EAAAqjB,EAAArjB,GACAoP,EAAAmU,GAAA36B,MAAAwmB,EAAA/mB,KAGAQ,MAGAywB,KAAA,IAAA6J,EAAA5iB,SAAA+E,MAEA6d,cAAAA,EAEAh0B,QAAA,SAAA/M,EAAA8K,GACA,IAAAW,KAEAA,EAAAzL,GAAA8K,EAEAi2B,EAAAh0B,QAAAtB,IAGAuC,SAAA,SAAAmuB,EAAAruB,GACA,IAAArC,KAEA0wB,EAAAv7B,QAAA,SAAAZ,GACAyL,EAAAzL,GArDA,SAAA8K,EAAAgD,GACA,OAAA,WACA,IACAojB,EADAzqB,KACAu6B,KACAzzB,EAAAzC,EAAAtE,MAAAsH,GAAAojB,GAAAxmB,OAAAjG,EAAA1D,KAAAoF,aAEA,GAAAoH,EAAA,CACA,GAAAA,IAAAO,EACA,OANArH,KAQA8G,aAAA6zB,YACA7zB,EAAA,IAAAwzB,EAAAxzB,GACAob,EAAA/mB,YAAA2L,KACAA,EAAAxC,EAAAhK,KAAAwM,EAAA,SAAA8gB,GACA,OAAAA,aAAA+S,YACA,IAAAL,EAAA1S,GAEAA,KAMA,OAAA9gB,GA8BA8zB,CAAAvzB,EAAA9N,GAAA8N,KAGAizB,EAAAh0B,QAAAtB,MAKAw1B,EAAAjzB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAurB,GAMA0H,EAAAz3B,KAAA,SAAAgJ,GACA,MAAA,SAAAA,EACA/L,KAAAywB,KAEAzwB,KAAAywB,KAAAK,WAAA/kB,IAMAyuB,EAAAjzB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,aACA,eACA,WACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAkgB,GAGAhuB,EAAAC,OAAA,YAAA8gC,KAEAzhC,OAAA,0BACA,UACA,SAAAyhC,GACA,OAAAA,IAEAzhC,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,SACA,oBACA,sBACA,SAAAuQ,EAAAkxB,EAAApQ,GA6BA,OA3BAoQ,EAAAjzB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA+B,GAEA8gB,EAAA/lB,GAAAgF,KAAA+gB,EAAA6P,MAAAzD,cAAAltB,EAAAD,KAAAC,EAAAA,EAAAD,MAEA+gB,EAAA/lB,GAAAmc,KAAA4J,EAAA6P,MAAAI,mBAAA/wB,EAAAkX,KAAAlX,EAAAA,EAAAkX,MAEA4J,EAAA/lB,GAAAkxB,WAAAnL,EAAA6P,MAAA1D,kBAAAjtB,EAAAisB,WAAAjsB,GAEA8gB,EAAA/lB,GAAA1B,KAAAynB,EAAA6P,MAAAI,mBAAA/wB,EAAA3G,KAAA2G,EAAAA,EAAA3G,MAEAynB,EAAA/lB,GAAAsxB,WAAAvL,EAAA6P,MAAA1D,kBAAAjtB,EAAAqsB,WAAArsB,GAEA8gB,EAAA/lB,GAAAiF,KAAA8gB,EAAA6P,MAAAI,mBAAA/wB,EAAAA,KAAAA,GAEA8gB,EAAA/lB,GAAAoxB,WAAArL,EAAA6P,MAAA1D,kBAAAjtB,EAAAmsB,YAEArL,EAAA/lB,GAAAoc,IAAA2J,EAAA6P,MAAAzD,cAAAltB,EAAAmX,IAAAnX,EAAAA,EAAAmX,KAGAnX,IAEAvQ,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,wBACA,sBACA,uBACA,sBACA,qBACA,qBACA,SAAAU,EAAAyoB,EAAAhL,EAAA4b,EAAArL,EAAAyN,GACAhT,EAAApiB,MAAA,IACAkB,EAAAkhB,EAAAlhB,KAEA2hB,GADA5oB,MAAAiC,UAAAgC,MACAkkB,EAAAS,KACAkY,EAAA,mCACA5wB,GACAC,eAAA,qBACAC,yBAAA,gCACAC,gBAAA,wBAEA0wB,EAAA,8BAEA,SAAAzwB,EAAAC,EAAAnL,GAeA,OAdAA,GAAAmL,EAAAC,qBACApL,IACAA,EAAAmL,GAGA4X,EAAAlhB,KAAAiJ,EAAA,SAAA1Q,EAAA2J,GACA,IAAAsH,EAAArL,EAAA5F,GACA+Q,EAAA/Q,GAAA,WAEA,OADAyG,KAAAkD,GAAAgf,EAAAhZ,WACAsB,GAAAA,EAAAzK,MAAAZ,EAAAO,YAEA4K,EAAApH,GAAAgf,EAAA/Y,eAGAmB,EAGA,SAAAsB,EAAAtB,GACA,IAAAuB,GAAA,GAAAvB,GAAAnR,MAAA,KACA,OACAe,KAAA2R,EAAA,GACAxS,GAAAwS,EAAA7N,MAAA,GAAAqT,OAAA1H,KAAA,MAKA,IAAAoxB,GACA7/B,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,WACAA,OAAA,gBAEA8/B,GACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,YAAA,GACAz6B,KAAA,GACA06B,IAAA,GACAC,MAAA,GAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEAC,MAAA,EACAC,OAAA,EACAnnB,MAAA,EACAonB,gBAAA,EACA7L,OAAA,EACAC,MAAA,EAEAtB,MAAA,EACAhH,KAAA,EACAmU,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACA3E,WAAA,EACAC,WAAA,EAGA2E,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACAtJ,OAAA,GACAuJ,OAAA,GACAC,OAAA,GAEAC,MAAA,IAIA7mB,EAAA,WAUA,OAAA,SAAA3c,EAAA8K,GAGAkd,EAAAlnB,SAAAd,GACA8K,EAAAA,MAGA9K,GADA8K,EAAA9K,OACAA,MAAA,GAEA,IAAAiS,EAAAP,EAAA1R,GACAA,EAAAiS,EAAAjS,KAEA8K,EAAAkd,EAAApiB,OACA69B,SAAA,EACAC,YAAA,GACA54B,GAEAmH,EAAA9S,KACA2L,EAAA64B,UAAA1xB,EAAA9S,IAGA,IAAAgM,EA7BA,SAAAnL,GACA,IAAAsI,EAAAw4B,EAAA9gC,GACAsI,IACAA,EAAA,GAEA,OAAAu4B,EAAAv4B,GAwBAs7B,CAAA5jC,GACA4P,EAAA,IAAAzE,EAAAnL,EAAA8K,GAIA,OAFAkd,EAAAtf,UAAAkH,EAAA9E,GAEAqF,EAAAP,IApCA,GAwCA,SAAAi0B,EAAAp9B,EAAAqE,GACA,IAAAlG,EACAsI,GACA42B,cAAAr9B,GAEA,IAAA7B,KAAA6B,EACA,kBAAA7B,GAAA+7B,EAAA98B,KAAAe,SAAAQ,IAAAqB,EAAA7B,KACAsI,EAAAtI,GAAA6B,EAAA7B,IAMA,OAHAkG,GACAkd,EAAApiB,MAAAsH,EAAApC,GAEAqF,EAAAjD,EAAAzG,GAGA,IACAs9B,KACAC,EAAA,cAAAhjC,OACA+zB,GAAAA,MAAA,UAAAhH,KAAA,YACAkQ,GAAAG,WAAA,YAAAC,WAAA,YACA4F,EAAA,SAAAjkC,GACA,OAAAi+B,EAAAj+B,IAAAgkC,GAAAjP,EAAA/0B,IAAAA,GAEAkkC,KACAC,EAAAnc,EAAA/a,OACApC,KAAA,SAAA7F,EAAAoL,GACAtK,KAAAs+B,QAAAp/B,EACAc,KAAAu+B,OAAAj0B,EACAtK,KAAAw+B,cAGApsB,IAAA,SAAA/N,EAAAc,GACA,IAAAs5B,EAAAz+B,KAAAw+B,UACAE,GACAr6B,GAAAA,EACAc,QAAA+c,EAAApiB,SAAAqF,IAGAs5B,EAAA1/B,KAAA2/B,GAEA,IAAAzyB,EAAAjM,KACA,IAAAiM,EAAA0yB,UAAA,CACA1yB,EAAA0yB,UAAA,SAAAC,GACA,IAAArY,EAAAvmB,KACA8J,EAAAi0B,EAAAa,GACAp/B,EAAAo/B,EAAAC,MACAJ,EAAAxyB,EAAAuyB,UACAnlC,EAAAyQ,EAAA+zB,UAGAr+B,EADA0iB,EAAA7mB,UAAAmE,IACAsK,GAAA7F,OAAAzE,IAEAsK,GAGAoY,EAAAlhB,KAAAy9B,EAAA,SAAAj8B,EAAAk8B,GACA,IAAA90B,EAAA2c,EACA,GAAAzc,EAAA0C,+BAAA1C,EAAA0C,gCACA,OAAA,EAEA,IAAAnI,EAAAq6B,EAAAr6B,GACAc,EAAAu5B,EAAAv5B,YACA4G,EAAA5G,EAAA4G,SACAf,EAAA7F,EAAA6F,IACA1B,EAAAnE,EAAAmE,KAEA,IAAAjQ,GAAAA,GAAA8L,EAAA9L,KAAA,IAAA8L,EAAA9L,GAAAuI,QAAAvI,GAAA,CAGA,GAAA0S,EAAA,CAEA,KADAnC,EAAAkpB,EAAAxI,QAAAxgB,EAAA5K,OAAA6M,KACAnC,IAAA2c,EAMA,OALArE,EAAApiB,MAAAgK,GACAg1B,cAAAl1B,EACAm1B,UAAAxY,IAOA,IAAAyX,EAAA/xB,EAAAsyB,OACA,GAAAP,KAAA7F,EAAA,CACA,IAAA6G,EAAAl1B,EAAAm1B,cACA,GAAAD,IAAAA,IAAAp1B,GAAA6d,EAAAH,SAAA1d,EAAAo1B,IACA,OAIA9c,EAAA7mB,UAAAiO,KACAQ,EAAAR,KAAAA,GAGA0B,GACAiB,EAAAwC,OAAApK,EAAAc,GAGA,IAAAjH,EAAAmG,EAAAtE,MAAA6J,EAAApK,IAEA,IAAAtB,IACA4L,EAAAI,iBACAJ,EAAAM,uBAKA,IAAAE,EAAA2B,EAAAsyB,OAaAtyB,EAAAqyB,QAAAY,iBACAjzB,EAAAqyB,QAAAY,iBAAAf,EAAA7zB,GAAA2B,EAAA0yB,WAAA,GAEAjjB,QAAAC,KAAA,yBAAA1P,EAAAqyB,WAKA7vB,OAAA,SAAApK,EAAAc,GAMA,IAAAsE,EAHApQ,GAFA8L,EAAA+c,EAAApiB,SAAAqF,IAMA9L,KAJAA,EAKA8L,EAAA9L,GAAAoQ,EAJA,IAAAC,OAAA,UAAArQ,EAAAwE,QAAA,IAAA,SAAA,YAOAmC,KAAAw+B,UAAAx+B,KAAAw+B,UAAA17B,OAAA,SAAA47B,GACA,IAAAS,IAAA96B,GAAAA,IAAAq6B,EAAAr6B,OACAoF,GAAAA,EAAA1L,KAAA2gC,EAAAv5B,QAAA9L,QACA8L,EAAA4G,UAAA5G,EAAA4G,UAAA2yB,EAAAv5B,QAAA4G,UAEA,OAAAozB,IAEA,GAAAn/B,KAAAw+B,UAAAplC,SACA4G,KAAAs+B,QAAAc,qBACAp/B,KAAAs+B,QAAAc,oBAAAjB,EAAAn+B,KAAAu+B,QAAAv+B,KAAA2+B,WAAA,GAEA3+B,KAAA2+B,UAAA,SAIAU,EAAAnd,EAAA/a,OACApC,KAAA,SAAAwhB,GACAvmB,KAAAs+B,QAAA/X,EACAvmB,KAAAs/B,aAKAC,SAAA,SAAAj1B,EAAArJ,EAAAkE,GAEA,IAAAgH,EAAAP,EAAAtB,GACAA,EAAA6B,EAAAjS,KACAslC,EAAAvB,EAAA3zB,GACAm1B,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEA90B,EAAA7K,KAAAs/B,cAGAhgC,IAAAuL,EAAAP,KACAO,EAAAP,GAAA,IAAA+zB,EAAAr+B,KAAAs+B,QAAAmB,GAAAn1B,IAIAO,EAAAP,GAAA8H,IAAAnR,EAAAihB,EAAApiB,OACAzG,GAAA8S,EAAA9S,IACA8L,KAIAy6B,WAAA,SAAAt1B,EAAAjG,EAAAc,GAEA,IAAA0F,EAAA7K,KAAAs/B,SACAnzB,EAAAP,EAAAtB,GAGA,GAFAA,EAAA6B,EAAAjS,KAEA,CACA,IAAAuS,EAAA5B,EAAAP,GAEAmC,GACAA,EAAAgC,OAAApK,EAAA6d,EAAApiB,OACAzG,GAAA8S,EAAA9S,IACA8L,SAIA,IAAAmF,KAAAO,EAAA,CACA,IAAA4B,EAAA5B,EAAAP,GACAmC,EAAAgC,OAAApK,EAAA6d,EAAApiB,OACAzG,GAAA8S,EAAA9S,IACA8L,QAMA06B,EAAA,SAAAtZ,GACA,IAAAzU,EAAA6Q,EAAA4D,GACA9S,EAAA2qB,EAAAtsB,GAIA,OAHA2B,IACAA,EAAA2qB,EAAAtsB,GAAA,IAAAutB,EAAA9Y,IAEA9S,GAwDA,SAAAtI,EAAAob,EAAA1b,EAAAkB,EAAAzC,EAAArI,EAAA+J,GAGA,GAAAkX,EAAArmB,cAAAgP,GAIA,OAHAqX,EAAAlhB,KAAA6J,EAAA,SAAA3Q,EAAAmK,GACA8G,EAAAob,EAAArsB,EAAA6R,EAAAzC,EAAAjF,EAAA2G,KAEAhL,KAGAkiB,EAAAlnB,SAAA+Q,IAAAmW,EAAAxnB,WAAAuG,KACAA,EAAAqI,EACAA,EAAAyC,EACAA,OAAAzM,GAGA4iB,EAAAxnB,WAAA4O,KACArI,EAAAqI,EACAA,OAAAhK,IAGA,IAAA2B,IACAA,EAAAihB,EAAA/Y,aAGA,iBAAA0B,IAEAA,EADAA,EAAAjJ,QAAA,MAAA,EACAiJ,EAAA1R,MAAA,KAEA0R,EAAA1R,MAAA,OAIA,IAAAsa,EAAAosB,EAAAtZ,GAYA,OAVA1b,EAAA1Q,QAAA,SAAAmQ,GACA,GAAA,SAAAA,EACA,OAAAqsB,EAAA11B,GAEAwS,EAAA8rB,SAAAj1B,EAAArJ,GACAqI,KAAAA,EACAyC,SAAAA,EACAf,MAAAA,MAGAhL,KA2DA,SAAA22B,EAAA11B,GASA,OANA65B,EAAA/8B,KAAA2Z,SAAAooB,aAAApoB,SAAA+E,KACAyF,EAAArZ,MAAA5H,GAEAyW,SAAAwnB,iBAAA,mBAAAj+B,GAAA,GAGAjB,KAGA,IAAA+/B,GACAC,UAAA,EACAC,MAAA,IACAC,OAAA,GACAC,KAAA,GACAjb,IAAA,GACAkb,MAAA,GACAx4B,OAAA,GACAy4B,KAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,OAAA,IACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IA8EA,SAAAC,IACA,OAAAA,EAwDA,OAnEA5pB,EAAA+N,QAAA7B,aACA6a,EAAA8C,eAIArB,SAAAxoB,EAAA+N,QAAA7B,WAAA8B,IACA8b,aAAA9pB,EAAA+N,QAAA7B,WAAA8B,MAQAhD,EAAApiB,MAAAghC,GACA9F,aAAAA,EAEAh1B,OAAA6Q,EAEAhY,KAAAkhC,EAEAp0B,IA3QA,SAAAA,EAAA4a,EAAA1b,EAAAkB,EAAA9K,GAEA,GAAAihB,EAAArmB,cAAAgP,GAIA,OAHAqX,EAAAlhB,KAAA6J,EAAA,SAAA3Q,EAAAmK,GACAsH,EAAA4a,EAAArsB,EAAA6R,EAAA1H,KAHArE,KAQAkiB,EAAAlnB,SAAA+Q,IAAAmW,EAAAxnB,WAAAuG,KAAA,IAAAA,IACAA,EAAA8K,EACAA,OAAAzM,IAGA,IAAA2B,IACAA,EAAAihB,EAAA/Y,aAGA,iBAAA0B,IAEAA,EADAA,EAAAjJ,QAAA,MAAA,EACAiJ,EAAA1R,MAAA,KAEA0R,EAAA1R,MAAA,OAIA,IAAAsa,EAAAosB,EAAAtZ,GAEA1b,GAAAA,EAAA1Q,QAAA,SAAAmQ,GAEAmJ,EAAAmsB,WAAAt1B,EAAArJ,GACA8K,SAAAA,MAGA,OAAA/L,MA2OAmL,GAAAA,EAEAH,IAzKA,SAAAub,EAAA1b,EAAAkB,EAAAzC,EAAArI,GAGA,OAFAkK,EAAAob,EAAA1b,EAAAkB,EAAAzC,EAAArI,EAAA,GAEAjB,MAwKAoH,MAAA22B,EAEApH,MAAAA,EAEAsK,UA/FA,SAAA1a,GAEA,IAAA2a,EAAAhM,EAAA5rB,KAAAid,EAAA,aACA,IAAA2a,EAAA,CACAA,KACAhM,EAAA5rB,KAAAid,EAAA,YAAA2a,GACA,IAAAC,EAAA,SAAAxxB,EAAArF,GACA,IAAA7G,EAAA6G,EAAA82B,SAAA92B,EAAA+2B,QACA,GAAA1xB,EAAA2xB,MAAA79B,GAAAkM,EAAA4xB,KAAAj3B,EAAAk3B,QAAA7xB,EAAAhQ,OAAA2K,EAAAm3B,WACAn3B,EAAAo3B,SAAA/xB,EAAA+xB,SAAAp3B,EAAAq3B,UAAAr3B,EAAAq3B,UAAAhyB,EAAAgyB,UAKA,OAJAr3B,EAAAJ,iBACA,WAAAI,EAAApQ,MACAyV,EAAAtL,GAAAiG,IAEA,GAIAa,EAAAob,EAAA,yBAAA,SAAAjc,GACA,IAAA,iBAAAvM,KAAAuM,EAAApL,OAAAonB,UACA,IAAA,IAAAxnB,KAAAoiC,EACAC,EAAAD,EAAApiC,GAAAwL,KAOA,OACA8H,IAAA,SAAAwvB,EAAAv9B,IAEAu9B,EAAAhgC,QAAA,MAAA,EACAggC,EAAAxnC,cAAAjB,MAAA,KAEAyoC,EAAAxnC,cAAAjB,MAAA,MAEAgB,QAAA,SAAA0nC,GACA,IAAAjK,GACAvzB,GAAAA,EACAk9B,KAAA,EACAD,MAAA,EACA3hC,OAAA,GAEAkiC,EAAA1oC,MAAA,KAAAgB,QAAA,SAAA2E,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACA84B,EAAA94B,IAAA,EACA,MACA,QACA84B,EAAA+J,SAAA7iC,EAAA6gB,WAAA,GACAiY,EAAA8J,QAAA3B,EAAAjhC,IAAAA,EAAAme,cAAA0C,WAAA,MAGA,IAAAmiB,GAAAlK,EAAA0J,KAAA,OAAA,IAAA,KAAA1J,EAAA2J,IAAA,MAAA,IAAA,KAAA3J,EAAAj4B,MAAA,QAAA,IAAA,IAAAi4B,EAAA8J,QACAR,EAAAY,GAAAlK,OAyCAmK,QAAA9D,EAEA+D,KAzKA,SAAA13B,GACApP,OAAAwc,SAAAlC,MACAlL,EAAAo3B,QAAA,GAEAp3B,EAAAJ,iBACAI,EAAAJ,iBACAI,EAAAF,mBAEA,OAAApK,MAmKAgN,QA3JA,SAAAi1B,EAAA/nC,EAAAsF,GACA,IAAAsK,EAEAA,EADA5P,aAAAuQ,MACAvQ,EAEA2c,EAAA3c,EAAAsF,GAEAsK,EAAA+0B,MAAAr/B,EAEA,IAAA6E,EAAA49B,EAAAC,eAAAD,EAAAj1B,QACA3I,EACAA,EAAA/J,KAAA2nC,EAAAn4B,GAEA4R,QAAAC,KAAA,mDAGA,OAAA3b,QA+IAgB,EAAAg6B,EAAA,SAAAzhC,GACAunC,EAAAvnC,GAAA,SAAAgtB,EAAAxa,EAAAzC,EAAArI,GACA,OAAAvB,UAAAtG,OAAA,EACA4G,KAAAmL,GAAAob,EAAAhtB,EAAAwS,EAAAzC,EAAArI,IAEA,SAAA1H,EACAgtB,EAAA0I,OACA1I,EAAA0I,QAEA,QAAA11B,EACAgtB,EAAA0B,MACA1B,EAAA0B,OAEA,SAAA1uB,EACAgtB,EAAAmW,OACAnW,EAAAmW,QAGA18B,KAAAgN,QAAAuZ,EAAAhtB,GAGAyG,SAKAvG,EAAAC,OAAA,eAAAonC,KAEA/nC,OAAA,6BACA,sBACA,YACA,oBACA,sBACA,SAAAmpB,EAAA4e,EAAAtG,EAAApQ,GAEA,IAAA+X,GACA,MACA,KACA,MACA,WA8CA,OA3CAjgB,EAAAlhB,KAAA8/B,EAAA9F,aAAA,SAAAzhC,GACA4oC,EAAApjC,KAAAxF,KAIAihC,EAAAjzB,SAAA46B,EAAArB,GAEA5e,EAAAlhB,KAAAmhC,EAAA,SAAA7oC,EAAAC,GACA6wB,EAAA/lB,GAAA9K,GAAA6wB,EAAA6P,MAAA1D,kBAAAuK,EAAAvnC,GAAAunC,KAiCA1W,EAAAuM,MAAAmK,EAAAnK,MAEAmK,IAEA/nC,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,yBACA,SAAAU,GAeA,IAAA2oC,EAAA,WACA,OAAAA,GAGA,OAAA3oC,EAAAC,OAAA,aAAA0oC,KAEArpC,OAAA,8BACA,wBACA,uBACA,SAAAU,EAAAyoB,GACAnoB,MAAAiC,UAAA85B,MAAA,IACA37B,EAAAJ,MAAAiC,UAAA7B,QACA6iB,EAAAkF,EAAAlF,UACAE,EAAAgF,EAAAhF,UAEA,SAAAmlB,EAAA9oC,EAAAoB,GACA,MAAA,iBAAAA,GAAA2nC,EAAAplB,EAAA3jB,IAAAoB,EAAAA,EAAA,KAGA,IAAA2nC,GACAC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAC,KAIA,SAAAC,EAAAxpC,GACA,OAAAA,KAAAupC,EACAA,EAAAvpC,GAAAupC,EAAAvpC,GAAA,IAAAmQ,OAAA,UAAAnQ,EAAA,WASA,SAAA+G,EAAA6W,EAAAxc,GACA,IAAAwM,EAAAgQ,EAAA7W,WAAA,GACA0iC,EAAA77B,QAAA7H,IAAA6H,EAAA87B,QAEA,QAAA3jC,IAAA3E,EAAA,OAAAqoC,EAAA77B,EAAA87B,QAAA97B,EACA67B,EAAA77B,EAAA87B,QAAAtoC,EAAAwc,EAAA7W,UAAA3F,EAaA,IAAAuoC,KA4CA,SAAAC,EAAA5c,EAAAhtB,GACA,IAAAA,EAAA,OAAAyG,KACA,IAAA0F,EAAApF,EAAAimB,GAgBA,OAdArE,EAAAlnB,SAAAzB,GACAA,EAAAJ,MAAA,QAEAI,GAEAY,QAAA,SAAAgN,GACA,IAAAi8B,EAAAL,EAAA57B,GACAzB,EAAAkE,MAAAw5B,KACA19B,IAAAA,EAAA,IAAA,IAAAyB,KAIA7G,EAAAimB,EAAA7gB,GAEA1F,KAGA,SAAAqjC,EAAA5Y,GAKA,IAAA6Y,EAAA7Y,EAAAjD,cAAAoD,YAMA,OAJA0Y,GAAAA,EAAAC,SACAD,EAAApoC,QAGAooC,EAAAzY,iBAAAJ,GAsDA,SAAA+Y,EAAAjd,EAAAhtB,GACA,IAAA6pC,EAAAL,EAAAxpC,GACA,OAAAgtB,EAAAjmB,WAAAimB,EAAAjmB,UAAAsJ,MAAAw5B,GAQA,SAAAK,EAAAld,EAAAhtB,GACA,GAAAA,EAAA,CACA,IAAAmM,EAAApF,EAAAimB,IAGArE,EAAAlnB,SAAAzB,GACAA,EAAAJ,MAAA,QAEAI,GAGAY,QAAA,SAAAgN,GACA,IAAAi8B,EAAAL,EAAA57B,GACAzB,EAAAkE,MAAAw5B,KACA19B,EAAAA,EAAA7H,QAAAulC,EAAA,QAIA9iC,EAAAimB,EAAA7gB,EAAAiR,aAEArW,EAAAimB,EAAA,IAGA,OAAAvmB,KAyBA,IAAA0jC,EAAA,WACA,OAAAA,GAqBA,OAlBAxhB,EAAApiB,MAAA4jC,GACAC,YAAA,EACAC,YAIAT,SAAAA,EACA7iC,UAAAA,EACAu3B,IAlHA,SAAAtR,EAAA+O,EAAA36B,GACA,GAAA+E,UAAAtG,OAAA,EAAA,CACA,IACAyqC,EAAAR,EAAA9c,GACA,GAAArE,EAAAlnB,SAAAs6B,GACA,OAAA/O,EAAA5B,MAAA3H,EAAAsY,KAAAuO,EAAAC,iBAAA5mB,EAAAoY,IACA,GAAApT,EAAA/mB,YAAAm6B,GAAA,CACA,IAAAtwB,KAIA,OAHA7K,EAAAG,KAAAg7B,EAAA,SAAA3yB,GACAqC,EAAArC,GAAA4jB,EAAA5B,MAAA3H,EAAAra,KAAAkhC,EAAAC,iBAAA5mB,EAAAva,MAEAqC,GAIA,IAAA6yB,EAAA,GACA,GAAA,iBAAA,EACAl9B,GAAA,IAAAA,EAGAk9B,EAAA3a,EAAAoY,GAAA,IAAA+M,EAAA/M,EAAA36B,GAFA4rB,EAAA5B,MAAAof,eAAA7mB,EAAAoY,SAKA,IAAAx2B,OAAAw2B,OACAh2B,IAAAg2B,EAAAx2B,OAGAw2B,EAAAx2B,MAAA,IAAAw2B,EAAAx2B,KAGA+4B,GAAA3a,EAAApe,KAAA,IAAAujC,EAAAvjC,IAAAw2B,EAAAx2B,MAAA,IAFAynB,EAAA5B,MAAAof,eAAA7mB,EAAApe,OAQA,OADAynB,EAAA5B,MAAAqf,SAAA,IAAAnM,EACA73B,MA+EA+P,SAnNA,SAAAwW,EAAA5rB,GACA,GAAA+E,UAAAtG,OAAA,EACA,QAAA4G,KAAAipB,IAAAlZ,SAKA,OAFAwW,EAAAxW,SAAApV,EAEAqF,MA6MAwjC,SAAAA,EACAzL,KAzKA,SAAAxR,GAEA,OADAmd,EAAA7L,IAAAtR,EAAA,UAAA,QACAvmB,MAwKAikC,YAlLA,SAAA1d,GACA,MAAA,QAAAmd,EAAA7L,IAAAtR,EAAA,YAAA,GAAAmd,EAAA7L,IAAAtR,EAAA,YAkLAkd,YAAAA,EACA3L,KA5LA,SAAAvR,GACAmd,EAAA7L,IAAAtR,EAAA,UAAA,IACA,QAAAmd,EAAA7L,IAAAtR,EAAA,YACAmd,EAAA7L,IAAAtR,EAAA,UAnBA,SAAAD,GACA,IAAAwD,EAAAoa,EACAhB,EAAA5c,KACAwD,EAAApS,SAAAkM,cAAA0C,GACA5O,SAAA+E,KAAAqK,YAAAgD,GACAoa,EAAAb,EAAAvZ,GAAAga,iBAAA,WACAha,EAAAjD,WAAAqC,YAAAY,GACA,QAAAoa,IAAAA,EAAA,SACAhB,EAAA5c,GAAA4d,GAEA,OAAAhB,EAAA5c,GASA6d,CAAA5d,EAAAD,WAEA,OAAAtmB,MAwLAokC,YAnCA,SAAA7d,EAAAhtB,EAAAmX,GAaA,OAXAnX,EAAAJ,MAAA,QAAAgB,QAAA,SAAAgN,QACA7H,IAAAoR,IACAA,GAAA8yB,EAAAjd,EAAApf,IAEAuJ,EACAyyB,EAAA5c,EAAApf,GAEAs8B,EAAAld,EAAApf,KARAnH,QAqCAvG,EAAAC,OAAA,cAAAgqC,KAEA3qC,OAAA,4BACA,WACA,oBACA,sBACA,SAAA2qC,EAAAlJ,EAAApQ,GAGAoQ,EAAAjzB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACAm8B,GAmDA,OA/CA,WAAA,OAAA,MAAA,QAAA,SAAA,QAAA,SAAA,SAAA,aACA,YAAA,cAAA,eAAA,cAAA,UAAA,WAAA,SAAA,aAAA,YAAA,cAAA,eAAA,UAAA,cAAA,aAAA,eAAA,gBAAA,QACA,aAAA,kBAAA,UAAA,WAAA,aAAA,YAAA,iBAAA,gBAAA,SAAA,UAEAvpC,QAAA,SAAAm7B,GAEA,IAAA9kB,EAAA8kB,EAEAkF,EAAAF,cAAAt+B,UAAAwU,GAAA,SAAA7V,GAIA,OAFAqF,KAAA63B,IAAAvC,EAAA36B,GAEAqF,QAOAoqB,EAAA/lB,GAAAsgB,MAAAyF,EAAA6P,MAAAI,mBAAAqJ,EAAA7L,IAAA6L,GAEAtZ,EAAA/lB,GAAAwzB,IAAAzN,EAAA6P,MAAAI,mBAAAqJ,EAAA7L,IAAA6L,GAGAtZ,EAAA/lB,GAAAm/B,SAAApZ,EAAA6P,MAAAC,iBAAAwJ,EAAAF,SAAAE,GAGAtZ,EAAA/lB,GAAA8+B,SAAA/Y,EAAA6P,MAAAE,+BAAAuJ,EAAAP,SAAAO,EAAAA,EAAApjC,WAGA8pB,EAAA/lB,GAAAo/B,YAAArZ,EAAA6P,MAAAE,+BAAAuJ,EAAAD,YAAAC,EAAAA,EAAApjC,WAGA8pB,EAAA/lB,GAAA+/B,YAAAha,EAAA6P,MAAAE,+BAAAuJ,EAAAU,YAAAV,EAAAA,EAAApjC,WAEA8pB,EAAA/lB,GAAAggC,aAAA,SAAAC,EAAAC,GAGA,OAFAvkC,KAAAyjC,YAAAc,GACAvkC,KAAAmjC,SAAAmB,GACAtkC,MAGAoqB,EAAA/lB,GAAAggC,aAAA,SAAAC,EAAAC,GAGA,OAFAvkC,KAAAyjC,YAAAc,GACAvkC,KAAAmjC,SAAAmB,GACAtkC,MAGA0jC,IAEA3qC,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,yBACA,SAAAU,GAeA,IAAA+qC,EAAA,WACA,OAAAA,GAGA,OAAA/qC,EAAAC,OAAA,kBAAA8qC,KAEAzrC,OAAA,8BACA,uBACA,yBACA,YACA,SAAA4L,EAAA8L,EAAA+zB,GACA,IAAAvgC,EAAAlK,MAAAiC,UAAAiI,OACAwgC,EAAA,WACA,SAAAz5B,EAAA05B,EAAAzrC,GACA,IAAAwc,EAAA,IAAAhF,EACAk0B,EAAA,SAAA76B,GACA2L,EAAAzB,OAAAlK,IAIA,GADA7Q,EAAAA,GAAA,GACAyrC,EAAAE,OACAF,EAAAvU,KAAA,SAAAA,GACAA,EAAA0U,aAAA5rC,EACAwc,EAAA1B,QAAAoc,IACAwU,QACA,GAAAD,EAAAI,YAAA,CACA,IAAAC,EAAAL,EAAAM,eACAD,EAAAE,YAAA,SAAAC,GACA1vB,EACA0vB,EACAjsC,EAAAyrC,EAAAnrC,KAAA,KACA+W,KAAA,SAAA8xB,GACA3sB,EAAA1B,QAAAquB,KACAxuB,MAAA+wB,IACAA,QAIAlvB,EAAA1B,YAEA,OAAA0B,EAAA5B,QAGA,SAAA2B,EAAA0vB,EAAAjsC,GACA,OAAAwX,EAAA+E,IACA7Q,EAAAL,IAAA4gC,EAAA,SAAAR,GACA,OAAA15B,EAAA05B,EAAAzrC,MAEAqX,KAAA,WACA,OAAArM,EAAAlE,SAAAL,aAIA,OACAsL,IAAAA,EACAwK,IAAAA,GA3CA,GA+CA,OAAAgvB,EAAAC,SAAAA,IAEA1rC,OAAA,+BACA,uBACA,yBACA,sBACA,uBACA,oBACA,qBACA,6BACA,WACA,SAAA4L,EAAA8L,EAAAizB,EAAA5C,EAAAtG,EAAApQ,EAAAqa,EAAArC,GAKA,SAAA+C,EAAA5e,EAAA9mB,GAEA,IAAA2lC,GADA3lC,EAAAA,OACA2lC,YAAA,WACAC,EAAA5lC,EAAA6lC,QAEAC,EAAA,EA+CA,OA9CAzE,EAAA31B,GAAAob,EAAA,YAAA,SAAAzc,GACAA,EAAA07B,cAAA17B,EAAA07B,aAAA1oC,MAAA8E,QAAA,UAAA,IACAk/B,EAAAkB,KAAAl4B,GACAy7B,IACA7B,EAAAP,SAAA5c,EAAA6e,MAIAtE,EAAA31B,GAAAob,EAAA,WAAA,SAAAzc,GACAA,EAAA07B,cAAA17B,EAAA07B,aAAA1oC,MAAA8E,QAAA,UAAA,GACAk/B,EAAAkB,KAAAl4B,KAIAg3B,EAAA31B,GAAAob,EAAA,YAAA,SAAAzc,GACAA,EAAA07B,cAAA17B,EAAA07B,aAAA1oC,MAAA8E,QAAA,UAAA,GAEA,KADA2jC,GAEA7B,EAAAD,YAAAld,EAAA6e,KAKAtE,EAAA31B,GAAAob,EAAA,OAAA,SAAAzc,GACA,GAAAA,EAAA07B,cAAA17B,EAAA07B,aAAA1oC,MAAA8E,QAAA,UAAA,IACA8hC,EAAAD,YAAAld,EAAA6e,GACAtE,EAAAkB,KAAAl4B,GACAu7B,GAAA,CACA,IAAA/iC,EAAAwH,EAAA07B,aAAAljC,MACAA,GAAAA,EAAAlJ,SAAAkJ,EAAA,GAAAmjC,kBACAnjC,EAAA,GAAAojC,YACAjB,EAAAjvB,IACA7Q,EAAAL,IAAAhC,EAAA,SAAAC,GACA,OAAAA,EAAAkjC,iBACAljC,EAAAkjC,mBAEAljC,EAAAmjC,gBAEAp1B,KAAA+0B,GAEAA,EAAAv7B,EAAA07B,aAAApD,UAMApiC,KAWA,OATAoiC,EAAA+C,SAAAA,EAEA3K,EAAAjzB,UACA,YACA66B,GAGAhY,EAAA/lB,GAAA8gC,SAAA/a,EAAA6P,MAAA1D,kBAAA6L,EAAA+C,SAAA/C,GAEA+C,IAEApsC,OAAA,gCACA,wBACA,uBACA,oBACA,qBACA,WACA,SAAA8J,EAAAi+B,EAAAtG,EAAApQ,EAAAgY,GACA,SAAAuD,EAAApf,EAAA9mB,IACAA,EAAAA,OACA2lC,WAAA,IACAQ,EAAAnmC,EAAAomC,OAmBA,OAjBA/E,EAAA31B,GAAAob,EAAA,QAAA,SAAAzc,GACA,IAAAxH,EAAAwH,EAAAk0B,eAAAl0B,EAAAk0B,cAAA8H,eACAh8B,EAAAk0B,cAAA8H,cAAAxjC,MACA8/B,KACA9/B,GAAAA,EAAAlJ,QACAyJ,EAAA7B,KAAAsB,EAAA,SAAAxB,EAAAyB,GACA,IAAA4tB,EAAA5tB,EAAAwjC,WAAAxjC,EAAAwjC,YACA5V,GACAiS,EAAArjC,KAAAoxB,KAIAyV,GAAAxD,EAAAhpC,QACAwsC,EAAAxD,KAIApiC,KAWA,OARAoiC,EAAAuD,UAAAA,EAEAnL,EAAAjzB,UACA,aACA66B,GAEAhY,EAAA/lB,GAAAshC,UAAAvb,EAAA6P,MAAA1D,kBAAA6L,EAAAuD,UAAAvD,GAEAuD,IAIA5sC,OAAA,4BACA,YACA,SAAAyrC,GACA,IAAAwB,EAGAC,EAAA,EAAA,EAkDA,OAAAzB,EAAAvQ,OAhDA,SAAAx0B,GAEA,IAAAymC,GADAzmC,EAAAA,OACAymC,YAAA,EACAC,EAAA1mC,EAAA0mC,WAAA,EACAC,EAAA3mC,EAAA2mC,QAAA,GACAC,EAAA5mC,EAAA4mC,OAAA,GACAC,EAAA7mC,EAAA8mC,OACA,IAAAP,EAAA,CACA,IAAAnnB,EAAAmnB,EAAAtuB,SAAAkM,cAAA,SAEA,SAAA4iB,EAAAC,GACA,IAAA,IAAAntC,EAAAmtC,EAAArtC,OAAAE,KACAmtC,EAAAntC,GAAAu9B,KAAAoP,GACAQ,EAAAhkC,OAAAnJ,EAAA,GAGAgtC,EAAAG,GAGA5nB,EAAA3kB,KAAA,OACA2kB,EAAA8F,MAAAmG,SAAA,QACAjM,EAAA8F,MAAA2b,KAAA,EACAzhB,EAAA8F,MAAA+hB,IAAA,EACA7nB,EAAA8F,MAAAge,QAAA,KACAjrB,SAAA+E,KAAAqK,YAAAjI,GAEAA,EAAA8nB,SAAA,SAAA78B,GACA,IAAAo7B,EAAAp7B,EAAA5K,OAAA0nC,eAAA98B,EAAA5K,OAAAgmC,QAEAA,GAAAA,EAAA9rC,OACAqrC,SAAAjvB,IAAA0vB,GAAA50B,KAAA,SAAA8xB,GACAoE,EAAApE,KAGAoE,EAAAzsC,MAAAiC,UAAAgC,MAAA1D,KAAAwP,EAAA5K,OAAAkjC,QAGAvjB,EAAAlkB,MAAA,IAGAqrC,EAAAG,SAAAA,EACAH,EAAAI,OAAAA,EACAJ,EAAAK,MAAAA,EAEAL,EAAAa,gBAAAX,EACAF,EAAAtJ,WAOA3jC,OAAA,6BACA,wBACA,uBACA,oBACA,qBACA,2BACA,WACA,SAAA8J,EAAAi+B,EAAAtG,EAAApQ,EAAA6J,EAAAmO,GAMA,SAAA0E,EAAAvgB,EAAA9mB,GAKA,OAJAqhC,EAAA31B,GAAAob,EAAA,QAAA,SAAAzc,GACAA,EAAAI,iBACA+pB,EAAAx0B,KAEAO,KAWA,OARAoiC,EAAA0E,OAAAA,EAEAtM,EAAAjzB,UACA,UACA66B,GAEAhY,EAAA/lB,GAAAyiC,OAAA1c,EAAA6P,MAAA1D,kBAAA6L,EAAA0E,OAAA1E,GAEA0E,IAMA/tC,OAAA,8BACA,YACA,aACA,SAAA+S,GACA,OAAAA,IAEA/S,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAAyoB,EAAAuF,EAAAic,GACA,IAGAqD,EAHA9gB,EAAA,mBACA+gB,EAAA9kB,EAAAO,QACAkI,EAAAlD,EAAAkD,aAGA,SAAAsc,IACA,QAAA3nC,IAAAynC,EACA,OAAAA,EAEA,IAAAG,EAAAC,EACA9hB,EAAAoC,EAAAgB,eAAA,6IAEA,GACA2e,EAAA/hB,EAAAmD,WAAA,GAgBA,OAdAf,EAAAb,OAAAlP,SAAA+E,KAAA4I,GAEA6hB,EAAAE,EAAAvX,YAEA6T,EAAA7L,IAAAxS,EAAA,WAAA,UAEA8hB,EAAAC,EAAAvX,YAEAqX,IAAAC,IACAA,EAAA9hB,EAAA,GAAAgiB,aAGA5f,EAAAhZ,OAAA4W,GAEA0hB,EAAAG,EAAAC,EAMA,SAAAG,EAAA/gB,GACA,GAAAkB,EAAAxsB,SAAAsrB,GACA,OACA+Z,KAAA,EACAoG,IAAA,EACAhG,MAAA,EACA6G,OAAA,GAEA,IAAAC,EAAA3c,iBAAAtE,GACA,OACA+Z,KAAA0G,EAAAQ,EAAAC,gBAAAlhB,GACAmgB,IAAAM,EAAAQ,EAAAE,eAAAnhB,GACAma,MAAAsG,EAAAQ,EAAAG,iBAAAphB,GACAghB,OAAAP,EAAAQ,EAAAI,kBAAArhB,IAUA,SAAAshB,EAAAthB,EAAAuhB,GACA,QAAAxoC,IAAAwoC,EACA,OAAA7hB,EAAAloB,KAAAwoB,EAAAD,WAAAogB,IAAA,EAAApG,KAAA,GAAA/Z,EAAAwhB,wBAEA,IACA9iC,EAAA0lB,EAAApE,GAEAyhB,EAAAH,EAAA5iC,GACAgjC,EAAAC,EAAA3hB,GACA4hB,EAAAb,EAAAriC,GAMA,OAJAmjC,EAAA7hB,GACAmgB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACApG,KAAAwH,EAAAxH,KAAA0H,EAAA1H,KAAA2H,EAAA3H,KAAA6H,EAAA7H,OAEAtgC,KASA,SAAAqoC,EAAA9hB,EAAAuhB,GACA,YAAAxoC,IAAAwoC,EACAvhB,EAAAwhB,yBAEAF,EAAAthB,EAAAuhB,GACAjR,EAAAtQ,EAAAuhB,GACA9nC,MAwBA,SAAAsoC,EAAA/hB,EAAAgiB,GACA,QAAAjpC,GAAAipC,EACA,OACAC,MAAAjiB,EAAA8gB,YACAoB,OAAAliB,EAAAmiB,cAGA,IAAAC,EAAA,eAAAjF,EAAA7L,IAAAtR,EAAA,cACAvhB,GACAwjC,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,GAAAE,EAUA,CACA,IAAAC,EAAAtB,EAAA/gB,QAEAjnB,IAAA0F,EAAAwjC,QACAxjC,EAAAwjC,MAAAxjC,EAAAwjC,MAAAI,EAAAtI,KAAAsI,EAAAlI,YAGAphC,IAAA0F,EAAAyjC,SACAzjC,EAAAyjC,OAAAzjC,EAAAyjC,OAAAG,EAAAlC,IAAAkC,EAAArB,YAlBA,CACA,IAAAsB,EAAAC,EAAAviB,QAEAjnB,IAAA0F,EAAAwjC,QACAxjC,EAAAwjC,MAAAxjC,EAAAwjC,MAAAK,EAAAvI,KAAAuI,EAAAnI,YAGAphC,IAAA0F,EAAAyjC,SACAzjC,EAAAyjC,OAAAzjC,EAAAyjC,OAAAI,EAAAnC,IAAAmC,EAAAtB,QAeA,OADA7D,EAAA7L,IAAAtR,EAAAvhB,GACAhF,KAuEA,SAAA+oC,EAAAphB,GACA,IAAAN,EAAAM,EAAAN,gBACA5K,EAAAkL,EAAAlL,KACA7D,EAAA3G,KAAA2G,IACAowB,EAAApwB,EAAAyO,EAAA2hB,YAAAvsB,EAAAusB,aACA3B,EAAAzuB,EAAAyO,EAAAggB,YAAA5qB,EAAA4qB,aACAxX,EAAAjX,EAAAyO,EAAAwI,YAAApT,EAAAoT,aACAoZ,EAAArwB,EAAAyO,EAAA4hB,aAAAxsB,EAAAwsB,cACAP,EAAA9vB,EAAAyO,EAAAqhB,aAAAjsB,EAAAisB,cACAvd,EAAAvS,EAAAyO,EAAA8D,aAAA1O,EAAA0O,cAEA,OACAqd,MAAAQ,EAAAnZ,EAAAwX,EAAA2B,EACAP,OAAAQ,EAAA9d,EAAAud,EAAAO,GAwBA,SAAAf,EAAA3hB,GACA,GAAAkB,EAAAxsB,SAAAsrB,GACA,OACA+Z,KAAA,EACAoG,IAAA,EACAhG,MAAA,EACA6G,OAAA,GAGA,IAAAC,EAAA3c,iBAAAtE,GACA,OACA+Z,KAAA0G,EAAAQ,EAAA0B,YACAxC,IAAAM,EAAAQ,EAAA2B,WACAzI,MAAAsG,EAAAQ,EAAA4B,aACA7B,OAAAP,EAAAQ,EAAA6B,eAkBA,SAAAC,EAAA/iB,GACA,IAAA5sB,EAAAk9B,EAAAtQ,GACA5J,EAAAurB,EAAA3hB,GAEA,OACAiiB,MAAA7uC,EAAA6uC,MAAA7rB,EAAA2jB,KAAA3jB,EAAA+jB,MACA+H,OAAA9uC,EAAA8uC,OAAA9rB,EAAA+pB,IAAA/pB,EAAA4qB,QAQA,SAAAuB,EAAAviB,GACA,GAAAkB,EAAAxsB,SAAAsrB,GACA,OACA+Z,KAAA,EACAoG,IAAA,EACAhG,MAAA,EACA6G,OAAA,GAGA,IAAAC,EAAA3c,iBAAAtE,GACA,OACA+Z,KAAA0G,EAAAQ,EAAA+B,aACA7C,IAAAM,EAAAQ,EAAAgC,YACA9I,MAAAsG,EAAAQ,EAAAiC,cACAlC,OAAAP,EAAAQ,EAAAkC,gBAUA,SAAAC,EAAApjB,EAAAuhB,GACA,QAAAxoC,IAAAwoC,EAAA,CACA,IAAAnuC,EAAA4sB,EAAAwhB,wBACA,OACAzH,KAAA3mC,EAAA2mC,KAAAplC,OAAA0uC,YACAlD,IAAA/sC,EAAA+sC,IAAAxrC,OAAA2uC,aAGA,IACA5kC,EAAA0lB,EAAApE,GAEAyhB,EAAA2B,EAAA1kC,GACAgjC,EAAAC,EAAA3hB,GACA4hB,EAAAb,EAAAriC,GAMA,OAJAmjC,EAAA7hB,GACAmgB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACApG,KAAAwH,EAAAxH,KAAA0H,EAAA1H,KAAA2H,EAAA3H,KAAA6H,EAAA7H,OAEAtgC,KA+BA,SAAAooC,EAAA7hB,EAAAuhB,GACA,QAAAxoC,GAAAwoC,EAAA,CACA,IACA7iC,EAAA0lB,EAAApE,GAEAxiB,EAAA8jC,EAAAthB,GACAyhB,EAAAH,EAAA5iC,GAEAkjC,GADAD,EAAA3hB,GACA+gB,EAAAriC,IAGA,OACAyhC,IAAA3iC,EAAA2iC,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACApG,KAAAv8B,EAAAu8B,KAAA0H,EAAA1H,KAAA6H,EAAA7H,MAGA,IAAAt7B,GACA0hC,IAAAoB,EAAApB,IACApG,KAAAwH,EAAAxH,MAOA,MAJA,UAAAoD,EAAA7L,IAAAtR,EAAA,cACAvhB,EAAA,SAAA,YAEA0+B,EAAA7L,IAAAtR,EAAAvhB,GACAhF,KASA,SAAA8pC,EAAAvjB,EAAAuhB,GACA,QAAAxoC,IAAAwoC,EAAA,CACA,IACA7iC,EAAA0lB,EAAApE,GAEAxiB,EAAAskC,EAAA9hB,GACAyhB,EAAAH,EAAA5iC,GAEAkjC,GADAD,EAAA3hB,GACA+gB,EAAAriC,IAGA,OACAyhC,IAAA3iC,EAAA2iC,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACApG,KAAAv8B,EAAAu8B,KAAA0H,EAAA1H,KAAA6H,EAAA7H,KACAkI,MAAAzkC,EAAAykC,MACAC,OAAA1kC,EAAA0kC,QAKA,OAFAL,EAAA7hB,EAAAuhB,GACAjR,EAAAtQ,EAAAuhB,GACA9nC,KAmDA,SAAA+pC,EAAAxjB,EAAA5rB,GACA,IAAA4rB,EAAA1rB,WACA0rB,EAAAA,EAAAqE,aAEA,IAAAof,EAAA,eAAAzjB,EACA,YAAAjnB,IAAA3E,EACAqvC,EAAAzjB,EAAAwjB,WAAAxjB,EAAAqjB,aAEAI,EACAzjB,EAAAwjB,WAAApvC,EAEA4rB,EAAA0jB,SAAAtvC,EAAA4rB,EAAA2jB,SAEAlqC,MAQA,SAAAmqC,EAAA5jB,EAAA5rB,GACA,IAAA4rB,EAAA1rB,WACA0rB,EAAAA,EAAAqE,aAEA,IAAAwf,EAAA,cAAA7jB,EAEA,YAAAjnB,IAAA3E,EACAyvC,EAAA7jB,EAAA4jB,UAAA5jB,EAAAsjB,aAEAO,EACA7jB,EAAA4jB,UAAAxvC,EAEA4rB,EAAA0jB,SAAA1jB,EAAA8jB,QAAA1vC,GAEAqF,MAQA,SAAA62B,EAAAtQ,EAAAgiB,GACA,QAAAjpC,GAAAipC,EACA,OAAArmB,EAAAjnB,SAAAsrB,IAEAiiB,MAAAjiB,EAAA+jB,WACA7B,OAAAliB,EAAAgkB,aAGAroB,EAAA5mB,WAAAirB,GACAwiB,EAAArxB,WAGA8wB,MAAAjiB,EAAAsJ,YACA4Y,OAAAliB,EAAA4E,cAIA,IAAAwd,EAAA,eAAAjF,EAAA7L,IAAAtR,EAAA,cACAvhB,GACAwjC,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,IAAAE,EAAA,CACA,IAAAE,EAAAC,EAAAviB,GACAqiB,EAAAtB,EAAA/gB,QAEAjnB,IAAA0F,EAAAwjC,OAAA,KAAAxjC,EAAAwjC,OAAA,OAAAxjC,EAAAwjC,QACAxjC,EAAAwjC,MAAAxjC,EAAAwjC,MAAAK,EAAAvI,KAAAuI,EAAAnI,MAAAkI,EAAAtI,KAAAsI,EAAAlI,YAGAphC,IAAA0F,EAAAyjC,QAAA,KAAAzjC,EAAAyjC,QAAA,OAAAzjC,EAAAyjC,SACAzjC,EAAAyjC,OAAAzjC,EAAAyjC,OAAAI,EAAAnC,IAAAmC,EAAAtB,OAAAqB,EAAAlC,IAAAkC,EAAArB,QAIA,OADA7D,EAAA7L,IAAAtR,EAAAvhB,GACAhF,KAmBA,SAAAwqC,IACA,OAAAA,EAmfA,OAhfAtoB,EAAApiB,MAAA0qC,GACAlD,cAAAA,EAEAO,iBAAAA,EAEAQ,aAAAA,EAEAK,aA3eA,SAAAniB,EAAA5rB,GACA,YAAA2E,GAAA3E,EACA2tC,EAAA/hB,GAAAkiB,OAEAH,EAAA/hB,GACAkiB,OAAA9tC,KAweA2tC,WAAAA,EAEAjB,YAhbA,SAAA9gB,EAAA5rB,GACA,YAAA2E,GAAA3E,EACA2tC,EAAA/hB,GAAAiiB,OAEAF,EAAA/hB,GACAiiB,MAAA7tC,IAEAqF,OA2aAyqC,YAnaA,SAAAlkB,GACA,IAAAmkB,EAAApC,EAAA/hB,GACAsiB,EAAAC,EAAAviB,GAQA,OACA+Z,KAAAuI,EAAAvI,KACAoG,IAAAmC,EAAAnC,IACA8B,MAAAkC,EAAAlC,MAAAK,EAAAvI,KAAAuI,EAAAnI,MACA+H,OAAAiC,EAAAjC,OAAAI,EAAAnC,IAAAmC,EAAAtB,SAuZAoD,UAlZA,SAAAlgB,EAAAmgB,EAAAC,GACA,IAAAC,EAAAD,EACAE,EAAAH,EACA1oB,EAAArlB,YAAAkuC,KACAA,GAAA,GAEA7oB,EAAArlB,YAAAiuC,KACAA,GAAA,GAEArgB,EAAA9F,MAAAmG,SAAA,WACAigB,IACAtgB,EAAA9F,MAAA2b,KAAA,EACA7V,EAAA9F,MAAA+b,MAAA,GAEAoK,IACArgB,EAAA9F,MAAA+hB,IAAA,EACAjc,EAAA9F,MAAA4iB,OAAA,IAoYAwB,gBAAAA,EAEAN,OAxWA,SAAAliB,EAAA5rB,GACA,YAAA2E,GAAA3E,EACAk8B,EAAAtQ,GAAAkiB,QAEA5R,EAAAtQ,GACAkiB,OAAA9tC,IAEAqF,OAmWAkoC,cAAAA,EAEA8C,WA1UA,SAAAzkB,GACA,IAAA5sB,EAAAmwC,EAAAvjB,GACA5J,EAAAurB,EAAA3hB,GAEA,OACA+Z,KAAA3mC,EAAA2mC,KACAoG,IAAA/sC,EAAA+sC,IACA8B,MAAA7uC,EAAA6uC,MAAA7rB,EAAA2jB,KAAA3jB,EAAA+jB,MACA+H,OAAA9uC,EAAA8uC,OAAA9rB,EAAA+pB,IAAA/pB,EAAA4qB,SAoUA+B,WAAAA,EAEA3e,aAAAA,EAEAme,eAAAA,EAGAa,aAAAA,EAEAsB,SAtQA,SAAA1kB,EAAAuhB,GACA,QAAAxoC,IAAAwoC,EAAA,CACA,IAAAnuC,EAAA4sB,EAAAwhB,wBACA,OACAzH,KAAA3mC,EAAA2mC,KAAAplC,OAAA0uC,YACAlD,IAAA/sC,EAAA+sC,IAAAxrC,OAAA2uC,YACArB,MAAAv2B,KAAAi5B,MAAAvxC,EAAA6uC,OACAC,OAAAx2B,KAAAi5B,MAAAvxC,EAAA8uC,SAKA,OAFAkB,EAAApjB,EAAAuhB,GACAjR,EAAAtQ,EAAAuhB,GACA9nC,MA6PAooC,iBAAAA,EAEA0B,aAAAA,EAEA7C,eAAAA,EAEAkE,eA3LA,SAAA5kB,EAAA6kB,GAcA,IACApyB,EAAAM,EAAAkvB,EAAAC,EAAA4C,EAAAC,EADAC,EAAAhlB,EAAAM,WAEA2kB,EAfA,SAAAjlB,EAAAklB,GACA,IAAAzyB,EAAAM,EAAArU,EAAAshB,EAEAvN,EAAAM,EAAA,EACA,KAAArU,GAAAA,GAAAwmC,GAAAxmC,EAAApK,UACAme,GAAA/T,EAAAymC,YAAA,EACApyB,GAAArU,EAAA0mC,WAAA,EACA1mC,EAAAA,EAAA0lB,aAGA,OAAA3R,EAAAA,EAAAM,EAAAA,GAKAsyB,CAAArlB,EAAAglB,GAEAvyB,EAAAwyB,EAAAxyB,EACAM,EAAAkyB,EAAAlyB,EACAkvB,EAAAjiB,EAAAsJ,YACA4Y,EAAAliB,EAAA4E,aACAkgB,EAAAE,EAAAlE,YACAiE,EAAAC,EAAA7C,aAEA,OAAA0C,GACApyB,GAAAqyB,EAAA7C,EACAlvB,GAAAgyB,EAAA7C,GACA,UAAA2C,IACApyB,GAAAqyB,EAAA,EAAA7C,EAAA,EACAlvB,GAAAgyB,EAAA,EAAA7C,EAAA,GAMA,OAHA8C,EAAAxB,WAAA/wB,EACAuyB,EAAApB,UAAA7wB,EAEAtZ,MAyJA+pC,WAAAA,EAEAI,UAAAA,EAEAtT,KAAAA,EAEA2R,MAlEA,SAAAjiB,EAAA5rB,GACA,YAAA2E,GAAA3E,EACAk8B,EAAAtQ,GAAAiiB,OAEA3R,EAAAtQ,GACAiiB,MAAA7tC,IAEAqF,SA8DA,WACA,IAAA4Y,EAAA3G,KAAA2G,IACAizB,EAAA55B,KAAA45B,IACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,KAEA,SAAAC,EAAAC,EAAA5D,EAAAC,GACA,OACA/lB,WAAA0pB,EAAA,KAAAF,EAAAnuC,KAAAquC,EAAA,IAAA5D,EAAA,IAAA,GACA9lB,WAAA0pB,EAAA,KAAAF,EAAAnuC,KAAAquC,EAAA,IAAA3D,EAAA,IAAA,IAIA,SAAA4D,EAAAviB,EAAAwL,GACA,OAAA/3B,SAAAmmC,EAAA7L,IAAA/N,EAAAwL,GAAA,KAAA,EAqPA,IAAAgX,GACAC,KACAjM,KAAA,SAAAxV,EAAAxhB,GACA,IAMAkjC,EANAC,EAAAnjC,EAAAmjC,OACAC,EAAAD,EAAAxxC,SAAAwxC,EAAA1C,WAAA0C,EAAA1oC,OAAAu8B,KACAqM,EAAAF,EAAAjE,MACAoE,EAAA9hB,EAAAwV,KAAAh3B,EAAAujC,kBAAA3D,WACA4D,EAAAJ,EAAAE,EACAG,EAAAH,EAAAtjC,EAAA0jC,eAAAL,EAAAD,EAIApjC,EAAA0jC,eAAAL,EAGAG,EAAA,GAAAC,GAAA,GACAP,EAAA1hB,EAAAwV,KAAAwM,EAAAxjC,EAAA0jC,eAAAL,EACAD,EACA5hB,EAAAwV,MAAAwM,EAAAN,GAIA1hB,EAAAwV,KADAyM,EAAA,GAAAD,GAAA,EACAJ,EAIAI,EAAAC,EACAL,EAAAC,EAAArjC,EAAA0jC,eAEAN,EAKAI,EAAA,EACAhiB,EAAAwV,MAAAwM,EAGAC,EAAA,EACAjiB,EAAAwV,MAAAyM,EAIAjiB,EAAAwV,KAAA1nB,EAAAkS,EAAAwV,KAAAsM,EAAA9hB,EAAAwV,OAGAoG,IAAA,SAAA5b,EAAAxhB,GACA,IAMA2jC,EANAR,EAAAnjC,EAAAmjC,OACAC,EAAAD,EAAAxxC,SAAAwxC,EAAAtC,UAAAsC,EAAA1oC,OAAA2iC,IACAwG,EAAA5jC,EAAAmjC,OAAAhE,OACA0E,EAAAriB,EAAA4b,IAAAp9B,EAAAujC,kBAAA1D,UACAiE,EAAAV,EAAAS,EACAE,EAAAF,EAAA7jC,EAAAgkC,gBAAAJ,EAAAR,EAIApjC,EAAAgkC,gBAAAJ,EAGAE,EAAA,GAAAC,GAAA,GACAJ,EAAAniB,EAAA4b,IAAA0G,EAAA9jC,EAAAgkC,gBAAAJ,EACAR,EACA5hB,EAAA4b,KAAA0G,EAAAH,GAIAniB,EAAA4b,IADA2G,EAAA,GAAAD,GAAA,EACAV,EAIAU,EAAAC,EACAX,EAAAQ,EAAA5jC,EAAAgkC,gBAEAZ,EAKAU,EAAA,EACAtiB,EAAA4b,KAAA0G,EAGAC,EAAA,EACAviB,EAAA4b,KAAA2G,EAIAviB,EAAA4b,IAAA9tB,EAAAkS,EAAA4b,IAAAyG,EAAAriB,EAAA4b,OAIA6G,MACAjN,KAAA,SAAAxV,EAAAxhB,GACA,IAkBAkjC,EACAgB,EAnBAf,EAAAnjC,EAAAmjC,OACAC,EAAAD,EAAA1oC,OAAAu8B,KAAAmM,EAAA1C,WACA4C,EAAAF,EAAAjE,MACAkD,EAAAe,EAAAxxC,SAAAwxC,EAAA1C,WAAA0C,EAAA1oC,OAAAu8B,KACAsM,EAAA9hB,EAAAwV,KAAAh3B,EAAAujC,kBAAA3D,WACA4D,EAAAF,EAAAlB,EACAqB,EAAAH,EAAAtjC,EAAA0jC,eAAAL,EAAAjB,EACA+B,EAAA,SAAAnkC,EAAAokC,GAAA,IACApkC,EAAAqkC,UACA,UAAArkC,EAAAokC,GAAA,GACApkC,EAAAqkC,UACA,EACAC,EAAA,SAAAtkC,EAAAukC,GAAA,GACAvkC,EAAAwkC,YACA,UAAAxkC,EAAAukC,GAAA,IACAvkC,EAAAwkC,YACA,EACA/pC,GAAA,EAAAuF,EAAAvF,OAAA,GAIA+oC,EAAA,IACAN,EAAA1hB,EAAAwV,KAAAmN,EAAAG,EAAA7pC,EAAAuF,EAAA0jC,eACAL,EAAAD,GACA,GAAAF,EAAAX,EAAAiB,MACAhiB,EAAAwV,MAAAmN,EAAAG,EAAA7pC,GAEAgpC,EAAA,KACAS,EAAA1iB,EAAAwV,KAAAh3B,EAAAujC,kBAAA3D,WAAAuE,EACAG,EAAA7pC,EAAA2nC,GACA,GAAAG,EAAA2B,GAAAT,KACAjiB,EAAAwV,MAAAmN,EAAAG,EAAA7pC,IAIA2iC,IAAA,SAAA5b,EAAAxhB,GACA,IAmBAykC,EACAd,EApBAR,EAAAnjC,EAAAmjC,OACAC,EAAAD,EAAA1oC,OAAA2iC,IAAA+F,EAAAtC,UACA+C,EAAAT,EAAAhE,OACAkD,EAAAc,EAAAxxC,SAAAwxC,EAAAtC,UAAAsC,EAAA1oC,OAAA2iC,IACAyG,EAAAriB,EAAA4b,IAAAp9B,EAAAujC,kBAAA1D,UACAiE,EAAAD,EAAAxB,EACA0B,EAAAF,EAAA7jC,EAAAgkC,gBAAAJ,EAAAvB,EACAjF,EAAA,QAAAp9B,EAAAokC,GAAA,GACAD,EAAA/G,GACAp9B,EAAA0kC,WACA,WAAA1kC,EAAAokC,GAAA,GACApkC,EAAA0kC,WACA,EACAJ,EAAA,QAAAtkC,EAAAukC,GAAA,GACAvkC,EAAA2kC,aACA,WAAA3kC,EAAAukC,GAAA,IACAvkC,EAAA2kC,aACA,EACAlqC,GAAA,EAAAuF,EAAAvF,OAAA,GAGAqpC,EAAA,IACAH,EAAAniB,EAAA4b,IAAA+G,EAAAG,EAAA7pC,EAAAuF,EAAAgkC,gBACAJ,EAAAR,GACA,GAAAO,EAAApB,EAAAuB,MACAtiB,EAAA4b,KAAA+G,EAAAG,EAAA7pC,GAEAspC,EAAA,KACAU,EAAAjjB,EAAA4b,IAAAp9B,EAAAujC,kBAAA1D,UAAAsE,EAAAG,EACA7pC,EAAA4nC,GACA,GAAAE,EAAAkC,GAAAV,KACAviB,EAAA4b,KAAA+G,EAAAG,EAAA7pC,KAKAmqC,SACA5N,KAAA,WACAgM,EAAAiB,KAAAjN,KAAAvgC,MAAAC,KAAAN,WACA4sC,EAAAC,IAAAjM,KAAAvgC,MAAAC,KAAAN,YAEAgnC,IAAA,WACA4F,EAAAiB,KAAA7G,IAAA3mC,MAAAC,KAAAN,WACA4sC,EAAAC,IAAA7F,IAAA3mC,MAAAC,KAAAN,cAKA8qC,EAAA2D,MAhWA,SAAA5nB,EAAAphB,GAIA,IAAAyoC,EAAAE,EAAAG,EAAAG,EAAAC,EAAAC,EACApvC,GAHAiG,EAAA+c,EAAA9gB,UAAA+D,IAGAopC,GACA9B,GAxBA3iB,EAwBA3kB,EAAAsnC,OAvBA+B,EAAA1kB,GAAA5uB,OACAD,EAAAwsB,EAAAxsB,SAAAuzC,GACAlzC,IAAAkzC,GAAA,IAAAA,EAAA3zC,SACA4zC,GAAAxzC,IAAAK,EACAozC,EAAApF,EAAAkF,IAEA1kB,QAAA0kB,EACAvzC,SAAAA,EACAK,WAAAA,EACAyI,OAAA0qC,EAAA9E,EAAA7f,IAAAwW,KAAA,EAAAoG,IAAA,GACAqD,WAAAA,EAAAyE,GACArE,UAAAA,EAAAqE,GACAhG,MAAAkG,EAAAlG,MACAC,OAAAiG,EAAAjG,SAWAkG,EAxCA,SAAAlC,GACA,IAAAmC,EAAAnC,EAAAxxC,UAAAwxC,EAAAnxC,WAAA,GACAooC,EAAA7L,IAAA4U,EAAA3iB,QAAA,cACA+kB,EAAApC,EAAAxxC,UAAAwxC,EAAAnxC,WAAA,GACAooC,EAAA7L,IAAA4U,EAAA3iB,QAAA,cACAglB,EAAA,WAAAF,GACA,SAAAA,GAAAnC,EAAAjE,MAAAQ,YAAAyD,EAAA3iB,SAGA,OACA0e,MAHA,WAAAqG,GACA,SAAAA,GAAApC,EAAAhE,OAAAQ,aAAAwD,EAAA3iB,SAEAmd,IAAA,EACAwB,OAAAqG,EAAA7H,IAAA,GA6BA8H,CAAAtC,GACAuC,GAAA7pC,EAAA6pC,WAAA,QAAA71C,MAAA,KACAizC,KA3BA,IAAAtiB,EACA0kB,EACAvzC,EACAK,EACAmzC,EACAC,EAtDA5hB,EA8EA5tB,EAAAovC,EA7EA,IAAAxhB,EAAAjyB,UAEAg8B,KAAAA,EAAA/J,GACA/oB,QAAA2iC,IAAA,EAAApG,KAAA,IAGA7Y,EAAAxsB,SAAA6xB,IAEA+J,KAAAA,EAAA/J,GACA/oB,QACA2iC,IAAAyD,EAAArd,GACAwT,KAAAyJ,EAAAjd,KAIAA,EAAA5iB,gBAEA2sB,MACA2R,MAAA,EACAC,OAAA,GAEA1kC,QACA2iC,IAAA5Z,EAAAmiB,MACA3O,KAAAxT,EAAAoiB,SAKArY,KAAAA,EAAA/J,GACA/oB,OAAA4lC,EAAA7c,IAiDA5tB,EAAAgL,iBAGA/E,EAAA0oC,GAAA,YAlFA,IAAA/gB,EAoFAghB,EAAAQ,EAAAzX,KAAA2R,MACAyF,EAAAK,EAAAzX,KAAA4R,OACA2F,EAAAE,EAAAvqC,OAGAsqC,EAAAnsB,EAAA9gB,UAAAgtC,GAIAlsB,EAAAlhB,MAAA,KAAA,MAAA,WACA,IACAmuC,EACAC,EAFA5D,GAAArmC,EAAAnF,OAAA,IAAA7G,MAAA,KAIA,IAAAqyC,EAAApyC,SACAoyC,EAAAM,EAAA/tC,KAAAytC,EAAA,IACAA,EAAAvnC,QAAA,WACA8nC,EAAAhuC,KAAAytC,EAAA,KACA,UAAAvnC,OAAAunC,IACA,SAAA,WAEAA,EAAA,GAAAM,EAAA/tC,KAAAytC,EAAA,IAAAA,EAAA,GAAA,SACAA,EAAA,GAAAO,EAAAhuC,KAAAytC,EAAA,IAAAA,EAAA,GAAA,SAGA2D,EAAAnD,EAAAn0B,KAAA2zB,EAAA,IACA4D,EAAApD,EAAAn0B,KAAA2zB,EAAA,IACAY,EAAApsC,OACAmvC,EAAAA,EAAA,GAAA,EACAC,EAAAA,EAAA,GAAA,GAIAjqC,EAAAnF,OACAisC,EAAAp0B,KAAA2zB,EAAA,IAAA,GACAS,EAAAp0B,KAAA2zB,EAAA,IAAA,MAKA,IAAAwD,EAAA51C,SACA41C,EAAA,GAAAA,EAAA,IAGA,UAAA7pC,EAAA0oC,GAAA,GACAQ,EAAA/N,MAAAwN,EACA,WAAA3oC,EAAA0oC,GAAA,KACAQ,EAAA/N,MAAAwN,EAAA,GAGA,WAAA3oC,EAAA0oC,GAAA,GACAQ,EAAA3H,KAAAuH,EACA,WAAA9oC,EAAA0oC,GAAA,KACAQ,EAAA3H,KAAAuH,EAAA,GAOA,OAJAL,EAAAzB,EAAAC,EAAAyB,GAAAC,EAAAG,GACAI,EAAA/N,MAAAsN,EAAA,GACAS,EAAA3H,KAAAkH,EAAA,GAEA,SAAAnjB,GACA,IAAAoiB,EAAAwC,EACAX,EAAApF,EAAA7e,GACAkjB,EAAAe,EAAAlG,MACAwF,EAAAU,EAAAjG,OACAS,EAAAmD,EAAA5hB,EAAA,cACA0e,EAAAkD,EAAA5hB,EAAA,aACAuiB,EAAAW,EAAAzE,EAAAmD,EAAA5hB,EAAA,eACAkkB,EAAAnG,MACA8E,EAAAU,EAAA7E,EAAAkD,EAAA5hB,EAAA,gBACAkkB,EAAAlG,OACA3d,EAAA5I,EAAA9gB,UAAAitC,GACAZ,EAAAtB,EAAAC,EAAAsB,GAAAgB,EAAAlG,MAAAkG,EAAAjG,QAEA,UAAAtjC,EAAAuoC,GAAA,GACA5iB,EAAAwV,MAAAqN,EACA,WAAAxoC,EAAAuoC,GAAA,KACA5iB,EAAAwV,MAAAqN,EAAA,GAGA,WAAAxoC,EAAAuoC,GAAA,GACA5iB,EAAA4b,KAAAsH,EACA,WAAA7oC,EAAAuoC,GAAA,KACA5iB,EAAA4b,KAAAsH,EAAA,GAGAljB,EAAAwV,MAAAmN,EAAA,GACA3iB,EAAA4b,KAAA+G,EAAA,GAEAZ,GACA3D,WAAAA,EACAC,UAAAA,GAGAjnB,EAAAlhB,MAAA,OAAA,OAAA,SAAA1H,EAAAg2C,GACAhD,EAAA0C,EAAA11C,KACAgzC,EAAA0C,EAAA11C,IAAAg2C,GAAAxkB,GACAgjB,YAAAA,EACAG,aAAAA,EACAN,UAAAA,EACAK,WAAAA,EACAnB,kBAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACAvpC,QAAA6pC,EAAA,GAAAH,EAAA,GAAAG,EAAA,GAAAH,EAAA,IACAC,GAAAvoC,EAAAuoC,GACAG,GAAA1oC,EAAA0oC,GACApB,OAAAA,EACAhiB,KAAAA,MAKAtlB,EAAAkqC,QAGAA,EAAA,SAAArqC,GACA,IAAAs7B,EAAA8N,EAAA9N,KAAAxV,EAAAwV,KACAI,EAAAJ,EAAAwN,EAAAH,EACAjH,EAAA0H,EAAA1H,IAAA5b,EAAA4b,IACAa,EAAAb,EAAAuH,EAAAD,EACAuB,GACArwC,QACA4qB,QAAA5qB,EACAohC,KAAA8N,EAAA9N,KACAoG,IAAA0H,EAAA1H,IACA8B,MAAAsF,EACArF,OAAAwF,GAEAnkB,SACAA,QAAAW,EACA6V,KAAAxV,EAAAwV,KACAoG,IAAA5b,EAAA4b,IACA8B,MAAAmF,EACAlF,OAAAuF,GAEAjD,WAAArK,EAAA,EAAA,OAAAJ,EAAA,EAAA,QAAA,SACAwK,SAAAvD,EAAA,EAAA,MAAAb,EAAA,EAAA,SAAA,UAEAoH,EAAAH,GAAA9B,EAAAvL,EAAAI,GAAAoN,IACAyB,EAAAxE,WAAA,UAEAkD,EAAAD,GAAAnC,EAAAnF,EAAAa,GAAA0G,IACAsB,EAAAzE,SAAA,UAEAlyB,EAAAizB,EAAAvL,GAAAuL,EAAAnL,IAAA9nB,EAAAizB,EAAAnF,GAAAmF,EAAAtE,IACAgI,EAAAC,UAAA,aAEAD,EAAAC,UAAA,WAEArqC,EAAAkqC,MAAA/0C,KAAA0F,KAAAgF,EAAAuqC,KAIA5F,EAAAlf,EAAAvI,EAAA9gB,OAAA0pB,GAAAukB,MAAAA,KA9FA,CA+FA9oB,IAnQA,GA0bA9sB,EAAAC,OAAA,YAAA8wC,KAEAzxC,OAAA,0BACA,sBACA,SACA,oBACA,sBACA,SAAAmpB,EAAAsoB,EAAAhQ,EAAApQ,GAqHA,OAnHAoQ,EAAAjzB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAijC,GAEApgB,EAAA/lB,GAAAN,OAAAqmB,EAAA6P,MAAAzD,cAAAgU,EAAAb,aAAAa,EAAAA,EAAAb,cAEAvf,EAAA/lB,GAAA8lC,UAAA/f,EAAA6P,MAAAzD,cAAAgU,EAAAL,UAAAK,GAEApgB,EAAA/lB,GAAA0lC,WAAA3f,EAAA6P,MAAAzD,cAAAgU,EAAAT,WAAAS,GAEApgB,EAAA/lB,GAAAymB,SAAA,SAAA3lB,GACA,IAAAnF,KAAA5G,OACA,OAAA4G,KAGA,GAAAmF,EAKA,OAJAA,EAAAopC,IAAAppC,EAAAopC,GAAAn1C,UACA+L,EAAA+c,EAAAxhB,MAAAyE,IACAopC,GAAAppC,EAAAopC,GAAA,IAEAvuC,KAAAgB,KAAA,WACAwpC,EAAA2D,MAAAnuC,KAAAmF,KAGA,IAAAslB,EAAAzqB,KAAA,GAEA,OAAAwqC,EAAApC,iBAAA3d,IAKAL,EAAA/lB,GAAAsmB,aAAAP,EAAA6P,MAAA9D,YAAAqU,EAAA7f,aAAA6f,GAGApgB,EAAA/lB,GAAAwyB,KAAAzM,EAAA6P,MAAAzD,cAAAgU,EAAA3T,KAAA2T,GAEApgB,EAAA/lB,GAAAmkC,MAAApe,EAAA6P,MAAAzD,cAAAgU,EAAAhC,MAAAgC,EAAAA,EAAAhC,OAEApe,EAAA/lB,GAAAokC,OAAAre,EAAA6P,MAAAzD,cAAAgU,EAAA/B,OAAA+B,EAAAA,EAAA/B,QAEAre,EAAA/lB,GAAAikC,WAAAle,EAAA6P,MAAAzD,cAAAgU,EAAAlC,WAAAkC,EAAAlC,aAEA,QAAA,UAAAnuC,QAAA,SAAAouC,GACA,IAAAkH,EAAAlH,EAAA1qC,QAAA,IAAA,SAAAib,GACA,OAAAA,EAAA,GAAAmE,gBAGAmN,EAAA/lB,GAAA,QAAAorC,GAAA,SAAAC,EAAA/0C,GAWA,GAVA+E,UAAAtG,OACA,kBAAAs2C,IACA/0C,EAAA+0C,EACAA,GAAA,IAGAA,GAAA,EACA/0C,OAAA2E,QAGAA,IAAA3E,EAAA,CACA,IAAAitB,EAAA5nB,KAAA,GACA,IAAA4nB,EACA,OAEA,IAAA+nB,EAAAnF,EAAA3T,KAAAjP,GACA,GAAA8nB,EAAA,CACA,IAAA/yB,EAAA6tB,EAAAtC,cAAAtgB,GACA+nB,EAAAnH,MAAAmH,EAAAnH,MAAA7rB,EAAA2jB,KAAA3jB,EAAA+jB,MACAiP,EAAAlH,OAAAkH,EAAAlH,OAAA9rB,EAAA+pB,IAAA/pB,EAAA4qB,OAEA,MAAA,UAAAgB,EAAAoH,EAAAnH,MAAAmH,EAAAlH,OAEA,OAAAzoC,KAAAgB,KAAA,SAAAwB,EAAAolB,GACA,IAAAgoB,KACAjzB,EAAA6tB,EAAAtC,cAAAtgB,GACA,UAAA2gB,GACAqH,EAAApH,MAAA7tC,EACA+0C,IACAE,EAAApH,MAAAoH,EAAApH,MAAA7rB,EAAA2jB,KAAA3jB,EAAA+jB,SAGAkP,EAAAnH,OAAA9tC,EACA+0C,IACAE,EAAAnH,OAAAmH,EAAAnH,OAAA9rB,EAAA+pB,IAAA/pB,EAAA4qB,SAGAiD,EAAA3T,KAAAjP,EAAAgoB,QAOAxlB,EAAA/lB,GAAAimC,WAAAlgB,EAAA6P,MAAAzD,cAAAgU,EAAAnD,YAAAmD,EAAAA,EAAAnD,aAEAjd,EAAA/lB,GAAAkmC,YAAAngB,EAAA6P,MAAAzD,cAAAgU,EAAA9B,aAAA8B,EAAAA,EAAA9B,cAEA8B,IAEAzxC,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,sBACA,wBACA,sBACA,uBACA,qBACA,oBACA,sBACA,wBACA,SAAAU,EAAAyoB,EAAAhL,EAAAuQ,EAAA+iB,EAAA9G,EAAA5C,GACA,IAAA+O,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAEAC,EAAAl5B,EAAA8N,kBAAA,gBACA+b,EAAA7pB,EAAA8N,kBAAA,iBAEAqrB,EAAA,8EACAvyB,EAAA5G,EAAAoM,eAAA,YACAgtB,KAwBA,SAAAC,EAAAhqB,EAAAiqB,EAAAC,EAAAC,EAAAzvC,EAAA0vC,GACA,IAAA7xC,EAKA8xC,EACAC,EALAC,KACAC,KACAC,EAAA,GACAC,EAAAjxC,KAGAkxC,GAAA,EACA9G,GAAA,EAkCA,GA/BAloB,EAAArmB,cAAA40C,KACAC,EAAAD,EAAAU,OACAlwC,EAAAwvC,EAAAW,SACAT,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGAvuB,EAAAlnB,SAAAy1C,KACAA,EAAAY,EAAAC,OAAAb,SAEAnxC,IAAAmxC,IACAA,EAAAY,EAAAC,OAAAC,QAEAd,GAAA,IACAY,EAAA1lC,MACA8kC,EAAA,GAGAvuB,EAAAxnB,WAAAg2C,IACAzvC,EAAAyvC,EACAc,KAAA,SAEAd,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGAzuB,EAAAlnB,SAAAw1C,GAEAM,EAAAjB,GAAAW,EACAM,EAAAhB,GAAAW,EAAA,IACAK,EAAAf,GAAAW,EACAE,EAAAR,MACA,CAEA,IAAAtxC,KAAA0xC,EAAA,CACA,IAAAl8B,EAAAk8B,EAAA1xC,GACA,GAAAuxC,EAAAtyC,KAAAe,GACAkyC,GAAAlyC,EAAA,IAAAwV,EAAA,SACA,CAIA,GAHA,cAAAxV,IACAsrC,GAAA,GAEA,QAAAtrC,GAAAojB,EAAArmB,cAAAyY,IAEA,GADAw8B,EAAAhyC,GAAA,QAAAwV,EAAAoyB,IAAA,MAAApyB,EAAAosB,MAAA,MAAApsB,EAAAizB,OAAA,MAAAjzB,EAAAgsB,KAAA,MACA,QAAAoD,EAAA7L,IAAAtR,EAAA,QAAA,CACA,IAAAsQ,EAAA2T,EAAA3T,KAAAtQ,GACAmd,EAAA7L,IAAAtR,EAAA,OAAA,YAAAsQ,EAAA2R,MAAA,MAAA3R,EAAA4R,OAAA,YACA,QAIAqI,EAAAhyC,GAAAwV,EAEAy8B,EAAAhyC,KAAAmjB,EAAAhF,UAAApe,KAGA8xC,EAAA7P,EA8DA,OA3DAiQ,IACAF,EAAAhzB,GAAAkzB,EACAD,EAAAhyC,KAAA+e,IAGA2yB,EAAA,GAAAvuB,EAAArmB,cAAA20C,KACAM,EAAAd,GAAAe,EAAApnC,KAAA,MACAmnC,EAAAb,GAAAQ,EAAA,IACAK,EAAAX,GAAAQ,EAAA,IACAG,EAAAZ,GAAAQ,GAGAG,EAAA,SAAAvmC,GAEA,GADA4mC,GAAA,EACA5mC,EAAA,CACA,GAAAA,EAAApL,SAAAoL,EAAAw0B,cACA,OAEAgC,EAAAn1B,IAAArB,EAAApL,OAAA0xC,EAAAC,QAEA/P,EAAAn1B,IAAA4a,EAAA6pB,EAAAS,GAEAnN,EAAA7L,IAAAtR,EAAA+pB,GAIArvC,GAAAA,EAAA3G,KAAA0F,OAGAywC,EAAA,IACA3P,EAAA31B,GAAAob,EAAAqqB,EAAAC,GAGA3uB,EAAA1Z,SAAA,WACA0oC,GAGAL,EAAAv2C,KAAA22C,IACA,KAAAR,EAAAE,GAAA,GALAzuB,IASAqE,EAAAkrB,WAEA/N,EAAA7L,IAAAtR,EAAAuqB,GAEAL,GAAA,GACAvuB,EAAA1Z,SAAA,WACA0oC,GAGAL,EAAAv2C,KAAA22C,IACA,EALA/uB,GAQAkoB,GACAsH,EAAAnrB,EAAAiqB,EAAA,UAAAC,EAAAxvC,GAGAjB,KASA,SAAA83B,EAAAvR,EAAAorB,EAAA1wC,GAUA,OATAyiC,EAAA5L,KAAAvR,GACAorB,KACA1wC,GAAAihB,EAAAxnB,WAAAi3C,KACA1wC,EAAA0wC,EACAA,EAAA,UAEAjO,EAAA7L,IAAAtR,EAAA,UAAA,GACAgqB,EAAAhqB,GAAAoc,QAAA,EAAAiP,MAAA,OAAAD,EAAA1wC,IAEAjB,KAUA,SAAA+3B,EAAAxR,EAAAorB,EAAA1wC,GAeA,OAdA0wC,IACA1wC,GAAAihB,EAAAxnB,WAAAi3C,KACA1wC,EAAA0wC,EACAA,EAAA,UAEApB,EAAAhqB,GAAAoc,QAAA,EAAAiP,MAAA,OAAAD,EAAA,WACAjO,EAAA3L,KAAAxR,GACAtlB,GACAA,EAAA3G,KAAAisB,MAIAmd,EAAA3L,KAAAxR,GAEAvmB,KAUA,SAAA0xC,EAAAnrB,EAAAilB,EAAAmG,EAAA1wC,GACA,IAAA4wC,EAAAt0C,SAAAgpB,EAAA4jB,WACA7wC,EAAA,EAEAw4C,EAAA,IAAAH,EADA,EAEA1H,EAAA1sC,SAAAiuC,GAEAuG,EAAAC,YAAA,aACA14C,GAEAw4C,IAAAvrB,EAAA4jB,WAAAF,EAAA4H,GAAAC,EAAAx4C,EAAAu4C,GAEAv4C,GAAAw4C,EAAA,IACAG,cAAAF,GACA9wC,GAAAihB,EAAA1Z,SAAAvH,EAAA,IAAAihB,KAXA,GAuCA,SAAAgwB,EAAA3rB,EAAAorB,EAAAhP,EAAAwO,EAAAlwC,GAEA,OADAsvC,EAAAhqB,GAAAoc,QAAAA,GAAAgP,EAAAR,EAAAlwC,GACAjB,KAWA,SAAAmyC,EAAA5rB,EAAAorB,EAAAR,EAAAlwC,GACA,IAAA/B,EAAAwkC,EAAA7L,IAAAtR,EAAA,WAUA,OATArnB,EAAA,EACAwkC,EAAA7L,IAAAtR,EAAA,UAAA,GAEArnB,EAAA,EAEAwkC,EAAA5L,KAAAvR,GAEA2rB,EAAA3rB,EAAAorB,EAAAzyC,EAAAiyC,EAAAlwC,GAEAjB,KAUA,SAAAoyC,EAAA7rB,EAAAorB,EAAAR,EAAAlwC,GACA,IACAmwC,EACAzO,EAAAe,EAAA7L,IAAAtR,EAAA,WACAphB,KAyBA,OAvBA+c,EAAArmB,cAAA81C,IACAxsC,EAAAgsC,OAAAQ,EAAAR,OACAhsC,EAAAsrC,SAAAkB,EAAAlB,SACAW,EAAAO,EAAAP,WAEAjsC,EAAAsrC,SAAAkB,EACA1wC,GACAmwC,EAAAnwC,EACAkE,EAAAgsC,OAAAA,GAEAC,EAAAD,GAGAhsC,EAAAisC,SAAA,WACA1N,EAAA7L,IAAAtR,EAAA,UAAAoc,GACAe,EAAA3L,KAAAxR,GACA6qB,GACAA,EAAA92C,KAAAisB,IAIA2rB,EAAA3rB,EAAAphB,EAAA,GAEAnF,KAyBA,SAAAqyC,EAAA9rB,EAAAkqB,EAAAxvC,GAGA,IAAA6pB,EAAA4Y,EAAA7L,IAAAtR,EAAA,YAGAuR,EAAAvR,GAGAmd,EAAA7L,IAAAtR,GACAuE,SAAA,WACAwnB,WAAA,WAIA,IAAAnJ,EAAAzF,EAAA7L,IAAAtR,EAAA,cACA8iB,EAAA3F,EAAA7L,IAAAtR,EAAA,iBACAijB,EAAA9F,EAAA7L,IAAAtR,EAAA,eACAmjB,EAAAhG,EAAA7L,IAAAtR,EAAA,kBACAkiB,EAAA/E,EAAA7L,IAAAtR,EAAA,UA8BA,OA3BAmd,EAAA7L,IAAAtR,GACAuE,SAAAA,EACAwnB,WAAA,UACAC,SAAA,SACA9J,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAIA6G,EAAAhqB,GACAkiB,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEA+G,SAAAA,EACAW,SAAA,WACAnwC,GACAA,EAAAlB,MAAAwmB,MAKAvmB,KASA,SAAAwyC,EAAAjsB,EAAAkqB,EAAAxvC,GAEA,GAAAupC,EAAA/B,OAAAliB,GAAA,EAAA,CAGAmd,EAAA7L,IAAAtR,EAAA,YAAA,IAGAkiB,EAAA/E,EAAA7L,IAAAtR,EAAA,UACA4iB,EAAAzF,EAAA7L,IAAAtR,EAAA,cACA8iB,EAAA3F,EAAA7L,IAAAtR,EAAA,iBACAijB,EAAA9F,EAAA7L,IAAAtR,EAAA,eACAmjB,EAAAhG,EAAA7L,IAAAtR,EAAA,kBAGAmd,EAAA7L,IAAAtR,GACA+rB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAIA6G,EAAAhqB,GACAkiB,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAGA+G,SAAAA,EACAgC,OAAA,EACArB,SAAA,WACArZ,EAAAxR,GACAmd,EAAA7L,IAAAtR,GACA+rB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEAzoC,GACAA,EAAAlB,MAAAwmB,MAKA,OAAAvmB,KAsHA,SAAAqxC,IACA,OAAAA,EA6BA,OAvlBAf,EAAAT,EAAA34B,EAAA6N,qBAAA,mBACAurB,EAAAR,EAAA54B,EAAA6N,qBAAA,uBACAurB,EAAAp5B,EAAA6N,qBAAA,oBACAurB,EAAAP,EAAA74B,EAAA6N,qBAAA,8BAAA,GAEAurB,EAAAN,EAAA94B,EAAA6N,qBAAA,wBACAurB,EAAAL,EAAA/4B,EAAA6N,qBAAA,wBACAurB,EAAAH,EAAAj5B,EAAA6N,qBAAA,qBACAurB,EAAAJ,EAAAh5B,EAAA6N,qBAAA,+BAAA,GAqjBA7C,EAAApiB,MAAAuxC,GACA1lC,KAAA,EAEA2lC,QACAC,OAAA,IACAmB,KAAA,IACAC,KAAA,KAGApC,QAAAA,EACAqC,qBA7GA,SAAArsB,EAAAkqB,GACA,IAAAoC,GAAA,EACA/R,EAAA91B,IAAAub,EAAA,gBAAA,WACAssB,GAAA,IASA,OAFAjqC,WALA,WACAiqC,GACA/R,EAAA9zB,QAAAuZ,EAAArP,EAAA+N,QAAA7B,WAAA8B,MAGAurB,GAEAzwC,MAkGAmyC,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAY,WAtQA,SAAAvsB,EAAAorB,EAAAoB,EAAAC,GACAtP,EAAAO,YAAA1d,GACA4rB,EAAA5rB,EAAAorB,EAAAR,OAAAlwC,UAEAmxC,EAAA7rB,EAAAorB,EAAAR,OAAAlwC,UAEA,OAAAjB,MAiQA+3B,KAAAA,EACA2Z,YAAAA,EAEAW,UAAAA,EACAY,YAnIA,SAAA1sB,EAAAkqB,EAAAxvC,GAGA,GAAAupC,EAAA/B,OAAAliB,GACA8rB,EAAA9rB,EAAAkqB,EAAAxvC,GAIAuxC,EAAAjsB,EAAAkqB,EAAAxvC,GAEA,OAAAjB,MA0HAwyC,QAAAA,EACA1a,KAAAA,EACAob,MAhFA,SAAA3sB,EAAA9mB,GAEA,IAKA0zC,EAJA9pC,GAFA5J,EAAAA,OAEA4J,KAEA+pC,GADA3zC,EAAAklB,MACAllB,EAAA2zC,MACAnyC,EAAAxB,EAAAwB,SAGAoyC,EAAA5rB,EAAA7D,cAAA,OACA0P,MAAA7zB,EAAAa,WAAA,aAKA4yC,GApCA,SAAA3sB,EAAA9mB,GACA,IAAA6zC,EAAA7rB,EAAA7D,cAAA,MAAAnkB,GACAikC,EAAA7L,IAAAyb,GACAxoB,SAAA,WACA4b,IAAA,EACApG,KAAA,EACAkI,MAAA,OACAC,OAAA,OACA8K,OAAA,WACA5Q,QAAA,KAEApc,EAAAO,YAAAwsB,GAsBAE,CAAAH,GACA/f,MAAA,iBAEA7L,EAAA7D,cAAA,OACA0P,MAAA,WAEAmgB,EAAAhsB,EAAA0B,eAAA9f,GAAA,IACAoF,EAAA,WACA0kC,IACAxqC,aAAAwqC,GACAA,EAAA,MAEAE,IACA5rB,EAAAhZ,OAAA4kC,GACAA,EAAA,OAQA5zC,EAAAklB,OACA+e,EAAA7L,IAAAwb,EAAA5zC,EAAAklB,OAEAuuB,EAAApsB,YAAA2sB,GACAJ,EAAAvsB,YAAAosB,GACA3sB,EAAAO,YAAAusB,GAKAD,IACAD,EAAAvqC,WALA,WACA6F,IACAxN,GAAAA,KAGAmyC,IAGA,OACA3kC,OAAAA,EACAilC,OArBA,SAAAj0C,GACAA,GAAAA,EAAA4J,MAAAgqC,IACAI,EAAAE,UAAAl0C,EAAA4J,SAkDAsuB,OAzWA,SAAApR,EAAAorB,EAAA1wC,GACAyiC,EAAAO,YAAA1d,GACAuR,EAAAvR,EAAAorB,EAAA1wC,GAEA82B,EAAAxR,EAAAorB,EAAA1wC,GAEA,OAAAjB,QAsWAvG,EAAAC,OAAA,UAAA23C,KAEAt4C,OAAA,wBACA,OACA,oBACA,sBACA,SAAAs4C,EAAA7W,EAAApQ,GAmCA,OAjCAoQ,EAAAjzB,UACA,UACA,uBACA,SACA,UACA,SACA,aACA,OACA,cACA,YACA,cACA,UACA,OACA,UACA8pC,GAEAjnB,EAAA/lB,GAAA0zB,KAAA3N,EAAA6P,MAAA1D,kBAAA8a,EAAAtZ,KAAAsZ,GAEAjnB,EAAA/lB,GAAAksC,QAAAnmB,EAAA6P,MAAA1D,kBAAA8a,EAAAd,QAAAc,GACAjnB,EAAA/lB,GAAAuuC,qBAAAxoB,EAAA6P,MAAA1D,kBAAA8a,EAAAuB,qBAAAvB,GAEAjnB,EAAA/lB,GAAAyzB,KAAA1N,EAAA6P,MAAA1D,kBAAA8a,EAAAvZ,KAAAuZ,GACAjnB,EAAA/lB,GAAA0zB,KAAA3N,EAAA6P,MAAA1D,kBAAA8a,EAAAtZ,KAAAsZ,GACAjnB,EAAA/lB,GAAAuvC,OAAAxpB,EAAA6P,MAAA1D,kBAAA8a,EAAAuC,OAAAvC,GACAjnB,EAAA/lB,GAAA6tC,OAAA9nB,EAAA6P,MAAA1D,kBAAA8a,EAAAa,OAAAb,GACAjnB,EAAA/lB,GAAA8tC,OAAA/nB,EAAA6P,MAAA1D,kBAAA8a,EAAAc,OAAAd,GACAjnB,EAAA/lB,GAAA+tC,QAAAhoB,EAAA6P,MAAA1D,kBAAA8a,EAAAe,QAAAf,GACAjnB,EAAA/lB,GAAAyuC,WAAA1oB,EAAA6P,MAAA1D,kBAAA8a,EAAAyB,WAAAzB,GAEAjnB,EAAA/lB,GAAAguC,UAAAjoB,EAAA6P,MAAA1D,kBAAA8a,EAAAgB,UAAAhB,GACAjnB,EAAA/lB,GAAA4uC,YAAA7oB,EAAA6P,MAAA1D,kBAAA8a,EAAA4B,YAAA5B,GACAjnB,EAAA/lB,GAAAmuC,QAAApoB,EAAA6P,MAAA1D,kBAAA8a,EAAAmB,QAAAnB,GAEAA,IAEAt4C,OAAA,mBAAA,wBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,mBACA,sBACA,wBACA,sBACA,+BACA,qBACA,oBACA,uBACA,sBACA,oBACA,sBACA,kBACA,qBACA,qBACA,SACAU,EACAqD,EACA+F,EACAmH,EACA8B,EACA2b,EACAyN,EACA4L,EACAhO,EACA0X,EACA9G,EACA2N,EACAjnB,EACAypB,GAEA,aAEA,IAAA71C,EAAAjE,MAAAiC,UAAAgC,MAEA81C,GADA/5C,MAAAiC,UAAAiI,WAEAg9B,KAKA,SAAAjH,EAAAzT,EAAAwtB,EAAA5uC,GACA,IAAA6uC,EAAAD,EAAA56C,MAAA,KACA86C,EAAAD,EAAA,GACAD,EAAAC,EAAA,GAEAC,IACAA,EAAAF,GAGA,IAAAG,EAAAhf,EAAA5rB,KAAAid,EAAA0tB,GAEA,GAAA,aAAA9uC,EACA,OAAA+uC,EACA,GAAA,YAAA/uC,EAAA,CACA,IAAA+uC,EACA,MAAA,IAAA5uC,MAAA,sCAEA4uC,EAAAC,UACAjf,EAAAO,WAAAlP,EAAAwtB,GACAG,OAAA50C,OAEA,GAAA40C,EAOA/uC,GACA+uC,EAAA3jB,MAAAprB,OARA,CACA,QAAA7F,IAAA6F,GAAA,iBAAAA,EACA,MAAA,IAAAG,MAAA,sCAEA,IAAA8uC,EAAAN,EAAAC,GACAG,EAAA,IAAAE,EAAA7tB,EAAAphB,GACA+vB,EAAA5rB,KAAAid,EAAA0tB,EAAAC,GAMA,OAAAA,EA2GA,IAAAG,EAAAvoC,EAAA7E,SACAb,UAAA,SAEAtB,WAAA,SAAAyhB,EAAAphB,GACAnF,KAAAu6B,KAAAhU,EACAvmB,KAAAs0C,aAAAnvC,IAGAmvC,aAAA,SAAAnvC,GACA,IAAAE,EAAArF,KAAAxF,YACA0W,EAAA7L,EAAA6L,MAAA7L,EAAA6L,UACAzS,EAAAyS,EAAAzS,SACA,IAAAA,EAAA,CACA,IAAA81C,KACA,EAAA,CAEA,GADAA,EAAA/uC,QAAAH,GACAA,IAAAgvC,EACA,MAEAhvC,EAAAA,EAAAI,iBACAJ,GAEA5G,EAAAyS,EAAAzS,YACA,IAAA,IAAAnF,EAAA,EAAAA,EAAAi7C,EAAAn7C,OAAAE,KACA+L,EAAAkvC,EAAAj7C,IACA0C,UAAAuC,eAAA,YACAsE,EAAA/C,MAAArB,EAAA4G,EAAArJ,UAAAmJ,SAAA,GAEAE,EAAA9G,eAAA,YACAsE,EAAA/C,MAAArB,EAAA4G,EAAAF,SAAA,GASA,OALArJ,OAAAiL,eAAA/G,KAAA,WACArF,MAAAkI,EAAA/C,SAAArB,EAAA0G,GAAA,KAIAnF,KAAAmF,SAIAgvC,QAAA,WAEAn0C,KAAAw0C,WAGAx0C,KAAAyL,aAEAypB,EAAAO,WAAAz1B,KAAAu6B,KAAAv6B,KAAA+zC,aAGAS,SAAAxqC,EAAAf,KAEAwrC,OAAA,SAAAhhC,EAAAk9B,GAKA,IAAA+D,EAAA10C,KACA,OAAA4I,WALA,WACA,OAAA,iBAAA6K,EAAAihC,EAAAjhC,GAAAA,GACA1T,MAAA20C,EAAAh1C,YAGAixC,GAAA,IAGAgE,MAAA,SAAApuB,GAEA,OADAA,EAAAA,GAAAvmB,KAAAu6B,KACAsZ,EAAAttB,IAIAquB,OAAA,SAAAruB,GAEA,OADAA,EAAAA,GAAAvmB,KAAAu6B,KACAnQ,EAAA7D,IAGAyN,OAAA,SAAAl1B,EAAAnE,GACA,IACA0yB,EACAwnB,EACAv7C,EAHA6L,EAAArG,EAKA,GAAA,IAAAY,UAAAtG,OAGA,OAAAyJ,EAAA/C,SAAAE,KAAAmF,SAGA,GAAA,iBAAArG,EAMA,GAHAqG,KACAkoB,EAAAvuB,EAAA3F,MAAA,KACA2F,EAAAuuB,EAAA1tB,QACA0tB,EAAAj0B,OAAA,CAEA,IADAy7C,EAAA1vC,EAAArG,GAAA+D,EAAA/C,SAAAE,KAAAmF,QAAArG,IACAxF,EAAA,EAAAA,EAAA+zB,EAAAj0B,OAAA,EAAAE,IACAu7C,EAAAxnB,EAAA/zB,IAAAu7C,EAAAxnB,EAAA/zB,QACAu7C,EAAAA,EAAAxnB,EAAA/zB,IAGA,GADAwF,EAAAuuB,EAAAztB,MACA,IAAAF,UAAAtG,OACA,YAAAkG,IAAAu1C,EAAA/1C,GAAA,KAAA+1C,EAAA/1C,GAEA+1C,EAAA/1C,GAAAnE,MACA,CACA,GAAA,IAAA+E,UAAAtG,OACA,YAAAkG,IAAAU,KAAAmF,QAAArG,GAAA,KAAAkB,KAAAmF,QAAArG,GAEAqG,EAAArG,GAAAnE,EAMA,OAFAqF,KAAA80C,YAAA3vC,GAEAnF,MAGA80C,YAAA,SAAA3vC,GACA,IAAArG,EAEA,IAAAA,KAAAqG,EACAnF,KAAA+0C,WAAAj2C,EAAAqG,EAAArG,IAGA,OAAAkB,MAGA+0C,WAAA,SAAAj2C,EAAAnE,GAIA,OAFAqF,KAAAmF,QAAArG,GAAAnE,EAEAqF,MAGAg1C,OAAA,SAAAx2B,GACAA,EAAAA,GAAA,SACA,GAAAA,MAAA,IAAAvM,KAAAC,gBACAwF,SAAAoF,eAAA0B,IACA,OAAAA,GAGA+H,IAAA,WACA,OAAAvmB,KAAAu6B,QAsBA,SAAAR,IACA,OAAAA,EAUA,OA5BA3P,EAAA/lB,GAAAw1B,OAAA,SAAAtgC,EAAA4L,GACA,IAAA3F,EAAAxB,EAAA1D,KAAAoF,UAAA,GACAuM,EAAAjM,KACA85B,EAAA95B,KAKA,OAHAA,KAAAgB,KAAA,WACA84B,EAAAE,EAAAj6B,MAAAkM,GAAAjM,KAAAzG,GAAA0K,OAAAzE,MAEAs6B,GAGA+Z,EAAAvtC,QAAA,SAAA,SAAA/M,EAAA4L,GACA,IAAA3F,EAAAxB,EAAA1D,KAAAoF,UAAA,GACA,OAAAs6B,EAAAj6B,MAAAC,MAAAA,KAAAi1C,QAAA17C,GAAA0K,OAAAzE,MAQAqD,EAAA/C,MAAAi6B,GACAC,YAAAA,EACAqa,OAAAA,EACA9U,SA1NA,SAAA6U,EAAAc,EAAAjB,EAAAkB,GACA,IAAApB,EAAAK,EAAAp4C,UAAA+3C,WAIA,GAFAD,EAAAC,GAAAK,EAEAc,EAAA,CACAjB,GAAAn3C,EAAApC,WAAAu5C,KACAkB,EAAAlB,EACAA,EAAA,MAEAA,IACAF,EAAAA,EAAA,IAAAE,GAGA,IAAAtkC,EAAAsxB,EAAAiU,GArEA,SAAAnB,EAAAoB,GAKA,OAAA,SAAA5uB,EAAAphB,GACA,IAAA00B,EAAAG,EAAAzT,EAAAwtB,EAAA,YACA,GAAA,aAAA5uC,EACA,OAAA00B,GAAA,KAGA,IAAAA,IACAA,EAAAG,EAAAzT,EAAAwtB,EAAA,iBAAA5uC,GAAAA,OACA,iBAAAA,GACA,OAAAnF,KAGA,GAAAmF,EAAA,CACA,IAAA3F,EAAAxB,EAAA1D,KAAAoF,UAAA,GACA,GAAAy1C,EACA,OAAAA,EAAAp1C,MAAA85B,EAAAr6B,GAEA,GAAA,iBAAA2F,EAAA,CACA,IAAAsN,EAAAtN,EAEA,IAAA00B,EACA,MAAA,IAAAv0B,MAAA,0BAAAyuC,EACA,uDACAthC,EAAA,KAGA,IAAA3V,EAAApC,WAAAm/B,EAAApnB,KAAA,MAAAA,EAAAgL,OAAA,GACA,MAAA,IAAAnY,MAAA,mBAAAmN,EAAA,SAAAshC,EACA,oBAGAv0C,EAAAxB,EAAA1D,KAAAkF,EAAA,GAEA,IAAAsH,EAAA+yB,EAAApnB,GAAA1S,MAAA85B,EAAAr6B,GAKA,OAJAsH,GAAA+yB,IACA/yB,OAAAxH,GAGAwH,KA0BAsuC,CAAArB,EAAAoB,GAEA/qB,EAAA/lB,GAAA6wC,GAAA,SAAA/vC,GACA,IAAA20B,EAAA95B,KAEA,GAAAA,KAAA5G,QAAA,aAAA+L,EAEA,CACA,IAAA3F,EAAAxB,EAAA1D,KAAAoF,WACAM,KAAAgB,KAAA,WACA,IAAAq0C,EAAAr3C,EAAA1D,KAAAkF,GACA61C,EAAA7vC,QAAAxF,MACA,IAAA8G,EAAA6I,EAAA5P,WAAAT,EAAA+1C,QACA/1C,IAAAwH,IACAgzB,EAAAhzB,UARAgzB,OAAAx6B,EAaA,OAAAw6B,GAGA+Z,EAAAvtC,QAAA4uC,EAAA,SAAA/vC,GACA,IAAA2B,EAAA6I,EAAA3P,KAAAu6B,KAAAp1B,GAIA,YAHA7F,IAAAwH,IACAA,EAAA9G,MAEA8G,MAkLAm6B,UAAAA,IAGAxnC,EAAAC,OAAA,eAAAqgC,KAEAhhC,OAAA,6BACA,aACA,SAAAghC,GACA,OAAAA,IAEAhhC,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,qCACA,wBACA,+BACA,oBACA,uBACA,UACA,aACA,cACA,YACA,SACA+S,EACA2E,EACAojC,EACA9Z,EACAqI,GA6FA,OAAAA,EAAAkT,6BArFAvb,EAAAsa,OACAjuC,gBACA,MAAA,iBAGA2tC,iBACA,MAAA,sBAGA5uC,cACA,OACAowC,WACAzO,OAAA,eACA3B,SAAA,iBACAQ,UAAA,kBAEA6P,aAAA,iBACAC,cAAA,oBAUA9qC,YAAA4b,EAAAphB,GACAyF,MAAA2b,EAAAphB,GAEAnF,KAAA20C,MAAAd,EAAA7zC,KAAAu6B,MAEAv6B,KAAA01C,oBAIA/qC,oBACA,IAAAsB,EAAAjM,KAEAu1C,EAAAv1C,KAAAmF,QAAAowC,UACAI,EAAAJ,EAAApQ,SACAyQ,EAAAL,EAAA5P,UACAkQ,EAAAN,EAAAzO,OAEA6O,GACA31C,KAAA20C,MAAAvqB,EAAAurB,GAAAxQ,UACAG,QAAA,SAAAlD,GACAn2B,EAAA6pC,SAAA1T,EAAA,OAMAwT,GACA51C,KAAA20C,MAAAvqB,EAAAwrB,GAAAjQ,WACAE,OAAA,SAAAzD,GACAn2B,EAAA6pC,SAAA1T,EAAA,OAKAyT,GACA71C,KAAA20C,MAAAvqB,EAAAyrB,GAAA/O,QACAX,UAAA,EACAI,OAAA,SAAAnE,GACAn2B,EAAA6pC,SAAA1T,EAAA,OAMAz3B,SAAAwlB,GACAnwB,KAAAoM,KAAA,QAAA+jB,GAOAxlB,eAWA5R,OAAA,yBACA,uBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,iBAEAX,OAAA,wBACA,sBACA,sBACA,wBACA,uBACA,sBACA,+BACA,gCACA,UACA,SAAAU,QAAAqD,MAAA+F,QAAA8B,OAAAqF,MAAAyG,SAAAxD,QAAA8oC,MAEA,IAAA/0C,KAAA6B,QAAA7B,KACAlB,MAAA+C,QAAA/C,MACAmJ,KAAAe,MAAAf,KACAjP,QAAA8C,MAAA9C,QACAU,WAAAoC,MAAApC,WACAmB,cAAAiB,MAAAjB,cACA3B,KAAA4C,MAAA5C,KAEA87C,eAGA,SAAA1zB,GAIA,OAHApiB,IAAAA,EAAAwX,SAAAkM,cAAA,MACA1jB,EAAAhE,KAAAomB,EAEApiB,EAAAhE,MANAgE,EAUA+1C,IAAA,WACA,IAAAC,QAAA,EACAp3C,IACAvF,KACA48C,QAAA,sDACAC,aAAA,qCACAC,UAAA,8BACAC,SAAA,mBACAC,SAAA,YACAC,QAAA,QAEAC,mBACAvgC,OAAA,EAGAhc,KAAA,MAEAw8C,WAAAztC,KAEA0tC,QAAA1tC,KAEA8L,MAAA9L,KAEAmoC,SAAAnoC,KAEA5B,QAAA,KAEA4P,QAAA,EAIA2/B,SACAC,OAAA,oEACAC,KAAA,mBACAjuB,IAAA,4BACAH,KAAA,YACArf,KAAA,cAGA0tC,aAAA,EAEAruC,QAAA,EAEAsuC,aAAA,EAEA9lC,OAAA,EAEA+lC,aAAA,EAEAC,WACAC,iBAAA,IAIA,SAAAC,eAAAC,GAIA,GAHAA,IACAA,EAAAA,EAAAl+C,MAAA,IAAA,GAAA,IAEAk+C,EAAA,CACA,GAAAA,GAAAd,SACA,MAAA,OACA,GAAAc,GAAAf,SACA,MAAA,OACA,GAAAF,aAAAr4C,KAAAs5C,GACA,MAAA,SACA,GAAAhB,UAAAt4C,KAAAs5C,GACA,MAAA,MAGA,MAAA,OAGA,SAAAC,YAAAh1B,EAAAxR,GACA,MAAA,IAAAA,EAAAwR,GACAA,EAAA,IAAAxR,GAAAjT,QAAA,YAAA,KAIA,SAAA05C,cAAApyC,GACAA,EAAAmE,KAAAnE,EAAAmE,MAAAnE,EAAA2L,MACA3L,EAAA6xC,aAAA7xC,EAAAmE,MAAA,UAAApP,KAAAiL,EAAAmE,QACAnE,EAAAmE,KAAAkuC,MAAAryC,EAAAmE,KAAAnE,EAAA8xC,eAEA9xC,EAAAmE,MAAAnE,EAAAjL,MAAA,OAAAiL,EAAAjL,KAAA+iB,gBACA,UAAA/iB,KAAAiL,EAAAmE,QACAnE,EAAAmE,KAAAkuC,MAAAryC,EAAAmE,KAAAnE,EAAA8xC,cAEA9xC,EAAAmd,IAAAg1B,YAAAnyC,EAAAmd,IAAAnd,EAAAmE,MACAnE,EAAAmE,UAAAhK,GAIA,SAAAm4C,UAAAh4C,EAAA9F,EAAAs9C,EAAAS,GACA,IAAAn+B,EAAAtW,EAAAjJ,QAAAL,GACAg+C,EAAA97C,cAAAlC,GACAqH,KAAArH,EAAA,SAAAmF,EAAAnE,GACA4e,EAAArf,KAAAS,GACA+8C,IAAA54C,EAAAm4C,EAAAS,EACAA,EAAA,KAAAC,GAAA,UAAAp+B,GAAA,SAAAA,EAAAza,EAAA,IAAA,MAEA44C,GAAAz0C,EAAAxD,EAAA2S,IAAAzX,EAAApB,KAAAoB,EAAAA,OAEA,SAAA4e,IAAA09B,GAAA,UAAA19B,EACAk+B,UAAAh4C,EAAA9E,EAAAs8C,EAAAn4C,GACAW,EAAA2S,IAAAtT,EAAAnE,KAIA,IAAA68C,MAAA,SAAA79C,EAAAs9C,GACA,IAAAx3C,KAWA,OAVAA,EAAA2S,IAAA,SAAAtT,EAAAnE,GACAD,WAAAC,KACAA,EAAAA,KAEA,MAAAA,IACAA,EAAA,IAEAqF,KAAAjB,KAAA64C,mBAAA94C,GAAA,IAAA84C,mBAAAj9C,KAEA88C,UAAAh4C,EAAA9F,EAAAs9C,GACAx3C,EAAAkK,KAAA,KAAA9L,QAAA,OAAA,MAGAo4C,IAAAhpC,QAAAhG,SACAb,UAAA,MAEAyxC,SAAA,SAAAr4C,MACA,IAAAuN,EAAA/M,KAAA+M,EACAd,KAAAjM,KACAmF,QAAArF,SAAA22C,kBAAA1pC,EAAA5H,QAAA3F,MACAs4C,IAAA/qC,EAAA+qC,IAAA,IAAAC,eAEAR,cAAApyC,SAEAA,QAAAuxC,YACAvxC,QAAAuxC,WAAAp8C,KAAA0F,KAAA83C,IAAA3yC,SAGA,IAAA6yC,SAAA7yC,QAAA6yC,UAAA7yC,QAAA8yC,SACAZ,KAAAlyC,QAAA+yC,UAAA/yC,QAAAyxC,QAAAoB,UACAG,QAAAhzC,QAAAgzC,QACAjB,UAAA/xC,QAAA+xC,UACAkB,WAAAjzC,QAAAmE,MAAAnE,QAAAmE,gBAAA+uC,SACAC,wBAAAnzC,QAAAmzC,wBACAp+C,KAAAiL,QAAAjL,KACAooB,IAAAnd,QAAAmd,IACApM,MAAA/Q,QAAA+Q,MACAqiC,KAAApzC,QAAAozC,KACAnoB,SAAAjrB,QAAAirB,SACAta,SAAA,IAAArF,SACA+nC,YAAArzC,QAAAqzC,cAAAJ,YAAA,oCAEA,GAAAlB,UACA,IAAA39C,QAAA29C,UACAY,IAAAv+C,MAAA29C,UAAA39C,MAIA89C,MAAAA,KAAAz1C,QAAA,MAAA,IACAy1C,KAAAA,KAAAl+C,MAAA,IAAA,GAAA,IAEAk+C,MAAAS,IAAAW,kBACAX,IAAAW,iBAAApB,MAOA,IAAAqB,OAAA,WACAZ,IAAAa,UAAA1vC,KACA6uC,IAAAc,QAAA3vC,KACA6uC,IAAAe,WAAA5vC,KACA6uC,IAAAgB,UAAA7vC,KACA6uC,IAAA,MAEAa,UAAA,WACA,IAAAz6C,OAAA6W,OAAA,EACA,GAAA+iC,IAAAiB,QAAA,KAAAjB,IAAAiB,OAAA,KAAA,KAAAjB,IAAAiB,QAAA,GAAAjB,IAAAiB,QAAA/C,eAAA1zB,KAAA9lB,WAAA,SAAA,CACAw7C,SAAAA,UAAAZ,eAAAjyC,QAAA+yC,UAAAJ,IAAAkB,kBAAA,iBAEA96C,OAAA45C,IAAAmB,aACA,IACA,UAAAjB,SACAkB,KAAAh7C,QACA,OAAA85C,SACA95C,OAAA45C,IAAAqB,YACA,QAAAnB,SACA95C,OAAAs4C,QAAAz4C,KAAAG,QAAA,KAAAkf,KAAAxR,MAAA1N,QACA,QAAA85C,SACA95C,OAAAk7C,MAAAC,OAAAC,WACA,eAAAtB,WACA95C,OAAA45C,IAAAyB,SAEA,MAAAzvC,GACAiL,MAAAjL,EAGAiL,MACAe,SAAA9B,OAAAe,MAAA+iC,IAAAiB,OAAAjB,KAEAhiC,SAAA/B,QAAA7V,OAAA45C,IAAAiB,OAAAjB,UAGAhiC,SAAA9B,OAAA,IAAA1O,MAAAwyC,IAAA0B,YAAA1B,IAAAiB,OAAAjB,KAEAY,UAGAE,QAAA,WACA9iC,UACAA,SAAA9B,OAAA,IAAA1O,MAAA,SAAAwyC,IAAAiB,OAAAjB,KAEAY,UAGAI,UAAA,WACAhjC,UACAA,SAAA9B,OAAA,IAAA1O,MAAA,WAAAwyC,IAAAiB,OAAAjB,KAEAY,UAGAG,WAAA,SAAAY,GACA3jC,UACAA,SAAAhB,OAAA2kC,EAAA3B,IAAAiB,OAAAjB,MAWA,GAPAA,IAAAa,UAAAA,UACAb,IAAAc,QAAAA,QACAd,IAAAgB,UAAAA,UACAhB,IAAAe,WAAAA,WAEAf,IAAA4B,KAAAx/C,KAAAooB,IAAApM,MAAAqiC,KAAAnoB,UAEA+nB,QACA,IAAA,IAAAr5C,OAAAq5C,QAAA,CACA,IAAAx9C,MAAAw9C,QAAAr5C,KAEA,iBAAAA,IAAA1E,cACAo+C,YAAA79C,MAEAm9C,IAAA6B,iBAAA76C,IAAAnE,OAqBA,OAhBA69C,cAAA,IAAAA,aACAV,IAAA6B,iBAAA,eAAAnB,aAGAL,SAAA,qBAAAA,SACAL,IAAA6B,iBAAA,mBAAA,kBAKArB,yBACAR,IAAA6B,iBAAA,gBAAArB,yBAGAR,IAAA8B,KAAAz0C,QAAAmE,KAAAnE,QAAAmE,KAAA,MAEAwM,SAAAjC,SAIAooB,MAAA,WACA,IAAAlvB,EAAA/M,KAAA+M,EACA+qC,EAAA/qC,EAAA+qC,IAEAA,GACAA,EAAA7b,SAKA4d,QAAA,SAAAr6C,GACA,OAAAQ,KAAA63C,SAAAr4C,IAGA2O,IAAA,SAAA3O,GAGA,OAFAA,EAAAA,OACAtF,KAAA,MACA8F,KAAA63C,SAAAr4C,IAGAs6C,KAAA,SAAAt6C,GAGA,OAFAA,EAAAA,OACAtF,KAAA,OACA8F,KAAA63C,SAAAr4C,IAGAu6C,MAAA,SAAAv6C,GAGA,OAFAA,EAAAA,OACAtF,KAAA,QACA8F,KAAA63C,SAAAr4C,IAGAwS,IAAA,SAAAxS,GAGA,OAFAA,EAAAA,OACAtF,KAAA,MACA8F,KAAA63C,SAAAr4C,IAGAw6C,IAAA,SAAAx6C,GAGA,OAFAA,EAAAA,OACAtF,KAAA,SACA8F,KAAA63C,SAAAr4C,IAGAuF,KAAA,SAAAI,GACAnF,KAAA+M,GACA5H,QAAAA,UAeA,OAVA,UAAA,MAAA,OAAA,MAAA,MAAA,SAAAhL,QAAA,SAAAZ,GACA08C,IAAA18C,GAAA,SAAA+oB,EAAA9iB,GACA,IAAAs4C,EAAA,IAAA7B,KAAA3zB,IAAAA,IACA,OAAAw1B,EAAAv+C,GAAAiG,MAIAy2C,IAAAgE,eAAAxD,kBACAR,IAAAuB,MAAAA,MAEAvB,IAzUA,GA4UA,OAAAF,KAAAE,IAAAA,MAEAl9C,OAAA,2BACA,sBACA,wBACA,uBACA,+BACA,gCACA,QACA,UACA,SAAA+D,EAAA+F,EAAA8B,EAAA8L,EAAAxD,EAAAgpC,EAAAF,GAEA,IAAAmE,EAAAd,KAAAp9C,UAAAgC,OAAAo7C,KAAAp9C,UAAAm+C,aAAAf,KAAAp9C,UAAAo+C,SAMAC,EAAAptC,EAAAhG,SACAb,UAAA,SAEAtB,WAAA,SAAAK,GACAnF,KAAAs6C,SAAAz3C,EAAA/C,OACAy6C,OAAA,EACAj4B,IAAA,UAEAk4B,eAAA,IAKAC,kBAAAn7C,EAEAoV,WAAA,SAAA5C,EAAA4oC,EAAAC,EAAAhqC,KAEAiqC,WAAA,SAAA9oC,EAAA4oC,KAEAG,SAAA,SAAA/oC,EAAA4oC,KAEAI,UAAA,SAAAhpC,EAAA4oC,EAAA5wC,MAEA3E,GAEAnF,KAAA+6C,UAEA/6C,KAAAg7C,WAEAh7C,KAAAi7C,UACAj7C,KAAAk7C,SAGAl7C,KAAAm7C,YAQA/oC,IAAA,SAAA+d,GACA,OAAAnwB,KAAAi7C,OAAAl8C,KAAAoxB,GAAA,GAMAypB,KAAA,SAAA9nC,EAAArS,GACA,GAAAO,KAAAi7C,OAAAnpC,MAIA9R,KAAA+6C,OAAAn5C,QAAAkQ,IAAA,GAAA,CAIA,IAAAxF,EAAAtM,KAAA+6C,OAAAh8C,KAAA+S,GAEAjR,EAAAgC,EAAAnC,MAAAjB,GAEAO,KAAAg7C,QAAAlpC,GAAAjR,EAGAyL,GAAAtM,KAAAs6C,SAAAE,gBACAx6C,KAAAo7C,MAAAtpC,EAAA9R,KAAAg7C,QAAAlpC,MAOAupC,QAAA,SAAA57C,GACA,IAAA,IAAAqS,EAAA,EAAAA,EAAA9R,KAAAi7C,OAAA7hD,OAAA0Y,IACA9R,KAAA45C,KAAA9nC,EAAArS,IAOAsW,OAAA,SAAAjE,GACA9R,KAAAs7C,QAAAxpC,GACA9R,KAAAu7C,SAAAzpC,IAMA0pC,UAAA,WACA,IAAA,IAAAliD,EAAA,EAAAA,EAAA0G,KAAA+6C,OAAA3hD,OAAAE,IACA0G,KAAAs7C,QAAAt7C,KAAA+6C,OAAAzhD,IAEA0G,KAAA+6C,WAGAU,QAAA,SAAA3pC,GACA,IAAAqe,EAAAnwB,KAAAi7C,OAAAnpC,GACA,OAAA,MAAAqe,EAAAuqB,SAAAvqB,EAAAuqB,SAAAvqB,EAAA52B,MAGAmiD,QAAA,SAAA5pC,GACA,IAAAqe,EAAAnwB,KAAAi7C,OAAAnpC,GACA,OAAA,MAAAqe,EAAAwrB,SAAAxrB,EAAAwrB,SAAAxrB,EAAA0G,MAMA+kB,UAAA,SAAA9pC,GACA,OAAA9R,KAAAm7C,QAAArpC,IAAA,GAQAspC,MAAA,SAAAtpC,EAAArS,GACA,IAIAo8C,EAJA12C,EAAAnF,KAAAs6C,SACA/gD,EAAAyG,KAAAy7C,QAAA3pC,GACA+kB,EAAA72B,KAAA07C,QAAA5pC,GACAgqC,EAAA32C,EAAAs1C,cAAA,EAEAsB,EAAA,EACA5rB,EAAAnwB,KAAAi7C,OAAAnpC,GACAtS,GACA24C,YAIAn4C,KAAAm7C,QAAArpC,GAAA9R,KAAAm7C,QAAArpC,IAAA,EAEA,IAAAgmC,EAAA93C,KAAAk7C,MAAAppC,GAAA,IAAAmkC,GACA3zB,IAAAnd,EAAAmd,MAGA,GAAAw5B,EAEAt8C,EAAA8J,KAAA4wC,EAAA5/C,KACA61B,EACAnwB,KAAAm7C,QAAArpC,GACA9R,KAAAm7C,QAAArpC,GAAAgqC,EACA3rB,EAAAj2B,MAIA2hD,EAAAr8C,EAAA8J,KAAAutB,KAEAr3B,EAAA24C,QAAA,iBAAA,SAAAn4C,KAAAm7C,QAAArpC,GAAA,KACA9R,KAAAm7C,QAAArpC,GAAA+pC,EAAA,GAAA,IAAAhlB,EACAr3B,EAAA24C,QAAA,gBAAA,+BACA,CACA0D,EAAAhlB,EACA,IAAAmlB,EAAAv8C,EAAAu8C,cACAC,EAAAx8C,EAAAw8C,SAEAD,GACAC,IACAA,EAAA,IAAA5D,UAEA4D,EAAAr1B,OAAAo1B,EAAA7rB,GACA3wB,EAAA8J,KAAA2yC,IAGAz8C,EAAA24C,QAAA,gBAAAhoB,EAAAj2B,MAAA,2BACAsF,EAAA8J,KAAA6mB,GAKA,IAAAlkB,EAAAjM,KACA83C,EAAAgC,KACAt6C,GACAmV,SAAA,SAAA7K,GACAA,EAAAoyC,mBACAH,GAAAjyC,EAAA6wC,OACA1uC,EAAAkvC,QAAArpC,GAAA7F,EAAAkvC,QAAArpC,GAAAhI,EAAA6wC,OACA1uC,EAAAquC,SAAA5lC,WAAA5C,EAAAvY,EAAA0S,EAAAkvC,QAAArpC,GAAA+kB,MAEAvmB,KAAA,WACArE,EAAAgvC,OAAAnpC,KAKAiqC,EAAAF,IAIA5vC,EAAAkvC,QAAArpC,GAAA7F,EAAAkvC,QAAArpC,GAAA+pC,EAAAE,EACA9vC,EAAAquC,SAAA5lC,WAAA5C,EAAAvY,EAAA0S,EAAAkvC,QAAArpC,GAAA+kB,IAGA5qB,EAAAkvC,QAAArpC,GAAA+kB,EAGA5qB,EAAAmvC,MAAAtpC,EAAArS,IAEAwM,EAAAquC,SAAAM,WAAA9oC,EAAAvY,GAEA0S,EAAAgvC,OAAAnpC,GAAA,KACA7F,EAAAivC,MAAAppC,GAAA,KACA7F,EAAAsvC,SAAAzpC,OAIA8B,MAAA,SAAA9J,GACAmC,EAAAquC,SAAAQ,UAAAhpC,EAAAvY,EAAAuQ,GAEAmC,EAAAgvC,OAAAnpC,GAAA,KACA7F,EAAAivC,MAAAppC,GAAA,KACA7F,EAAAsvC,SAAAzpC,MAIAwpC,QAAA,SAAAxpC,GACA9R,KAAAs6C,SAAAO,SAAA/oC,EAAA9R,KAAAy7C,QAAA3pC,IAEA9R,KAAAi7C,OAAAnpC,GAAA,KAEA9R,KAAAk7C,MAAAppC,KACA9R,KAAAk7C,MAAAppC,GAAAmqB,QACAj8B,KAAAk7C,MAAAppC,GAAA,OAQAqqC,SAAA,WACA,OAAAn8C,KAAA+6C,QAOAQ,SAAA,SAAAzpC,GACA,IAAAxY,EAAAqL,EAAAd,QAAAiO,EAAA9R,KAAA+6C,QACA/6C,KAAA+6C,OAAAt4C,OAAAnJ,EAAA,GAEA,IAAAsf,EAAA5Y,KAAAs6C,SAAAE,eAEA,GAAAx6C,KAAA+6C,OAAA3hD,QAAAwf,GAAAtf,EAAAsf,EAAA,CACA,IAAArG,EAAAvS,KAAA+6C,OAAAniC,EAAA,GACA5Y,KAAAo7C,MAAA7oC,EAAAvS,KAAAg7C,QAAAzoC,QAKA,OAAAwjC,EAAAsE,OAAAA,IAEAthD,OAAA,oCACA,wBACA,sBACA,qBACA,oBACA,0BACA,uBACA,WACA,SAAAU,EAAAyoB,EAAAkI,EAAAypB,EAAAuI,EAAAriB,EAAAqI,GAEA,IA+BAia,EAAAtiB,EAAAsa,OAAAptC,SACAb,UAAA,WACA2tC,WAAA,qBAEA5uC,SACAm3C,UAAA,UAEA78C,QACAu8C,cAAA,QAGAxB,eAAA,EAEA+B,qBACAC,UAAA,EACAC,aAAA,EAEAC,YAAA,EACAnH,WACAoH,SAAA,aACAC,SAAA,aACAC,OAAA,sBAEA/V,OAAA,eACA3B,SAAA,iBACAQ,UAAA,kBAEA6P,aAAA,iBACAC,cAAA,mBAGArsC,SA9DA,gxBAgEA4uC,SAAA,OAEA4E,UACArH,WACAh8C,KAAA,QACAs9B,KAAA,QACA9gB,OAAA,UACA1I,MAAA,SACAsH,SAAA,YACA8nB,QAAA,YAGArzB,SA7DA,mfAkEAtE,WAAA,SAAAyhB,EAAAphB,GAmBAnF,KAAA6G,UAAA0f,EAAAphB,GAGAnF,KAAA20C,MAAAd,EAAA7zC,KAAAu6B,MAIAv6B,KAAA88C,oBACA98C,KAAA01C,oBACA11C,KAAA+8C,oBACA/8C,KAAAg9C,mBAGAtH,kBAAA,WACA,IAAAzpC,EAAAjM,KAEAu1C,EAAAv1C,KAAAmF,QAAAowC,UACAI,EAAAJ,EAAApQ,SACAyQ,EAAAL,EAAA5P,UACAkQ,EAAAN,EAAAzO,OAEA6O,GACA31C,KAAA20C,MAAAvqB,EAAAurB,GAAAxQ,UACAG,QAAA,SAAAlD,GACAn2B,EAAAgxC,UAAA7a,MAMAwT,GACA51C,KAAA20C,MAAAvqB,EAAAwrB,GAAAjQ,WACAE,OAAA,SAAAzD,GACAn2B,EAAAgxC,UAAA7a,MAKAyT,GACA71C,KAAA20C,MAAAvqB,EAAAyrB,GAAA/O,QACAX,UAAA,EACAI,OAAA,SAAAnE,GACAn2B,EAAAgxC,UAAA7a,OAMA2a,kBAAA,WACA,IAAA9wC,EAAAjM,KAGAA,KAAAs/B,SAAA,IAAA8c,GACA95B,IAAAtiB,KAAAmF,QAAAm3C,UACA9B,eAAAx6C,KAAAmF,QAAAq1C,eACA9lC,WAAA,SAAA5C,EAAA4oC,EAAAC,EAAAhqC,GACA1E,EAAAixC,YAAAprC,EAAA4oC,EAAAC,EAAAhqC,IAEAiqC,WAAA,SAAA9oC,EAAA4oC,EAAAx8C,GACA+N,EAAAkxC,YAAArrC,EAAA4oC,EAAAx8C,IAEA28C,SAAA,SAAA/oC,EAAA4oC,GACAzuC,EAAAmxC,UAAAtrC,EAAA4oC,IAEAI,UAAA,SAAAhpC,EAAA4oC,EAAA5wC,GACAmC,EAAAoxC,WAAAvrC,EAAA4oC,EAAA5wC,OAQAgzC,kBAAA,WACA,IAAA7wC,EAAAjM,KACAu1C,EAAAv1C,KAAAmF,QAAAowC,UACA+H,EAAAt9C,KAAAmF,QAAAy3C,SAAArH,UACAv1C,KAAAu9C,aAGAv9C,KAAA20C,MAAAvqB,EAAAmrB,EAAAoH,UAAAxxC,GAAA,QAAAmyC,EAAAvnC,OAAA,SAAAjM,GACA,IAAA0zC,EAAApzB,EAAApqB,MAAAsqB,QAAAirB,EAAAqH,UACAa,EAAAD,EAAAl0C,KAAA,UACA2C,EAAAqzB,SAAAvpB,OAAA0nC,GACAD,EAAA/uC,SACAxC,EAAA+wC,oBAIAh9C,KAAA20C,MAAAvqB,EAAAmrB,EAAAoH,UAAAxxC,GAAA,QAAAmyC,EAAAjwC,MAAA,SAAAvD,GACA,IAAA0zC,EAAApzB,EAAApqB,MAAAsqB,QAAAirB,EAAAqH,UACAY,EAAAl0C,KAAA,UACAk0C,EAAA/uC,SACAxC,EAAA+wC,oBAIAh9C,KAAA20C,MAAAvqB,EAAAmrB,EAAAE,eAAA/Y,MAAA,WACA,IAAAghB,EAAAzxC,EAAA0oC,MAAAvqB,EAAAmrB,EAAAoH,UAAA55C,KAAAwyC,EAAAqH,UACAc,EAAAvjD,QAAA,SAAAyiD,GACA,IAAAY,EAAApzB,EAAAwyB,GACAa,EAAAD,EAAAl0C,KAAA,UACA2C,EAAAqzB,SAAAvpB,OAAA0nC,GACAD,EAAA/uC,WAEAxC,EAAA+wC,oBAKAh9C,KAAA20C,MAAAvqB,EAAAmrB,EAAAC,cAAA9Y,MAAA,WACA,IAAAghB,EAAAzxC,EAAA0oC,MAAAvqB,EAAAmrB,EAAAoH,UAAA55C,KAAAwyC,EAAAqH,UACAc,EAAAvjD,QAAA,SAAAyiD,GACA,IAAAY,EAAApzB,EAAAwyB,GACAa,EAAAD,EAAAl0C,KAAA,UACAk0C,EAAAl0C,KAAA,WAEA2C,EAAAqzB,SAAAsa,KAAA6D,EAAAxxC,EAAA9G,QAAA1F,aASAy9C,YAAA,SAAAprC,EAAA4oC,EAAAC,EAAAhqC,GACA,IAAAgtC,EAAA39C,KAAA49C,iBAAA9rC,GAEA+rC,EAAAtgD,SAAAo9C,EAAAhqC,EAAA,IAAA,IACAmtC,EAAA99C,KAAA+9C,YAAApD,GAAA,OAAA36C,KAAA+9C,YAAAptC,GAEAgtC,EAAAr0C,KAAA,SAAA,WACAq0C,EAAA56C,KAAA,aACAA,KAAA,QACA80B,IAAA,QAAAgmB,EAAA,KACA54C,SACAlC,KAAA,mBACA2lB,KAAAo1B,GACA99C,KAAAg+C,YAAAL,IAIAR,YAAA,SAAArrC,EAAA4oC,EAAAx8C,GACA8B,KAAAi+C,mBACA,IAAAN,EAAA39C,KAAA49C,iBAAA9rC,GACA6rC,EAAAr0C,KAAA,SAAA,QACAq0C,EAAA56C,KAAA,YAAA2lB,KAAA,iCAAA1oB,KAAAk+C,SAAA,aACAl+C,KAAAg+C,YAAAL,IAGAN,WAAA,SAAAvrC,EAAA4oC,EAAA5wC,GACA9J,KAAAi+C,mBACA,IAAAN,EAAA39C,KAAA49C,iBAAA9rC,GACA6rC,EAAAr0C,KAAA,SAAA,SACAq0C,EAAA56C,KAAA,YAAA2lB,KAAA,+BACA1oB,KAAAg+C,YAAAL,IAIAP,UAAA,SAAAtrC,EAAA4oC,GACA16C,KAAAi+C,mBACA,IAAAN,EAAA39C,KAAA49C,iBAAA9rC,GACA6rC,EAAAr0C,KAAA,SAAA,UACAtJ,KAAAg+C,YAAAL,IAGAQ,WAAA,SAAArsC,EAAA4oC,GACA,IAGAA,EAAA16C,KAAAs/B,SAAAmc,QAAA3pC,GACA6pC,EAAA37C,KAAAs/B,SAAAoc,QAAA5pC,GAEAvP,EAAA6nB,EAAApqB,KAAAmF,QAAAy3C,SAAAxzC,UACA7G,EAAA+G,KAAA,SAAAwI,GAEAvP,EAAAQ,KAAA/C,KAAAmF,QAAAy3C,SAAArH,UAAAh8C,MAAAmvB,KAAA1oB,KAAAo+C,gBAAA1D,IACAn4C,EAAAQ,KAAA/C,KAAAmF,QAAAy3C,SAAArH,UAAA1e,MAAAnO,KAAA1oB,KAAA+9C,YAAApC,IAEA37C,KAAA20C,MAAAvqB,EAAApqB,KAAAmF,QAAAowC,UAAAoH,UAAA/1B,OAAArkB,GAEAvC,KAAAg9C,mBAGAA,gBAAA,WACA,IAAAzH,EAAAv1C,KAAAmF,QAAAowC,UAEAnT,GADApiC,KAAAmF,QAAAy3C,SAAArH,UACAv1C,KAAA20C,MAAAvqB,EAAAmrB,EAAAoH,UAAA55C,KAAAwyC,EAAAqH,WAEAyB,EAAAr+C,KAAA20C,MAAAvqB,EAAAmrB,EAAAE,cAAA,IAAAF,EAAAC,cACA8I,EAAAt+C,KAAA20C,MAAAvqB,EAAAmrB,EAAAsH,QACAza,EAAAhpC,OAAA,GACAilD,EAAA5a,YAAA,UACA6a,EAAAnb,SAAA,YAEAkb,EAAAlb,SAAA,UACAmb,EAAA7a,YAAA,YAIAua,YAAA,SAAAL,GACA,IAAApI,EAAAv1C,KAAAmF,QAAAy3C,SAAArH,UACAgJ,EAAAZ,EAAA56C,KAAAwyC,EAAA1e,KAAA,IAAA0e,EAAAx/B,QACAyoC,EAAAb,EAAA56C,KAAAwyC,EAAA5gC,SAAA,IAAA4gC,EAAAx/B,QACA0oC,EAAAd,EAAA56C,KAAAwyC,EAAA9Y,QAAA,IAAA8Y,EAAAloC,OAEA0rC,EAAA4E,EAAAr0C,KAAA,UACA,WAAAyvC,GACAyF,EAAApsC,IAAAqsC,GAAAtb,SAAA,UACAob,EAAA9a,YAAA,WACA,WAAAsV,GACAwF,EAAAnsC,IAAAqsC,GAAAtb,SAAA,UACAqb,EAAA/a,YAAA,WACA,QAAAsV,GAAA,SAAAA,IACAwF,EAAAnsC,IAAAosC,GAAArb,SAAA,UACAsb,EAAAhb,YAAA,YAIAma,iBAAA,SAAA9rC,GAQA,IAPA,IAEAvP,EAFAgzC,EAAAv1C,KAAAmF,QAAAowC,UACAnT,EAAApiC,KAAA20C,MAAAvqB,EAAAmrB,EAAAoH,UAAA55C,KAAAwyC,EAAAqH,UAMAtjD,EAAA,EAAAA,EAAA8oC,EAAAhpC,OAAAE,IAAA,CACA,IAAAolD,EAAAtc,EAAA9oC,GACA,GAAA8wB,EAAAs0B,GAAAp1C,KAAA,WAAAwI,EAAA,CACAvP,EAAAm8C,EACA,OAGA,GAAAn8C,EACA,OAAA6nB,EAAA7nB,IAMA06C,UAAA,SAAA7a,GACA,IAAA,IAAA9oC,EAAA,EAAAA,EAAA8oC,EAAAhpC,OAAAE,IACA,IAAA0G,KAAA2+C,cAAAvc,EAAA9oC,IACA,OAIA,IAAA,IAAAA,EAAA,EAAAA,EAAA8oC,EAAAhpC,OAAAE,IACA0G,KAAA81C,SAAA1T,EAAA9oC,KAIAw8C,SAAA,SAAA3lB,GACA,IAAAre,EAAA9R,KAAAs/B,SAAAltB,IAAA+d,GAEAnwB,KAAAi+C,mBACAj+C,KAAAm+C,WAAArsC,IAKA6sC,cAAA,SAAAxuB,GACA,IAAA52B,EAAAs9B,EAYA,OAVA1G,EAAAx1B,MAGApB,EAAA42B,EAAAx1B,MAAAkD,QAAA,YAAA,KAGAtE,EAAA,MAAA42B,EAAAuqB,SAAAvqB,EAAAuqB,SAAAvqB,EAAA52B,KACAs9B,EAAA,MAAA1G,EAAAwrB,SAAAxrB,EAAAwrB,SAAAxrB,EAAA0G,MAGA72B,KAAA4+C,oBAAArlD,GAIA,IAAAs9B,GACA72B,KAAA6+C,OAAA,aAAAtlD,IACA,GAEAs9B,GAAA72B,KAAAmF,QAAAq3C,WAAA3lB,EAAA72B,KAAAmF,QAAAq3C,WACAx8C,KAAA6+C,OAAA,YAAAtlD,IACA,KAEAs9B,GAAAA,EAAA72B,KAAAmF,QAAAs3C,gBACAz8C,KAAA6+C,OAAA,eAAAtlD,IACA,IAbAyG,KAAA6+C,OAAA,YAAAtlD,IACA,IAkBAslD,OAAA,SAAAC,EAAApE,GACA,IAAAje,EAAAz8B,KAAAmF,QAAA45C,SAAAD,GACA,SAAAxhC,EAAA/jB,EAAAylD,GAAAviB,EAAAA,EAAA5+B,QAAAtE,EAAAylD,GAEA1hC,EAAA,SAAAtd,KAAAo+C,gBAAA1D,IACAp9B,EAAA,eAAAtd,KAAAmF,QAAAo3C,kBAAA5yC,KAAA,OACA2T,EAAA,cAAAtd,KAAA+9C,YAAA/9C,KAAAmF,QAAAq3C,YACAl/B,EAAA,iBAAAtd,KAAA+9C,YAAA/9C,KAAAmF,QAAAs3C,eAEAz8C,KAAAmF,QAAA85C,YAAAxiB,IAGA2hB,gBAAA,SAAA7kD,GAIA,OAHAA,EAAAH,OAAA,KACAG,EAAAA,EAAAyE,MAAA,EAAA,IAAA,MAAAzE,EAAAyE,OAAA,KAEAzE,GAGAqlD,oBAAA,SAAAlE,GACA,IAAAwE,GAAA,IAAAxE,EAAA94C,QAAA,KAAA84C,EAAA78C,QAAA,QAAA,IAAAzD,cAAA,GACA+kD,EAAAn/C,KAAAmF,QAAAo3C,kBAEA,IAAA4C,EAAA/lD,OAAA,OAAA,EAEA,IAAA,IAAAE,EAAA,EAAAA,EAAA6lD,EAAA/lD,OAAAE,IACA,GAAA6lD,EAAA7lD,GAAAc,eAAA8kD,EAAA,OAAA,EAGA,OAAA,GAGAnB,YAAA,SAAAqB,GACA,IAAA9lD,GAAA,EACA,GACA8lD,GAAA,KACA9lD,UACA8lD,EAAA,IAEA,OAAAntC,KAAA2G,IAAAwmC,EAAA,IAAAC,QAAA,IAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAA/lD,MASA,OAJAygC,EAAAwF,SAAA8c,GAIAja,EAAAia,cAAAA,IAEAtjD,OAAA,2BACA,UACA,aACA,cACA,WACA,mBACA,mBACA,SAAAqpC,GACA,OAAAA,IAEArpC,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,+BACA,wBACA,sBACA,uBACA,oBACA,uBACA,qBACA,qBACA,oBACA,oBACA,qBACA,kBACA,uBACA,kCACA,UACA,SAAAU,QAAAyoB,MAAAhL,QAAAge,MAAA4L,QAAArZ,MAAA2a,MAAAoI,KAAAqJ,KAAAzpB,EAAAinB,GAAAtX,QAAA/qB,QAAAC,MAIA,IAAAqwC,OAAAvlB,QAAAsa,OAAAptC,SACAb,UAAA,SAEAm5C,MAAA1L,KAEA/uC,WAAA,SAAAyhB,EAAAphB,GACA+c,MAAAtnB,WAAA2rB,GACAphB,EAAAnF,KAAAw/C,OAAAj5B,EAAAphB,IAEAA,EAAAohB,EACAA,EAAA,MAEAvmB,KAAA6G,UAAA0f,EAAAphB,GAEAohB,EAIAvmB,KAAA20C,MAAAd,KAAA7zC,KAAAu6B,OAHAv6B,KAAA20C,MAAA30C,KAAAy/C,UACAz/C,KAAAu6B,KAAAv6B,KAAA20C,MAAApuB,OAKAzqB,OAAAiL,eAAA/G,KAAA,SACArF,MAAAqF,KAAAmF,QAAAyK,OAAA,IAAAZ,UAIAhP,KAAAgQ,QAEA,IAAA0vC,EAAA1/C,KAAAmF,QAAAw6C,OACA,GAAAD,EAAA,CACA,IAAAE,EAAA5/C,KAAAxF,YACAmlD,EAAAC,EAAAD,OACA,IAAA,IAAAE,KAAAH,EACA,IAAA,IAAApmD,EAAA,EAAAA,EAAAomD,EAAAG,GAAAzmD,OAAAE,IAAA,CACA,IAAAwmD,EAAAJ,EAAAG,GAAAvmD,GACA,GAAA4oB,MAAAlnB,SAAA8kD,GAAA,CACA,IAAAC,EAAAD,EACAE,EAAAL,EAAAE,GAAAE,GACAE,EAAAD,EAAA36C,KAAA26C,EAAA36C,KAAA26C,EAEAhgD,KAAAkgD,MAAAD,EAAAD,EAAA76C,WAQAnF,KAAAu6B,KAAA4lB,eAEAngD,KAAAogD,YAWAZ,OAAA,SAAAj5B,IAAAphB,SACA,IAAAk7C,YAAAnrB,MAAA5rB,KAAAid,IAAA,WACA,GAAA85B,YAAA,CAEA,IAAAC,SAAApH,KAAA,KAAAmH,YAAA,MACAl7C,QAAA+c,MAAApiB,MAAAwgD,SAAAn7C,SAEA,OAAAA,aASAs6C,QAAA,WACA,IAAAr2C,EAAApJ,KAAAmF,QAAAiE,SACA,GAAAA,EACA,OAAApJ,KAAAu/C,MAAAn2C,GAEA,MAAA,IAAA9D,MAAA,4CAUA0K,MAAA,WACA,IAAA/D,EAAAjM,KACAA,KAAAugD,aACAvgD,KAAA20C,MAAAxR,SAAAnjC,KAAAugD,aAEAvgD,KAAA4P,MAAAzE,GAAA,UAAA,SAAArB,EAAAtK,GACAyM,EAAAu0C,SAAAhhD,EAAA8J,SAUA82C,SAAA,aAUAI,SAAA,SAAAC,KA4BAC,SACA71C,UAMA81C,aAIAnQ,cAIAoQ,WAKAV,MAAA,SAAA76C,EAAAuyB,GACA,IAAAioB,EAAAx6C,EAAAw6C,aACAE,EAAA16C,EAAA06C,UAEA//C,KAAA6gD,QAAA7gD,KAAA2/C,WACA,IAAAvwC,EAAApP,KAAA6gD,QAAAhB,GAAA7/C,KAAA6gD,QAAAhB,OAEA,OADAzwC,EAAA2wC,GAAA,IAAA16C,EAAArF,KAAA43B,GACA53B,MAGA2/C,OAAA,SAAAE,EAAAt2C,GACAvJ,KAAA6gD,QAAA7gD,KAAA2/C,WACA,IAAAvwC,EAAApP,KAAA6gD,QAAAhB,GAAA7/C,KAAA6gD,QAAAhB,OAEA,QAAAvgD,GAAAiK,EACA,OAAA2Y,MAAAxhB,MAAA0O,GAAA,MAEA8S,MAAApiB,MAAAsP,EAAA7F,IAWAC,OAAA,WACA,OAAAxJ,KAAAu6B,MAWAumB,aAAA,SAAA/0C,GACA,OAAA,MASAg1C,YAAA,WAGA,OADA31B,SAAA,IAAA41B,UACA51B,UAUA0M,KAAA,WACA93B,KAAA20C,MAAA7c,QASAC,KAAA,WACA/3B,KAAA20C,MAAA5c,QASA9I,MAAA,WACA,IACAjvB,KAAA20C,MAAA1lB,QACA,MAAAgyB,IAIA,OAAAjhD,MASAioB,KAAA,WAGA,OAFAjoB,KAAA20C,MAAA1sB,OAEAjoB,MAGAkhD,OAAA,WAEA,OADAlhD,KAAA4P,MAAAtB,IAAA,YAAA,GACAtO,MAGAmhD,QAAA,WAEA,OADAnhD,KAAA4P,MAAAtB,IAAA,YAAA,GACAtO,MAWAo1B,KAAA,SAAA77B,EAAAoB,GACA,MAAAsR,EAAAjM,KAAAumB,EAAAta,EAAAm1C,MAAAn1C,EAAAo1C,YAEA,YAAA,IAAA1mD,EACAsR,EAAAq1C,MAAA/nD,IAGA0S,EAAAq1C,MAAA/nD,GAAAoB,EAEAsR,EAAA2D,MAAAzB,IAAA,aACAoY,EAAAU,aAAA,SAAA1tB,EAAAA,EAAA,QAAAA,EAAAoB,GAGAsR,IAGAuU,KAAA,SAAAjnB,EAAAoB,GACA,IAAA6/B,EAAAx6B,KAAA20C,MACA7tC,EAAA0zB,EAAAha,KAAAjnB,EAAAoB,GACA,OAAAmM,GAAA0zB,EAAAx6B,KAAA8G,GAGA+wB,IAAA,SAAAt+B,EAAAoB,GACA,IAAA6/B,EAAAx6B,KAAA20C,MACA7tC,EAAA0zB,EAAA3C,IAAAt+B,EAAAoB,GACA,OAAAmM,GAAA0zB,EAAAx6B,KAAA8G,GAGAwC,KAAA,SAAA/P,EAAAoB,GACA,IAAA6/B,EAAAx6B,KAAA20C,MACA7tC,EAAA0zB,EAAAlxB,KAAA/P,EAAAoB,GACA,OAAAmM,GAAA0zB,EAAAx6B,KAAA8G,GAGAnE,KAAA,SAAApJ,EAAAoB,GACA,IAAA6/B,EAAAx6B,KAAA20C,MACA7tC,EAAA0zB,EAAA73B,KAAApJ,EAAAoB,GACA,OAAAmM,GAAA0zB,EAAAx6B,KAAA8G,GAGAosC,MAAA,SAAAzzC,GACA,OAAA4xC,GAAA6B,MAAAlzC,KAAAu6B,KAAA96B,IAGA2M,KAAA,SAAAlS,EAAAuF,GACA,IAAAqK,EAAAoY,MAAApW,QAAA+K,YAAA3c,GACAoP,KAAA7J,IAEA,OAAAyiB,MAAApW,QAAA9P,UAAAoQ,KAAA9R,KAAA0F,KAAA8J,EAAArK,IASA/F,OAAA,SAAAwF,EAAA4rB,GACA,IAAAvE,EAAArnB,EACA4rB,GAAA,SAAAA,EAEA,UAAAA,EACArD,MAAA1U,OAAAwT,EAAAvmB,KAAAu6B,MACA,SAAAzP,GACArD,MAAAxU,MAAAsT,EAAAvmB,KAAAu6B,MAJA9S,MAAAb,OAAAL,EAAAvmB,KAAAu6B,MAMAv6B,KAAAogD,YASAloB,OAAA,WACAl4B,KAAA20C,MAAAlmC,YAuDA,OAnDA6wC,OAAAr4C,QAAA,SAAAs6C,GACA,IAAAl8C,EAAA00B,QAAAsa,OAAAptC,QAAAlH,MAAAC,KAAAN,WAEA,SAAA8hD,EAAAjoD,GACA8L,EAAArJ,UAAAzC,GAAA,SAAAoB,GACA,YAAA2E,IAAA3E,GACAqF,KAAA4P,MAAAtB,IAAA/U,EAAAoB,GACAqF,MAEAA,KAAA4P,MAAAzB,IAAA5U,IAIA,GAAAgoD,EAAA3xC,MACA,IAAA,IAAArW,KAAAgoD,EAAA3xC,MACA4xC,EAAAjoD,GAOA,OAHAgoD,EAAAxN,YACAha,QAAAwF,SAAAl6B,EAAAk8C,EAAAxN,YAEA1uC,GAGAi6C,OAAA/f,SAAA,SAAAl6B,EAAAo8C,GACA,IAAAF,EAAAl8C,EAAArJ,UACA+3C,EAAA0N,GAAAF,EAAAxN,WAEA,SAAAyN,EAAAjoD,GACA8L,EAAArJ,UAAAzC,GAAA,SAAAoB,GACA,YAAA2E,IAAA3E,GACAqF,KAAA4P,MAAAtB,IAAA/U,EAAAoB,GACAqF,MAEAA,KAAA4P,MAAAzB,IAAA5U,IAIA,GAAAgoD,EAAA3xC,MACA,IAAA,IAAArW,KAAAgoD,EAAA3xC,MACA4xC,EAAAjoD,GAOA,OAHAw6C,GACAha,QAAAwF,SAAAl6B,EAAA0uC,GAEA1uC,GAGA4J,KAAAqwC,OAAAA,SAGAvmD,OAAA,6BACA,SACA,WACA,kBACA,YACA,SAAAkW,GACA,OAAAA,IAEAlW,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA","file":"../skylark-widgets-base-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback,isForEach) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if ((isForEach ? callback.call(value, value, key) : callback.call(value, key, value) ) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if ((isForEach ? callback.call(value, value, i) : callback.call(value, i, value) )=== false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            // if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n            //    if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n            if (deep && isPlainObject(source[key])) {\r\n                if (!isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                //if (isArray(source[key]) && !isArray(target[key])) {\r\n                //    target[key] = [];\r\n                //}\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx-events/events',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"langx.events\",{});\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-events/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-events/Listener',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\"\r\n],function(types,objects,arrays,klass,events,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isBoolean = types.isBoolean,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n\r\n    var Listener = klass({\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            if (isBoolean(callback)) {\r\n                one = callback;\r\n                callback = null;\r\n            }\r\n\r\n            if (types.isPlainObject(event)){\r\n                //listenTo(obj,callbacks,one)\r\n                var callbacks = event;\r\n                for (var name in callbacks) {\r\n                    this.listeningTo(obj,name,callbacks[name],one);\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (!callback) {\r\n                callback = \"handleEvent\";\r\n            }\r\n            \r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return events.Listener = Listener;\r\n\r\n});\ndefine('skylark-langx-events/Emitter',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\",\r\n  \"./Listener\"\r\n],function(types,objects,arrays,klass,events,Event,Listener){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = Listener.inherit({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (!callback ) {\r\n                throw new Error(\"No callback function\");\r\n            } else if (!isFunction(callback)) {\r\n                throw new Error(\"The callback  is not afunction\");\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n\r\n    return　events.Emitter = Emitter;\r\n\r\n});\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-events/Emitter\"\r\n],function(Emitter){\r\n    return Emitter;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./Emitter\"\r\n],function(Emitter){\r\n    return Emitter;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"./base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-events/createEvent',[\r\n\t\"./events\",\r\n\t\"./Event\"\r\n],function(events,Event){\r\n    function createEvent(type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    return events.createEvent = createEvent;\t\r\n});\ndefine('skylark-langx-events/main',[\r\n\t\"./events\",\r\n\t\"./Event\",\r\n\t\"./Listener\",\r\n\t\"./Emitter\",\r\n\t\"./createEvent\"\r\n],function(events){\r\n\treturn events;\r\n});\ndefine('skylark-langx-events', ['skylark-langx-events/main'], function (main) { return main; });\n\ndefine('skylark-langx/events',[\r\n\t\"skylark-langx-events\"\r\n],function(events){\r\n\treturn events;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-maths/maths',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\r\n\r\n\tvar _lut = [];\r\n\r\n\tfor ( var i = 0; i < 256; i ++ ) {\r\n\r\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\r\n\r\n\t}\r\n\r\n\tvar maths = {\r\n\r\n\t\tDEG2RAD: Math.PI / 180,\r\n\t\tRAD2DEG: 180 / Math.PI,\r\n\r\n\r\n\r\n\t\tclamp: function ( value, min, max ) {\r\n\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t\t},\r\n\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t\t},\r\n\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t\t},\r\n\r\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n\t\tlerp: function ( x, y, t ) {\r\n\r\n\t\t\treturn ( 1 - t ) * x + t * y;\r\n\r\n\t\t},\r\n\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t\t},\r\n\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t\t},\r\n\r\n\t\t// Random integer from <low, high> interval\r\n\r\n\t\trandInt: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <low, high> interval\r\n\r\n\t\trandFloat: function ( low, high ) {\r\n\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t\t},\r\n\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\r\n\t\trandFloatSpread: function ( range ) {\r\n\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t\t},\r\n\r\n\t\tdegToRad: function ( degrees ) {\r\n\r\n\t\t\treturn degrees * MathUtils.DEG2RAD;\r\n\r\n\t\t},\r\n\r\n\t\tradToDeg: function ( radians ) {\r\n\r\n\t\t\treturn radians * MathUtils.RAD2DEG;\r\n\r\n\t\t},\r\n\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t\t},\r\n\r\n\t\tceilPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloorPowerOfTwo: function ( value ) {\r\n\r\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\r\n\r\n\t\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\r\n\t\t\t// rotations are applied to the axes in the order specified by 'order'\r\n\t\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t\t\t// angles are in radians\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c2 = cos( b / 2 );\r\n\t\t\tvar s2 = sin( b / 2 );\r\n\r\n\t\t\tvar c13 = cos( ( a + c ) / 2 );\r\n\t\t\tvar s13 = sin( ( a + c ) / 2 );\r\n\r\n\t\t\tvar c1_3 = cos( ( a - c ) / 2 );\r\n\t\t\tvar s1_3 = sin( ( a - c ) / 2 );\r\n\r\n\t\t\tvar c3_1 = cos( ( c - a ) / 2 );\r\n\t\t\tvar s3_1 = sin( ( c - a ) / 2 );\r\n\r\n\t\t\tif ( order === 'XYX' ) {\r\n\r\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\r\n\t\t\t} else if ( order === 'YZY' ) {\r\n\r\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\r\n\t\t\t} else if ( order === 'ZXZ' ) {\r\n\r\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\r\n\t\t\t} else if ( order === 'XZX' ) {\r\n\r\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\r\n\t\t\t} else if ( order === 'YXY' ) {\r\n\r\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\r\n\t\t\t} else if ( order === 'ZYZ' ) {\r\n\r\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\r\n\treturn  skylark.attach(\"langx.maths\",maths);\r\n});\ndefine('skylark-langx-maths/main',[\r\n\t\"./maths\"\r\n],function(maths){\r\n\treturn maths;\r\n});\ndefine('skylark-langx-maths', ['skylark-langx-maths/main'], function (main) { return main; });\n\ndefine('skylark-langx/maths',[\r\n    \"skylark-langx-maths\"\r\n],function(maths){\r\n    return maths;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n\r\n    function ltrim(str) {\r\n        return str.replace(/^\\s+/, '');\r\n    }\r\n    \r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        ltrim : ltrim,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n    \"skylark-langx-events/Emitter\"\r\n],function(Emitter){\r\n    return Emitter;\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n\t\"./Emitter\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./events\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./maths\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(\r\n    skylark,\r\n    arrays,\r\n    ArrayStore,\r\n    aspect,\r\n    async,\r\n    datetimes,\r\n    Deferred,\r\n    Emitter,\r\n    Evented,\r\n    events,\r\n    funcs,\r\n    hoster,\r\n    klass,\r\n    maths,\r\n    numbers,\r\n    objects,\r\n    Stateful,\r\n    strings,\r\n    topic,\r\n    types\r\n) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                addClass(elm, klass);\r\n            } else {\r\n                removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-io-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-io-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"skylark-io-diskfs/webentry\",   \r\n    \"./files\"\r\n],function(arrays,Deferred, styler, eventer, velm, $, webentry, files){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n    files.dropzone = dropzone;\r\n\r\n    velm.delegate([\r\n        \"dropzone\"\r\n    ],files);\r\n\r\n\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n\r\n    return dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"./files\"\r\n],function(objects, eventer,velm,$, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    files.pastezone = pastezone;\r\n\r\n    velm.delegate([\r\n        \"pastezone\"\r\n    ],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n\r\n    return pastezone;\r\n\r\n});\r\n\ndefine('skylark-io-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",   \r\n    \"skylark-io-diskfs/select\",\r\n    \"./files\"\r\n],function(objects, eventer, velm, $, select, files){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    files.picker = picker;\r\n\r\n    velm.delegate([\r\n        \"picker\"\r\n    ],files);\r\n\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n    return picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-funcs\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(\r\n    skylark,\r\n    types,\r\n    objects,\r\n    funcs,\r\n    Emitter, \r\n    noder, \r\n    datax, \r\n    eventer, \r\n    finder, \r\n    geom, \r\n    styler, \r\n    fx, \r\n    $, \r\n    elmx\r\n) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !types.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        args = slice.call(args,1); //remove method name\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && types.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   Emitter.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n\r\n            this._destroy();\r\n\r\n            // remove all event lisener\r\n            this.unlistenTo();\r\n            // remove data \r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: funcs.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        _velm : function(elm) {\r\n            elm = elm || this._elm;\r\n            return elmx(elm);\r\n\r\n        },\r\n\r\n        _query : function(elm) {\r\n            elm = elm || this._elm;\r\n            return $(elm);\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    objects.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/SingleUploader',[\r\n\t\"skylark-langx-emitter\",\r\n\t\"skylark-langx-async/Deferred\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-plugins\",\r\n\t\"./files\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(\r\n\tEmitter, \r\n\tDeferred, \r\n\telmx,\r\n\tplugins,\r\n\tfiles\r\n) {\r\n\t//import ZipLoader from 'zip-loader';\r\n\r\n\t/**\r\n\t * Watches an element for file drops, parses to create a filemap hierarchy,\r\n\t * and emits the result.\r\n\t */\r\n\tclass SingleUploader extends plugins.Plugin {\r\n\t\tget klassName() {\r\n\t    \treturn \"SingleUploader\";\r\n    \t} \r\n\r\n    \tget pluginName(){\r\n      \t\treturn \"lark.singleuploader\";\r\n    \t} \r\n\r\n\t\tget options () {\r\n      \t\treturn {\r\n\t            selectors : {\r\n\t              picker   : \".file-picker\",\r\n\t              dropzone : \".file-dropzone\",\r\n\t              pastezone: \".file-pastezone\",\r\n\r\n\t              startUploads: '.start-uploads',\r\n\t              cancelUploads: '.cancel-uploads',\r\n\t            }\r\n\t     \t}\r\n\t\t}\r\n\r\n\r\n\t  /**\r\n\t   * @param  {Element} elm\r\n\t   * @param  [options] \r\n\t   */\r\n\t  constructor (elm, options) {\r\n\t  \tsuper(elm,options);\r\n\r\n        this._velm = elmx(this._elm);\r\n\r\n\t  \tthis._initFileHandlers();\r\n\r\n\t}\r\n\r\n    _initFileHandlers () {\r\n        var self = this;\r\n\r\n        var selectors = this.options.selectors,\r\n        \tdzSelector = selectors.dropzone,\r\n        \tpzSelector = selectors.pastezone,\r\n        \tpkSelector = selectors.picker;\r\n\r\n        if (dzSelector) {\r\n\t\t\tthis._velm.$(dzSelector).dropzone({\r\n                dropped : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n\t\t\t});\r\n        }\r\n\r\n\r\n        if (pzSelector) {\r\n            this._velm.$(pzSelector).pastezone({\r\n                pasted : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n            });                \r\n        }\r\n\r\n        if (pkSelector) {\r\n            this._velm.$(pkSelector).picker({\r\n                multiple: true,\r\n                picked : function (files) {\r\n                    self._addFile(files[0]);\r\n                }\r\n            });                \r\n        }\r\n    }\r\n\r\n     _addFile(file) {\r\n        this.emit('added', file);\t  \r\n     }\r\n\r\n\r\n\t  /**\r\n\t   * Destroys the instance.\r\n\t   */\r\n\t  destroy () {\r\n\t  }\r\n\r\n\r\n\t}\r\n\r\n\treturn files.SingleUploader = SingleUploader;\r\n\r\n});\r\n\r\n \ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-net-http/Upload',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"skylark-langx-emitter/Evented\",    \r\n    \"./Xhr\",\r\n    \"./http\"\r\n],function(types, objects, arrays, Deferred, Evented,Xhr, http){\r\n\r\n    var blobSlice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n\r\n\r\n    /*\r\n     *Class for uploading files using xhr.\r\n     */\r\n    var Upload = Evented.inherit({\r\n        klassName : \"Upload\",\r\n\r\n        _construct : function(options) {\r\n            this._options = objects.mixin({\r\n                debug: false,\r\n                url: '/upload',\r\n                // maximum number of concurrent uploads\r\n                maxConnections: 999,\r\n                // To upload large files in smaller chunks, set the following option\r\n                // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n                // or the browser does not support the required Blob API, files will\r\n                // be uploaded as a whole.\r\n                maxChunkSize: undefined,\r\n\r\n                onProgress: function(id, fileName, loaded, total){\r\n                },\r\n                onComplete: function(id, fileName){\r\n                },\r\n                onCancel: function(id, fileName){\r\n                },\r\n                onFailure : function(id,fileName,e) {                    \r\n                }\r\n            },options);\r\n\r\n            this._queue = [];\r\n            // params for files in queue\r\n            this._params = [];\r\n\r\n            this._files = [];\r\n            this._xhrs = [];\r\n\r\n            // current loaded size in bytes for each file\r\n            this._loaded = [];\r\n\r\n        },\r\n\r\n        /**\r\n         * Adds file to the queue\r\n         * Returns id to use with upload, cancel\r\n         **/\r\n        add: function(file){\r\n            return this._files.push(file) - 1;\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server.\r\n         */\r\n        send: function(id, params){\r\n            if (!this._files[id]) {\r\n                // Already sended or canceled\r\n                return ;\r\n            }\r\n            if (this._queue.indexOf(id)>-1) {\r\n                // Already in the queue\r\n                return;\r\n            }\r\n            var len = this._queue.push(id);\r\n\r\n            var copy = objects.clone(params);\r\n\r\n            this._params[id] = copy;\r\n\r\n            // if too many active uploads, wait...\r\n            if (len <= this._options.maxConnections){\r\n                this._send(id, this._params[id]);\r\n            }     \r\n        },\r\n\r\n        /**\r\n         * Sends all files  and additional query params to the server.\r\n         */\r\n        sendAll: function(params){\r\n           for( var id = 0; id <this._files.length; id++) {\r\n                this.send(id,params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id){\r\n            this._cancel(id);\r\n            this._dequeue(id);\r\n        },\r\n\r\n        /**\r\n         * Cancells all uploads\r\n         */\r\n        cancelAll: function(){\r\n            for (var i=0; i<this._queue.length; i++){\r\n                this._cancel(this._queue[i]);\r\n            }\r\n            this._queue = [];\r\n        },\r\n\r\n        getName: function(id){\r\n            var file = this._files[id];\r\n            return file.fileName != null ? file.fileName : file.name;\r\n        },\r\n\r\n        getSize: function(id){\r\n            var file = this._files[id];\r\n            return file.fileSize != null ? file.fileSize : file.size;\r\n        },\r\n\r\n        /**\r\n         * Returns uploaded bytes for file identified by id\r\n         */\r\n        getLoaded: function(id){\r\n            return this._loaded[id] || 0;\r\n        },\r\n\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server\r\n         * @param {Object} params name-value string pairs\r\n         */\r\n        _send: function(id, params){\r\n            var options = this._options,\r\n                name = this.getName(id),\r\n                size = this.getSize(id),\r\n                chunkSize = options.maxChunkSize || 0,\r\n                curUploadingSize,\r\n                curLoadedSize = 0,\r\n                file = this._files[id],\r\n                args = {\r\n                    headers : {\r\n                    }                    \r\n                };\r\n\r\n            this._loaded[id] = this._loaded[id] || 0;\r\n\r\n            var xhr = this._xhrs[id] = new Xhr({\r\n                url : options.url\r\n            });\r\n\r\n            if (chunkSize)  {\r\n\r\n                args.data = blobSlice.call(\r\n                    file,\r\n                    this._loaded[id],\r\n                    this._loaded[id] + chunkSize,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                curUploadingSize = args.data.size;\r\n                // Expose the chunk bytes position range:\r\n                args.headers[\"content-range\"] = 'bytes ' + this._loaded[id] + '-' +\r\n                    (this._loaded[id] + curUploadingSize - 1) + '/' + size;\r\n                args.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }  else {\r\n                curUploadingSize = size;\r\n                var formParamName =  params.formParamName,\r\n                    formData = params.formData;\r\n\r\n                if (formParamName) {\r\n                    if (!formData) {\r\n                        formData = new FormData();\r\n                    }\r\n                    formData.append(formParamName,file);\r\n                    args.data = formData;\r\n    \r\n                } else {\r\n                    args.headers[\"Content-Type\"] = file.type || \"application/octet-stream\";\r\n                    args.data = file;\r\n                }\r\n            }\r\n\r\n\r\n            var self = this;\r\n            xhr.post(\r\n                args\r\n            ).progress(function(e){\r\n                if (e.lengthComputable){\r\n                    curLoadedSize = curLoadedSize + e.loaded;\r\n                    self._loaded[id] = self._loaded[id] + e.loaded;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);\r\n                }\r\n            }).then(function(){\r\n                if (!self._files[id]) {\r\n                    // the request was aborted/cancelled\r\n                    return;\r\n                }\r\n\r\n                if (curLoadedSize < curUploadingSize) {\r\n                    // Create a progress event if no final progress event\r\n                    // with loaded equaling total has been triggered\r\n                    // for this chunk:\r\n                    self._loaded[id] = self._loaded[id] + curUploadingSize - curLoadedSize;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);                    \r\n                }\r\n\r\n                if (self._loaded[id] <size) {\r\n                    // File upload not yet complete,\r\n                    // continue with the next chunk:\r\n                    self._send(id,params);\r\n                } else {\r\n                    self._options.onComplete(id,name);\r\n\r\n                    self._files[id] = null;\r\n                    self._xhrs[id] = null;\r\n                    self._dequeue(id);\r\n                }\r\n\r\n\r\n            }).catch(function(e){\r\n                self._options.onFailure(id,name,e);\r\n\r\n                self._files[id] = null;\r\n                self._xhrs[id] = null;\r\n                self._dequeue(id);\r\n            });\r\n        },\r\n\r\n        _cancel: function(id){\r\n            this._options.onCancel(id, this.getName(id));\r\n\r\n            this._files[id] = null;\r\n\r\n            if (this._xhrs[id]){\r\n                this._xhrs[id].abort();\r\n                this._xhrs[id] = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns id of files being uploaded or\r\n         * waiting for their turn\r\n         */\r\n        getQueue: function(){\r\n            return this._queue;\r\n        },\r\n\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        _dequeue: function(id){\r\n            var i = arrays.inArray(id,this._queue);\r\n            this._queue.splice(i, 1);\r\n\r\n            var max = this._options.maxConnections;\r\n\r\n            if (this._queue.length >= max && i < max){\r\n                var nextId = this._queue[max-1];\r\n                this._send(nextId, this._params[nextId]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return http.Upload = Upload;    \r\n});\ndefine('skylark-domx-files/MultiUploader',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-net-http/Upload\",\r\n  \"skylark-domx-plugins\",\r\n  \"./files\"\r\n]  ,function(skylark,langx,$, elmx,FileUpload, plugins,files){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  plugins.Plugin.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.multiuploader\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n\r\n        _construct : function(elm,options) {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n\r\n           this.overrided(elm,options);\r\n\r\n\r\n           this._velm = elmx(this._elm);\r\n        \r\n\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n   plugins.register(MultiUploader);\r\n\r\n\r\n\r\n\treturn files.MultiUploader = MultiUploader;\r\n});\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\",\r\n\t\"./SingleUploader\",\r\n\t\"./MultiUploader\"\r\n],function(files){\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Action\",\r\n\t\"./ActionManager\",\r\n\t\"./Widget\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}