{"version":3,"sources":["skylark-widgets-base-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","parse","event","segs","join","Emitter","on","events","selector","data","ctx","one","self","_hub","parsed","emit","e","CustomEvent","eventName","listeners","len","reCompact","listener","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","collections","Collection","_clear","clear","count","c","it","iterator","hasNext","thisArg","next","toArray","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","match","get","strKey","silent","set","oldValue","updated","remove","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","ActionManager","addAction","category","executeAction","removeAction","ActiionManager","Action","text","tooltip","icon","shortcut","state","_state","checked","disabled","_init","execute","_execute","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","Infinity","matches","idProperty","id","getIdentity","put","Math","random","overwrite","add","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","settings","render","matcher","RegExp","variable","argument","funcs","Promise","always","handler","done","fail","catch","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","notified","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","changes","changing","_changing","_previousAttributes","current","prev","_pending","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","enabled","even","focus","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","Widget","_elmx","_parse","_velm","_create","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","eval","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName"],"mappings":";;;;;;;u+BAAAA,OAAA,8BAAA,WACA,OAAA,SAAAC,EAAAC,EAAAC,GACA,iBAAAD,IACAA,EAAAA,EAAAE,MAAA,MAOA,IALA,IAAAC,EAAAH,EAAAG,OACAC,EAAAL,EACAM,EAAA,EACAC,EAAAN,EAAAK,KAEAA,EAAAF,GACAC,EAAAA,EAAAE,GAAAF,EAAAE,OACAA,EAAAN,EAAAK,KAGA,OAAAD,EAAAE,GAAAL,KAGAH,OAAA,uBACA,aACA,SAAAS,GACA,IAAAC,GACAC,OAAA,SAAAT,EAAAU,GACA,OAAAH,EAAAC,EAAAR,EAAAU,KAGA,OAAAF,IAGAV,OAAA,yBACA,QACA,SAAAU,GACA,OAAAA,IAEAV,OAAA,oBAAA,yBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,oBACA,SAAAM,GACA,OAAAA,IAGAN,OAAA,6BACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,qBAEAX,OAAA,6BACA,oBACA,SAAAU,GACA,IAIAI,EAJAC,EAAAC,MAAAC,QACAC,KAAAA,SAEAC,GACAL,KAGA,uEAAAV,MAAA,KAAAgB,QAAA,SAAAZ,GACAM,EAAA,WAAAN,EAAA,KAAAA,EAAAa,gBAGA,SAAAT,GACA,OAAA,MAAAA,EAAAU,OAAAV,GACAE,EAAAI,EAAAK,KAAAX,KAAA,WAKAK,EAAAF,GAAA,SAAAH,GACA,OAAAY,QAAAA,OAAAC,cAAAT,OApBA,SAAAU,EAAAd,GACA,IAAAJ,EACA,IAAAA,KAAAI,EACA,GAAA,OAAAA,EAAAJ,GACA,OAAA,EAGA,OAAA,EAiBA,SAAAmB,EAAAC,GACA,MAAA,YAAAT,EAAAS,GAKA,SAAAC,EAAAjB,GACA,OAAAA,GAAAA,EAAAkB,SA2BA,SAAAC,EAAAnB,GACA,MAAA,iBAAAA,EAGA,SAAAoB,EAAApB,GACA,IAAAO,SAAAP,EACA,MAAA,aAAAO,GAAA,WAAAA,KAAAP,EAQA,SAAAqB,EAAArB,GACA,MAAA,iBAAAA,EAGA,SAAAsB,EAAAtB,GACA,OAAAA,GAAAA,GAAAA,EAAAuB,OAoCA,OAAAzB,EAAAC,OAAA,eAEAM,QAAAA,EAEAmB,YAxJA,SAAAxB,GACA,OAAAqB,EAAArB,KAAAiB,EAAAjB,IAAA,iBAAAA,EAAAP,SAAAsB,EAAAf,IAyJAyB,UAzIA,SAAAzB,GACA,OAAA,IAAAA,IAAA,IAAAA,GAAA,qBAAAM,EAAAK,KAAAX,IA0IA0B,UAtIA,SAAA1B,GACA,YAAA,IAAAA,GAuIA2B,WApIA,SAAA3B,GACA,OAAA,MAAAA,GAAAA,EAAAkB,UAAAlB,EAAA4B,eAqIAC,UAjIA,SAAA7B,GACA,SAAAA,GAAA,IAAAA,EAAAkB,WAkIAY,QAAAhB,EAEAA,cAAAA,EAEAC,WAAAA,EAEAE,WAAAA,EAEAc,OAjFA,SAAA/B,GACA,OAAA,OAAAA,GAkFAmB,SAAAA,EAEAa,UAAAb,EAEAC,SAAAA,EAEAa,cA3EA,SAAAjC,GACA,OAAAoB,EAAApB,KAAAsB,EAAAtB,IAAAkC,OAAAC,eAAAnC,IAAAkC,OAAAE,WA4EAf,SAAAA,EAEAgB,aAnEA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAC,SAAAC,SAAA,KAAAD,SAAAE,SAIA,OAHAF,SAAAG,OACAJ,GAAA,IAAAC,SAAAG,MAEAL,EAAAM,WAAAL,KA+DAM,SA9CA,SAAA7B,GACA,MAAA,iBAAAA,GACA8B,aAAA9B,IAAA+B,eAAApC,KAAAK,IAAAgC,WA8CAC,YA1CA,SAAAjD,GACA,YAAA,IAAAA,GA2CAsB,SAAAA,EAEAf,KAAAA,MAIAnB,OAAA,4BACA,WACA,SAAA8D,GACA,OAAAA,IAEA9D,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,mBACA,uBACA,SAAAU,EAAAoD,GACA,IAAA9B,EAAA8B,EAAA9B,SACAyB,EAAAK,EAAAL,SAEAM,EAAA,EAAA,EAEAC,EAAA,uBACAC,EAAA,IAGAC,EAAA,aAGAC,EAAA,qBAGAC,EAAA,aAGAC,EAAA,cAMAC,EAAAC,SAyBA,SAAAC,EAAA5C,GACA,IAAAA,EACA,OAAA,IAAAA,EAAAA,EAAA,EAGA,IADAA,EAAA6C,EAAA7C,MACAmC,GAAAnC,KAAAmC,EAAA,CACA,IAAAW,EAAA9C,EAAA,GAAA,EAAA,EACA,OAAA8C,EAAAV,EAEA,OAAApC,GAAAA,EAAAA,EAAA,EAyDA,SAAA6C,EAAA7C,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,GAAA6B,EAAA7B,GACA,OAAAqC,EAEA,GAAAjC,EAAAJ,GAAA,CACA,IAAA+C,EAAA,mBAAA/C,EAAAgD,QAAAhD,EAAAgD,UAAAhD,EACAA,EAAAI,EAAA2C,GAAAA,EAAA,GAAAA,EAEA,GAAA,iBAAA/C,EACA,OAAA,IAAAA,EAAAA,GAAAA,EAEAA,EAAAA,EAAAiD,QAAAX,EAAA,IACA,IAAAY,EAAAV,EAAAW,KAAAnD,GACA,OAAAkD,GAAAT,EAAAU,KAAAnD,GACA0C,EAAA1C,EAAAoD,MAAA,GAAAF,EAAA,EAAA,GACAX,EAAAY,KAAAnD,GAAAqC,GAAArC,EAGA,OAAAlB,EAAAC,OAAA,iBACA6D,SAAAA,EACAC,SAAAA,EACAQ,UAtDA,SAAArD,GACA,IAAAsD,EAAAV,EAAA5C,GACAuD,EAAAD,EAAA,EAEA,OAAAA,GAAAA,EAAAC,EAAAD,EAAAC,EAAAD,EAAA,OAqDAlF,OAAA,8BACA,aACA,SAAAoF,GACA,OAAAA,IAEApF,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,sBACA,2BACA,sBACA,yBACA,SAAAU,EAAAD,EAAAqD,EAAAsB,GACA,IA+BAC,EAAAC,EA/BAC,EAAAzC,OAAAE,UAAAuC,eACAP,EAAAhE,MAAAgC,UAAAgC,MACA3C,EAAAyB,EAAAzB,UACAV,EAAAmC,EAAAnC,WACAK,EAAA8B,EAAA9B,SACAa,EAAAiB,EAAAjB,cACA5B,EAAA6C,EAAA7C,QACAmB,EAAA0B,EAAA1B,YACAH,EAAA6B,EAAA7B,SACAgD,EAAAG,EAAAH,UAuBA,IApBAO,EAAAC,EAoBAC,EAAA,oBAAAC,OAAAA,OAAA3C,UAAA,KA0GA,SAAA4C,EAAAhF,GACA,IAAAoB,EAAApB,GAAA,SACA,IAAAiF,KACA,IAAA,IAAAC,KAAAlF,EAAAiF,EAAAE,KAAAD,GACA,OAAAD,EA0DA,SAAAG,EAAApF,EAAAV,GACA,IAAAe,EAAAf,GACA,OAAA,MAAAU,GAAA2E,EAAAhE,KAAAX,EAAAV,GAGA,IADA,IAAAG,EAAAH,EAAAG,OACAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAuF,EAAA5F,EAAAK,GACA,GAAA,MAAAK,IAAA2E,EAAAhE,KAAAX,EAAAkF,GACA,OAAA,EAEAlF,EAAAA,EAAAkF,GAEA,QAAAzF,EAgEA,SAAA4F,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAP,KAAAK,EAIAE,QAAAC,IAAAJ,EAAAJ,KAGAM,IAAAvD,EAAAsD,EAAAL,KAAA7E,EAAAkF,EAAAL,MACAjD,EAAAsD,EAAAL,MAAAjD,EAAAqD,EAAAJ,MACAI,EAAAJ,OAEA7E,EAAAkF,EAAAL,MAAA7E,EAAAiF,EAAAJ,MACAI,EAAAJ,OAEAG,EAAAC,EAAAJ,GAAAK,EAAAL,GAAAM,EAAAC,SACAC,IAAAH,EAAAL,KACAI,EAAAJ,GAAAK,EAAAL,KAGA,OAAAI,EAGA,SAAAK,EAAAC,GACA,IAAAC,EAAAzB,EAAAzD,KAAAmF,UAAA,GACAR,EAAAO,EAAAE,QACAP,GAAA,EAKA,OAJA/D,EAAAoE,EAAAA,EAAApG,OAAA,MACA+F,EAAAK,EAAAG,QAIAV,OAAAA,EACAW,QAAAJ,EACAL,KAAAA,GAIA,SAAAU,IACA,IAAAN,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAAzF,QAAA,SAAA+E,GACAF,EAAAO,EAAAN,OAAAC,EAAAK,EAAAJ,MAAA,KAEAI,EAAAN,OAkFA,SAAAe,EAAArG,GAIA,IAHA,IAAAiF,EAAAD,EAAAhF,GACAP,EAAAwF,EAAAxF,OACA4G,EAAAjG,MAAAX,GACAE,EAAA,EAAAA,EAAAF,EAAAE,IACA0G,EAAA1G,GAAAK,EAAAiF,EAAAtF,IAEA,OAAA0G,EA2BA,OAlZA5B,EAAA,SAAA6B,EAAAC,EAAAC,EAAAC,GAGA,GAAAH,IAAAC,EAAA,OAAA,IAAAD,GAAA,EAAAA,GAAA,EAAAC,EAEA,GAAA,MAAAD,GAAA,MAAAC,EAAA,OAAA,EAEA,GAAAD,GAAAA,EAAA,OAAAC,GAAAA,EAEA,IAAAhG,SAAA+F,EACA,OAAA,aAAA/F,GAAA,WAAAA,GAAA,iBAAAgG,IACA7B,EAAA4B,EAAAC,EAAAC,EAAAC,IAIA/B,EAAA,SAAA4B,EAAAC,EAAAC,EAAAC,GAKA,IAAAC,EAAApG,SAAAK,KAAA2F,GACA,GAAAI,IAAApG,SAAAK,KAAA4F,GAAA,OAAA,EACA,OAAAG,GAEA,IAAA,kBAEA,IAAA,kBAGA,MAAA,GAAAJ,GAAA,GAAAC,EACA,IAAA,kBAGA,OAAAD,IAAAA,GAAAC,IAAAA,EAEA,IAAAD,EAAA,GAAAA,GAAA,EAAAC,GAAAD,IAAAC,EACA,IAAA,gBACA,IAAA,mBAIA,OAAAD,IAAAC,EACA,IAAA,kBACA,OAAAzB,EAAAd,QAAArD,KAAA2F,KAAAxB,EAAAd,QAAArD,KAAA4F,GAGA,IAAAI,EAAA,mBAAAD,EACA,IAAAC,EAAA,CACA,GAAA,iBAAAL,GAAA,iBAAAC,EAAA,OAAA,EAGA,IAAAK,EAAAN,EAAAzF,YAAAgG,EAAAN,EAAA1F,YACA,GAAA+F,IAAAC,KAAA9F,EAAA6F,IAAAA,aAAAA,GACA7F,EAAA8F,IAAAA,aAAAA,IACA,gBAAAP,GAAA,gBAAAC,EACA,OAAA,EAQAC,EAAAA,MACAC,EAAAA,MAEA,IADA,IAAAhH,EAAA+G,EAAA/G,OACAA,KAGA,GAAA+G,EAAA/G,KAAA6G,EAAA,OAAAG,EAAAhH,KAAA8G,EAQA,GAJAC,EAAArB,KAAAmB,GACAG,EAAAtB,KAAAoB,GAGAI,EAAA,CAGA,IADAlH,EAAA6G,EAAA7G,UACA8G,EAAA9G,OAAA,OAAA,EAEA,KAAAA,KACA,IAAAgF,EAAA6B,EAAA7G,GAAA8G,EAAA9G,GAAA+G,EAAAC,GAAA,OAAA,MAEA,CAEA,IAAAvB,EAAAD,EAAA/C,OAAA+C,KAAAqB,GAGA,GAFA7G,EAAAwF,EAAAxF,OAEAyC,OAAA+C,KAAAsB,GAAA9G,SAAAA,EAAA,OAAA,EACA,KAAAA,KAGA,GADAyF,EAAAD,EAAAxF,QACAiG,IAAAa,EAAArB,KAAAT,EAAA6B,EAAApB,GAAAqB,EAAArB,GAAAsB,EAAAC,GAAA,OAAA,EAMA,OAFAD,EAAAR,MACAS,EAAAT,OACA,GA8SAlG,EAAAC,OAAA,iBACAiF,QAAAA,EAEAjF,OAAAF,EAEAiH,MA7BA,SAAAA,EAAAC,EAAAC,GACA,IAAAC,EACA,QAAAvB,IAAAqB,GAAA,OAAAA,EACAE,EAAAF,OACA,GAAAC,GAAAD,EAAAD,MACAG,EAAAF,EAAAD,aACA,GAAAzG,EAAA0G,GAAA,CACAE,KACA,IAAA,IAAAtH,EAAA,EAAAA,EAAAoH,EAAAtH,OAAAE,IACAsH,EAAA9B,KAAA2B,EAAAC,EAAApH,UAEA,GAAAsC,EAAA8E,GAEA,IAAA,IAAA7B,KADA+B,KACAF,EACAE,EAAA/B,GAAA4B,EAAAC,EAAA7B,SAGA+B,EAAAF,EAGA,OAAAE,GAWApC,UA/aAD,EA+aAI,EA/aAH,GA+aA,EA9aA,SAAA7E,GACA,IAAAP,EAAAqG,UAAArG,OAEA,GADAoF,IAAA7E,EAAAkC,OAAAlC,IACAP,EAAA,GAAA,MAAAO,EAAA,OAAAA,EACA,IAAA,IAAAkH,EAAA,EAAAA,EAAAzH,EAAAyH,IAIA,IAHA,IAAA3B,EAAAO,UAAAoB,GACAjC,EAAAL,EAAAW,GACA4B,EAAAlC,EAAAxF,OACAE,EAAA,EAAAA,EAAAwH,EAAAxH,IAAA,CACA,IAAAuF,EAAAD,EAAAtF,GACAkF,QAAA,IAAA7E,EAAAkF,KAAAlF,EAAAkF,GAAAK,EAAAL,IAGA,OAAAlF,IAmaAoH,KA5SA,SAAApH,EAAAqH,GACA,IAAA5H,EAAAyF,EAAAvF,EAAAqB,EAEA,GAAAhB,EAGA,QALAsH,KAGA7H,EAAAO,EAAAP,SAIA,IAAAyF,KAAAlF,EACA,GAAAA,EAAA2E,eAAAO,KACAlE,EAAAhB,EAAAkF,IACA,IAAAmC,EAAA1G,KAAAK,EAAAkE,EAAAlE,IACA,WAMA,IAAArB,EAAA,EAAAA,EAAAF,IACAuB,EAAAhB,EAAAL,IACA,IAAA0H,EAAA1G,KAAAK,EAAArB,EAAAqB,IAFArB,KASA,OAAAyG,MAmRAmB,OAhRA,SAAAjC,GACA,IAAAE,EAAAI,EAAAxB,EAAAzD,KAAAmF,UAAA,GACA,kBAAAR,IACAE,EAAAF,EACAA,EAAAM,EAAAG,SAEA,GAAAH,EAAAnG,SACAmG,GAAAN,GACAA,EAAAc,MAKA,OAHAR,EAAApF,QAAA,SAAAgH,GACAtB,EAAAZ,EAAAkC,EAAAhC,KAEAF,GAqQAF,IAAAA,EAEAqC,QA/LA,SAAAnB,EAAAC,GACA,OAAA9B,EAAA6B,EAAAC,IAgMAmB,SAhNA,SAAAC,EAAA3G,EAAA4G,EAAAC,GACAF,EAAAnG,EAAAmG,GAAAA,EAAAtB,EAAAsB,GACAC,EAAAA,IAAAC,EAAAxD,EAAAuD,GAAA,EAEA,IAAAnI,EAAAkI,EAAAlI,OACAmI,EAAA,IACAA,EAAAE,UAAArI,EAAAmI,EAAA,IAEA,OAAAvG,EAAAsG,GACAC,GAAAnI,GAAAkI,EAAAI,QAAA/G,EAAA4G,IAAA,IACAnI,GAAAuI,YAAAL,EAAA3G,EAAA4G,IAAA,GAwMAK,QA9LA,SAAArH,EAAAsH,GACA,IAAAjD,EAAAA,EAAAiD,GAAAzI,EAAAwF,EAAAxF,OACA,GAAA,MAAAmB,EAAA,OAAAnB,EAEA,IADA,IAAAO,EAAAkC,OAAAtB,GACAjB,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAuF,EAAAD,EAAAtF,GACA,GAAAuI,EAAAhD,KAAAlF,EAAAkF,MAAAA,KAAAlF,GAAA,OAAA,EAEA,OAAA,GAwLAiF,KAxQA,SAAAjF,GACA,GAAAoB,EAAApB,GAAA,SACA,IAAAiF,KACA,IAAA,IAAAC,KAAAlF,EAAAoF,EAAApF,EAAAkF,IAAAD,EAAAE,KAAAD,GACA,OAAAD,GAsQAiB,MAAAA,EAEAiC,KAzIA,SAAAnI,EAAAoI,EAAAC,GACA,IAAArI,EACA,OAAA,KAGA,IADA,IAAAsE,EAAA4B,KAAAlG,GACAL,EAAA,EAAAA,EAAAmG,UAAArG,OAAAE,IAAA,CACA,IAAA2I,EAAAxC,UAAAnG,GACA2I,KAAAtI,UACAsE,EAAAgE,GAGA,OAAAhE,GAgIAiE,KA3HA,SAAAvI,EAAAoI,EAAAC,GACA,IAAArI,EACA,OAAA,KAGA,IADA,IAAAsE,KACA3E,EAAA,EAAAA,EAAAmG,UAAArG,OAAAE,IAAA,CACA,IAAA2I,EAAAxC,UAAAnG,GACA2I,KAAAtI,IACAsE,EAAAgE,GAAAtI,EAAAsI,IAGA,OAAAhE,GAkHAkE,WA/GA,SAAAC,EAAAC,GACA,GAAArI,EAAAoI,GAAA,CACA,IAAAE,EAAAF,EAAAV,QAAAW,IACA,GAAAC,GACAF,EAAAG,OAAAD,EAAA,QAEA,GAAA1G,EAAAwG,GACA,IAAA,IAAAvD,KAAAuD,EACA,GAAAA,EAAAvD,IAAAwD,EAAA,QACAD,EAAAvD,GACA,MAKA,OAAAkB,MAkGA9B,OA/FA,SAAAtE,EAAAV,EAAAuJ,GACAxI,EAAAf,KACAA,EAAAA,EAAAE,MAAA,MAEA,IAAAC,EAAAH,EAAAG,OACA,IAAAA,EACA,OAAAsB,EAAA8H,GAAAA,EAAAlI,KAAAX,GAAA6I,EAEA,IAAA,IAAAlJ,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CACA,IAAAmJ,EAAA,MAAA9I,OAAA,EAAAA,EAAAV,EAAAK,SACA,IAAAmJ,IACAA,EAAAD,EACAlJ,EAAAF,GAEAO,EAAAe,EAAA+H,GAAAA,EAAAnI,KAAAX,GAAA8I,EAGA,OAAA9I,GAgFA+I,UA7EA,WACA,IAAAnD,EAAAD,EAAAQ,MAAAC,KAAAN,WAKA,OAHAF,EAAAK,QAAAzF,QAAA,SAAA+E,GACAF,EAAAO,EAAAN,OAAAC,EAAAK,EAAAJ,MAAA,KAEAI,EAAAN,QAyEAe,OAAAA,MAKAjH,OAAA,8BACA,aACA,SAAA4J,GACA,OAAAA,IAEA5J,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAA4J,GACA,OAAAA,IAEA5J,OAAA,+BACA,sBACA,sBACA,yBACA,SAAAU,EAAAoD,EAAA8F,GACA,IAAAC,EAAA7I,MAAAgC,UAAA6G,OACAC,EAAA9I,MAAAgC,UAAA8G,KACA1H,EAAA0B,EAAA1B,YAYA,SAAA2H,EAAAC,EAAAC,EAAAzB,EAAA0B,GAIA,IAHA,IAAA7J,EAAA2J,EAAA3J,OACAyH,EAAAU,GAAA0B,EAAA,GAAA,GAEAA,EAAApC,MAAAA,EAAAzH,GACA,GAAA4J,EAAAD,EAAAlC,GAAAA,EAAAkC,GACA,OAAAlC,EAGA,OAAA,EAiCA,SAAAqC,EAAAvI,GACA,OAAAA,GAAAA,EAcA,SAAAwI,EAAAJ,GACA,GAAA5H,EAAA4H,GAAA,CAEA,IADA,IAAA9E,KACA3E,EAAA,EAAAA,EAAAyJ,EAAA3J,OAAAE,IAAA,CACA,IAAA+I,EAAAU,EAAAzJ,GACA,GAAA6B,EAAAkH,GACA,IAAA,IAAAe,EAAA,EAAAA,EAAAf,EAAAjJ,OAAAgK,IACAnF,EAAAa,KAAAuD,EAAAe,SAGAnF,EAAAa,KAAAuD,GAGA,OAAApE,EAEA,OAAA8E,EAuGA,OAAAtJ,EAAAC,OAAA,gBACAoJ,cAAAA,EAEAnB,YA9JA,SAAAoB,EAAApI,EAAA4G,GACA,GAAA5G,GAAAA,EACA,OAAAmI,EAAAC,EAAAG,EAAA3B,GAEA,IAAAV,EAAAU,EAAA,EACAnI,EAAA2J,EAAA3J,OAEA,OAAAyH,EAAAzH,GACA,GAAA2J,EAAAlC,KAAAlG,EACA,OAAAkG,EAGA,OAAA,GAoJAwC,QArIA,SAAAN,GACA,OAAAH,EAAAtI,KAAAyI,EAAA,SAAAV,GACA,OAAA,MAAAA,KAqIAiB,MAAA,SAAAlB,EAAAmB,GACA,OAAAA,EACAnB,EAAArE,MAAA,EAAAwF,GAEAnB,EAAA,IAIAQ,OAzIA,SAAAG,EAAAS,GACA,OAAAZ,EAAAtI,KAAAyI,EAAAS,IA0IAX,KArBA,SAAAE,EAAAS,GACA,OAAAX,EAAAvI,KAAAyI,EAAAS,IAsBAL,QAAAA,EAEAM,KAvHA,SAAAV,EAAA/B,GACA,IAAA0C,KAQA,OANAf,EAAA5B,KAAAgC,EAAA,SAAAzJ,EAAA+I,GACArB,EAAAqB,EAAA/I,IACAoK,EAAA5E,KAAAuD,KAIAqB,GAgHAC,QA7GA,SAAAtB,EAAAU,GACA,IAAAA,EACA,OAAA,EAEA,IAAAzJ,EAEA,GAAAyJ,EAAArB,QACA,OAAAqB,EAAArB,QAAAW,GAGA/I,EAAAyJ,EAAA3J,OACA,KAAAE,KACA,GAAAyJ,EAAAzJ,KAAA+I,EACA,OAAA/I,EAIA,OAAA,GA8FAsK,UA3FA,SAAAjK,EAAAkK,EAAAC,GACA,GAAA3I,EAAAxB,GACA,OAAAmK,OAAAC,OAAAhK,MAAAgC,UAAAgC,MAAAzD,KAAAX,EAAAkK,GAAA,IAIA,OAAAlK,IAuFAqK,MA7DA,SAAAV,EAAAW,GACA,IAAAnD,EAAAmD,EAAA7K,OACAE,EAAAgK,EAAAlK,OACAgK,EAAA,EAEA,GAAA,iBAAAtC,EACA,KAAAsC,EAAAtC,EAAAsC,IACAE,EAAAhK,KAAA2K,EAAAb,QAGA,UAAA/D,IAAA4E,EAAAb,IACAE,EAAAhK,KAAA2K,EAAAb,KAMA,OAFAE,EAAAlK,OAAAE,EAEAgK,GA8CAnJ,QArFA,SAAA+J,EAAAC,GACA,GAAAD,EAAA/J,QAAA,OAAA+J,EAAA/J,QAAAgK,GACA,IAAA,IAAA7K,EAAA,EAAAA,EAAA4K,EAAA9K,OAAAE,IAAA6K,EAAAD,EAAA5K,GAAAA,IAqFA8K,IAlFA,SAAAC,EAAArD,GACA,IAAArG,EACArB,EAAAuF,EADAmB,KAEA,GAAA7E,EAAAkJ,GACA,IAAA/K,EAAA,EAAAA,EAAA+K,EAAAjL,OAAAE,IAEA,OADAqB,EAAAqG,EAAA1G,KAAA+J,EAAA/K,GAAA+K,EAAA/K,GAAAA,KACA0G,EAAAlB,KAAAnE,QAGA,IAAAkE,KAAAwF,EAEA,OADA1J,EAAAqG,EAAA1G,KAAA+J,EAAAxF,GAAAwF,EAAAxF,GAAAA,KACAmB,EAAAlB,KAAAnE,GAEA,OAAAwI,EAAAnD,IAuEAsE,OA/CA,SAAAvB,EAAA/B,EAAAuD,GACA,OAAAxK,MAAAgC,UAAAuI,OAAAhK,KAAAyI,EAAA/B,EAAAuD,IAgDAC,KA7CA,SAAAzB,GACA,OAAAH,EAAAtI,KAAAyI,EAAA,SAAAV,EAAAC,GACA,OAAAS,EAAArB,QAAAW,IAAAC,SA+CAvJ,OAAA,6BACA,YACA,SAAA0L,GACA,OAAAA,IAEA1L,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,6BACA,sBACA,sBACA,wBACA,wBACA,SAAAU,EAAAoD,EAAA8F,EAAA8B,GACA,IAAAD,EAAAC,EAAAD,KACAzF,EAAA4D,EAAA5D,IACAc,EAAA8C,EAAA9C,MACA7F,EAAA6C,EAAA7C,QACAqB,EAAAwB,EAAAxB,UAuDA,IAsLAqJ,EAtLA,WAsGA,SAAAC,IACA,OAAA5E,KAAA6E,WACA7E,KAAA6E,WAAA9E,MAAAC,KAAAN,WACAM,KAAA8E,KACA9E,KAAA8E,KAAA/E,MAAAC,KAAAN,gBADA,EAKA,OAAA,SAAAiF,EAAAI,EAAAC,EAAAC,EAAAC,GACAjL,EAAA+K,KACAE,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEAA,EAAAA,GAAAlJ,OAEAR,EAAA2J,KAAAhL,EAAAgL,KACAC,EAAAD,EACAA,GAAA,GAGA,IAAAE,EAAAH,EAEAC,IACAA,EAlFA,SAAAG,EAAAH,GACA,IAAA/G,KAmCA,OAjCA+G,EAAA7K,QAAA,SAAA0F,GACA,GAAAd,EAAAc,EAAA,cACA,MAAA,IAAAuF,MAAA,iBAGA,IADA,IAAAC,KACAxF,GACAwF,EAAAC,QAAAzF,GACAA,EAAAA,EAAA0F,WAEAtH,EAAAA,EAAA8F,OAAAsB,MAKApH,GAFAA,EAAAuG,EAAAvG,IAEA2E,OAAA,SAAA/C,GAEA,IADA,IAAA2F,EAAAL,EACAK,GAAA,CACA,GAAA3F,IAAA2F,EACA,OAAA,EAEA,GAAAzG,EAAAyG,EAAA,cAEA,IADA,IAAAC,EAAAD,EAAA,WACAlM,EAAA,EAAAA,EAAAmM,EAAArM,OAAAE,IACA,GAAAmM,EAAAnM,KAAAuG,EACA,OAAA,EAIA2F,EAAAA,EAAAD,WAEA,OAAA,KAGAnM,OAAA,GACA6E,EA6CAyH,CAAAR,EAAAF,IAGAA,IACAE,EA3CA,SAAAC,EAAAH,GAEA,IADA,IAAAW,EAAAR,EACA7L,EAAA,EAAAA,EAAA0L,EAAA5L,OAAAE,IAAA,CACA,IAAAsM,EAAA,IAAAC,SACAD,EAAA7J,UAAAF,OAAAiK,OAAAH,EAAA5J,WACA6J,EAAAG,UAAAJ,EACAC,EAAAL,WAAA,KACA1F,EAAA+F,EAAA7J,UAAAiJ,EAAA1L,GAAAyC,WACA6J,EAAA7J,UAAAiK,UAAAhB,EAAA1L,GACAqM,EAAAC,EAGA,OAAAD,EA+BAM,CAAAf,EAAAF,IAGA,IAAAkB,EAAApB,EAAAoB,WAAA,GACAf,EAAA,IAAAU,SACA,mBAAAK,EAAA,6KADA,GA4CA,OA/BAf,EAAApJ,UAAAF,OAAAiK,OAAAZ,EAAAnJ,WAGAoJ,EAAApJ,UAAAvB,YAAA2K,EACAA,EAAAI,WAAAR,EAGAI,EAAAY,UAAAb,EAGAC,EAAAR,eACAQ,EAAAR,aAAAA,GAGAK,IACAG,EAAAgB,WAAAnB,GAGAG,EAAAiB,UACAjB,EAAAiB,QAAA,SAAAtB,EAAAG,GACA,OAtKA,SAAAE,EAAAL,EAAAG,GAEA,IAAAoB,EAAAlB,EAAApJ,UACAuK,EAAAnB,EAAAI,WAAAxJ,UACAwK,EAAAtB,GAAAA,EAAAsB,YACAtB,GAAAA,EAAAuB,UAEA,IAAA,IAAAjN,KAAAuL,EACA,GAAA,gBAAAvL,EAAA,CAKA,IAAAkJ,EAAAqC,EAAAvL,GACA,mBAAAuL,EAAAvL,GACA8M,EAAA9M,GAAAkJ,EAAAkC,cAAA4B,GAAA,mBAAAD,EAAA/M,GAkBAkJ,EAjBA,SAAAlJ,EAAA4K,EAAAsC,GACA,OAAA,WACA,IAAAC,EAAA3G,KAAA4G,UAIA5G,KAAA4G,UAAAF,EAIA,IAAAG,EAAAzC,EAAArE,MAAAC,KAAAN,WAIA,OAFAM,KAAA4G,UAAAD,EAEAE,GAdA,CAgBArN,EAAAkJ,EAAA6D,EAAA/M,IAEAsD,EAAAjB,cAAA6G,IAAA,OAAAA,GAAAA,EAAA,IACA5G,OAAAgL,eAAAR,EAAA9M,EAAAkJ,GAEA4D,EAAA9M,GAAAkJ,EAGA,OAAA0C,EA8HA2B,CAAA/G,KAAA+E,EAAAG,KAGAE,EAAA4B,UACA5B,EAAA4B,QAAA,SAAAjC,EAAAE,EAAAC,GACA,OAAAP,EAAAI,EAAA/E,KAAAiF,EAAAC,KAIAE,EAAAiB,QAAAtB,EAAAG,GAEAE,GAIA6B,GAEA,OAAAvN,EAAAC,OAAA,cAAAgL,KAEA3L,OAAA,4BACA,WACA,SAAAkO,GACA,OAAAA,IAEAlO,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,iCACA,sBACA,sBACA,wBACA,uBACA,uBACA,SAAAU,EAAAoD,EAAA8F,EAAA8B,EAAAwC,GACA,IAAAlJ,EAAAhE,MAAAgC,UAAAgC,MACAsF,EAAAoB,EAAApB,QACAhI,EAAAwB,EAAAxB,UACAO,EAAAiB,EAAAjB,cACAlB,EAAAmC,EAAAnC,WACAM,EAAA6B,EAAA7B,SACAP,EAAAoC,EAAApC,cACAoF,EAAA8C,EAAA9C,MACA6C,EAAAC,EAAAD,UAEA,SAAAwE,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAAhO,MAAA,KACA,OACAI,KAAA6N,EAAA,GACA/N,GAAA+N,EAAArJ,MAAA,GAAAsJ,KAAA,MAIA,IAAAC,EAAAL,GACAM,GAAA,SAAAC,EAAAC,EAAAC,EAAA1G,EAAA2G,EAAAC,GACA,IAAAC,EAAA9H,KACA+H,EAAA/H,KAAA+H,OAAA/H,KAAA+H,SAEA,OAAAlM,EAAA4L,IACAG,EAAA3G,EACAD,KAAAyG,EAAA,SAAAtN,EAAAiK,GACA0D,EAAAN,GAAArN,EAAAuN,EAAAC,EAAAvD,EAAAwD,EAAAC,KAEA7H,OAGA/E,EAAAyM,IAAA/M,EAAAsG,KACA2G,EAAA3G,EACAA,EAAA0G,EACAA,EAAAD,EACAA,OAAApI,GAGA3E,EAAAgN,KACAC,EAAA3G,EACAA,EAAA0G,EACAA,EAAA,MAGA1M,EAAAwM,KACAA,EAAAA,EAAArO,MAAA,OAGAqO,EAAArN,QAAA,SAAAgN,GACA,IAAAY,EAAAb,EAAAC,GACA5N,EAAAwO,EAAAxO,KACAF,EAAA0O,EAAA1O,IAEAyO,EAAAvO,KAAAuO,EAAAvO,QAAAuF,MACAqF,GAAAnD,EACAyG,SAAAA,EACAC,KAAAA,EACAC,IAAAA,EACAtO,GAAAA,EACAuO,IAAAA,MAIA7H,OAGA6H,IAAA,SAAAJ,EAAAC,EAAAC,EAAA1G,EAAA2G,GACA,OAAA5H,KAAAwH,GAAAC,EAAAC,EAAAC,EAAA1G,EAAA2G,EAAA,IAGAK,KAAA,SAAAC,GACA,IAAAlI,KAAA+H,KACA,OAAA/H,KAGA,IAAA8H,EAAA9H,KAEA/E,EAAAiN,KACAA,EAAA,IAAAC,YAAAD,IAGApM,OAAAgL,eAAAoB,EAAA,UACAtN,MAAAoF,OAGA,IAAAR,EAAAxB,EAAAzD,KAAAmF,UAAA,GA2CA,OAzCAF,EADAlE,EAAAkE,IACA0I,GAAAlE,OAAAxE,IAEA0I,IAEAA,EAAA/N,MAAA+N,EAAA1O,KAAA,OAAAY,QAAA,SAAAgO,GACA,IAAAJ,EAAAb,EAAAiB,GACA5O,EAAAwO,EAAAxO,KACAF,EAAA0O,EAAA1O,GAEA+O,EAAAP,EAAAC,KAAAvO,GACA,GAAA6O,EAAA,CAOA,IAHA,IAAAC,EAAAD,EAAAhP,OACAkP,GAAA,EAEAhP,EAAA,EAAAA,EAAA+O,EAAA/O,IAAA,CACA,IAAAiP,EAAAH,EAAA9O,KACAD,GAAAkP,EAAAlP,IAAAkP,EAAAlP,GAAAkD,WAAAlD,MAGA4O,EAAAP,KACAa,EAAAb,OACAO,EAAAP,KAAA7H,KAAA0I,EAAAb,KAAAO,EAAAP,OAGAO,EAAAP,KAAAa,EAAAb,MAAA,KAEAa,EAAApE,GAAArE,MAAAyI,EAAAZ,IAAApI,GACAgJ,EAAAX,MACAQ,EAAA9O,GAAA,KACAgP,GAAA,IAIAA,IACAT,EAAAC,KAAAK,GAAA9E,EAAA+E,OAIArI,MAGAyI,SAAA,SAAArB,GACA,IAAAsB,GAAA1I,KAAA+H,OAAA/H,KAAA2I,aAAAvB,OACA,OAAAsB,EAAArP,OAAA,GAGAuP,SAAA,SAAAhP,EAAAwN,EAAAnG,EAAA4G,GACA,IAAAjO,EACA,OAAAoG,KAIA/E,EAAAgG,KACAA,EAAAjB,KAAAiB,IAGA4G,EACAjO,EAAAiO,IAAAT,EAAAnG,EAAAjB,MAEApG,EAAA4N,GAAAJ,EAAAnG,EAAAjB,MAOA,IAHA,IACA6I,EADAC,EAAA9I,KAAA+I,eAAA/I,KAAA+I,iBAGAxP,EAAA,EAAAA,EAAAuP,EAAAzP,OAAAE,IACA,GAAAuP,EAAAvP,GAAAK,KAAAA,EAAA,CACAiP,EAAAC,EAAAvP,GACA,MAGAsP,GACAC,EAAA/J,KACA8J,GACAjP,IAAAA,EACA6N,YAIA,IAAAuB,EAAAH,EAAApB,OACAwB,EAAAD,EAAA5B,GAAA4B,EAAA5B,OAKA,OAJA,GAAA6B,EAAAtH,QAAAV,IACAgI,EAAAlK,KAAAkC,GAGAjB,MAGAkJ,aAAA,SAAAtP,EAAAwN,EAAAnG,GACA,OAAAjB,KAAA4I,SAAAhP,EAAAwN,EAAAnG,EAAA,IAGAkI,IAAA,SAAA1B,EAAAxG,GACA,IAAA8G,EAAA/H,KAAA+H,OAAA/H,KAAA+H,SAuCA,OAtCA9M,EAAAwM,KACAA,EAAAA,EAAArO,MAAA,OAGAqO,EAAArN,QAAA,SAAAgN,GACA,IAAAY,EAAAb,EAAAC,GACA5N,EAAAwO,EAAAxO,KACAF,EAAA0O,EAAA1O,GAEA8P,EAAArB,EAAAvO,GAEA,GAAA4P,EAAA,CACA,IAAAC,KAEA,GAAApI,GAAA3H,EACA,IAAA,IAAAC,EAAA,EAAA+O,EAAAc,EAAA/P,OAAAE,EAAA+O,EAAA/O,IAEA0H,GAAAmI,EAAA7P,GAAA6K,KAAAnD,GAAAmI,EAAA7P,GAAA6K,GAAAkF,IAAArI,EACAoI,EAAAtK,KAAAqK,EAAA7P,KAIAD,GAAA8P,EAAA7P,GAAAD,IAAA,GAAA8P,EAAA7P,GAAAD,GAAAqI,QAAArI,IACA+P,EAAAtK,KAAAqK,EAAA7P,IAMA8P,EAAAhQ,OACA0O,EAAAvO,GAAA6P,SAEAtB,EAAAvO,MAMAwG,MAEAuJ,WAAA,SAAA3P,EAAAwN,EAAAnG,GACA,IAAA6H,EAAA9I,KAAA+I,aACA,IAAAD,EACA,OAAA9I,KAEA,IAAA,IAAAzG,EAAA,EAAAA,EAAAuP,EAAAzP,OAAAE,IAAA,CACA,IAAAsP,EAAAC,EAAAvP,GAEA,IAAAK,GAAAA,GAAAiP,EAAAjP,IAAA,CAIA,IAAAoP,EAAAH,EAAApB,OACA,IAAA,IAAAW,KAAAY,EACA,IAAA5B,GAAAA,GAAAgB,EAAA,CAMA,IAFA,IAAAa,EAAAD,EAAAZ,GAEA/E,EAAA,EAAAA,EAAA4F,EAAA5P,OAAAgK,IACApC,GAAAA,GAAAgI,EAAA1P,KACAsP,EAAAjP,IAAAuP,IAAAf,EAAAa,EAAA1P,GAAAyG,MACAiJ,EAAA1P,GAAA,MAIA0P,EAAAD,EAAAZ,GAAA9E,EAAA2F,GAEAvO,EAAAuO,KACAD,EAAAZ,GAAA,MAKA1N,EAAAsO,KACAF,EAAAvP,GAAA,OASA,OALAuP,EAAA9I,KAAA+I,aAAAzF,EAAAwF,GACApO,EAAAoO,KACA9I,KAAA+I,aAAA,MAGA/I,MAGAwJ,QAAA,WACA,OAAAxJ,KAAAiI,KAAAlI,MAAAC,KAAAN,cASA,OALA6H,EAAAkC,YAAA,SAAAtP,EAAA4K,GACA,IAAAmD,EAAA,IAAAC,YAAAhO,EAAA4K,GACA,OAAApC,EAAAuF,EAAAnD,IAGArL,EAAAC,OAAA,gBAAA4N,KAGAvO,OAAA,iCACA,sBACA,aACA,SAAAU,EAAA6N,GACA,OAAA7N,EAAAC,OAAA,gBAAA4N,KAEAvO,OAAA,8BACA,YACA,aACA,SAAAuO,GACA,OAAAA,IAEAvO,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAA0Q,GACA,OAAAA,IAEA1Q,OAAA,uCACA,yBACA,SAAAU,GACA,OAAAA,EAAAC,OAAA,yBAEAX,OAAA,sCACA,wBACA,iBACA,SAAA0Q,EAAAC,GAEA,IAAAC,EAAAD,EAAAC,WAAAF,EAAA1C,SAEAb,UAAA,aAEA0D,OAAA,WACA,MAAA,IAAAxE,MAAA,sBAGAyE,MAAA,WASA,OAFA9J,KAAA6J,SACA7J,KAAAwJ,QAAA,iBACAxJ,MAOA+J,MAAA,WAGA,IAFA,IAAAC,EAAA,EACAC,EAAAjK,KAAAkK,YACAD,EAAAE,WACAH,IAEA,OAAAA,GAGA5P,QAAA,SAAAqJ,EAAA2G,GAgBA,IADA,IAAAH,EAAAjK,KAAAkK,WACAD,EAAAE,WAAA,CACA,IAAA7H,EAAA2H,EAAAI,OACA5G,EAAAlJ,KAAA6P,GAAA9H,EAAAA,GAEA,OAAAtC,MAIAkK,SAAA,WACA,MAAA,IAAA7E,MAAA,sBAGAiF,QAAA,WASA,IAFA,IAAAjI,KACA4H,EAAAjK,KAAAkK,YACAD,EAAAE,WACA9H,EAAAtD,KAAAkL,EAAAI,QAEA,OAAAhI,KAIA,OAAAuH,IAIA5Q,OAAA,+BACA,gBACA,gBACA,SAAA2Q,EAAAC,GAEA,IAAAW,EAAAZ,EAAAY,IAAAX,EAAA5C,SAEAb,UAAA,MAEAqE,eAAA,WACA,OAAAxK,KAAAyK,QAGAZ,OAAA,WACA7J,KAAAyK,WAGAC,iBAAA,SAAAC,EAAA1J,GACA,IAAAoB,EAAArC,KAAAwK,iBACA,OAAAnI,EAAAQ,OAAA,SAAA/D,GACA,QAAAA,EAAA8L,MAAAD,KACA1J,GAAAA,EAAAnC,IACA,MAOA+L,IAAA,SAAAC,EAAAC,GAgBA,GAAA,iBAAA,EACA,KAAA,0BAOA,IAAA1I,EAAArC,KAAAwK,iBACA,OAAAnI,EAAAyI,IAGAZ,SAAA,WACA,IAAA3Q,EAAA,EACA,OACA4Q,QAAA,WACA,OAAA5Q,EAAAyG,KAAAyK,OAAApR,QAEAgR,KAAA,WACA,IAAAvL,EAAAkB,KAAAyK,OAAAlR,KACA,OAAAyG,KAAAyK,OAAA3L,GAAAA,MAKAkM,IAAA,SAAAF,EAAAlQ,GAeA,GAAA,iBAAA,EACA,KAAA,0BASA,IAAAyH,EAAArC,KAAAwK,kBACA,GAAAnI,EAAAV,QAAAmJ,IACAzI,EAAAtD,KAAA+L,GAEA,IAAAG,EAAA5I,EAAAyI,GACA,GAAAG,IAAArQ,EAAA,CACAyH,EAAAyI,GAAAlQ,EACA,IAAAsQ,KACAA,EAAAJ,IACAtR,KAAAsR,EACAlQ,MAAAA,EACAqQ,SAAAA,GAEAjL,KAAAwJ,QAAA,WACA7B,KAAAuD,IAGA,OAAAlL,MAIAmL,OAAA,SAAAL,GAWA,GAAA,iBAAA,EACA,KAAA,0BAEA,IAAAzI,EAAArC,KAAAwK,iBACAjI,EAAAF,EAAAV,QAAAmJ,GACAvI,GAAA,WACAF,EAAAyI,UACAzI,EAAAE,KAIA6I,aAAA,SAAAT,EAAA1J,GAeA,IAAAoB,KACAyF,EAAA9H,KAMA,OALAA,KAAA0K,iBAAAC,EAAA,SAAA7L,GACA,IAAAwD,EAAAwF,EAAA+C,IAAA/L,GACAmC,GAAAA,EAAAqB,GACAD,EAAAtD,KAAAuD,KAEAD,GAGAgJ,eAAA,SAAAV,GAWA,IAAA7C,EAAA9H,KACAA,KAAA0K,iBAAAC,EAAA,SAAA7L,GACAgJ,EAAAqD,OAAArM,MAIAwM,QAAA,WASA,IAFA,IAAAjJ,EAAArC,KAAAwK,iBAEAjR,EAAA,EAAAA,EAAA8I,EAAAhJ,OAAAE,IAAA,CACA,IAAAuF,EAAAuD,EAAA9I,GACAgS,MAAAzM,GAAAuD,EAAAvD,GAEA,OAAAyM,OAGArR,SAAA,SAAAsR,GAYA,IAAAnJ,EAAArC,KAAAwK,iBAEA,OAAAnI,EAAAiF,KAAAkE,GAAA,MAGA1G,KAAA,SAAA6C,GACA,IAAAtF,EAAArC,KAAAyK,UACA,IAAA,IAAAjR,KAAAmO,EACAtF,EAAAtD,KAAAvF,GACA6I,EAAA7I,GAAAmO,EAAAnO,MAKA,OAAA+Q,IAIAvR,OAAA,mCACA,gBACA,SACA,SAAA2Q,EAAA8B,GAEA,IAAAC,EAAA/B,EAAA+B,QAAAD,EAAAzE,YAGA,OAAA0E,IAEA1S,OAAA,sCACA,wBACA,UACA,SAAA0Q,EAAAiC,GAEA,IAAAC,EAAAlC,EAAA1C,SACAb,UAAA,UAGA0F,UAAA,SAAAC,EAAAtS,EAAA4K,EAAAc,KAIA6G,cAAA,aAIAC,aAAA,SAAAF,EAAAtS,OAMA,OAAAmS,EAAAC,cAAAA,IAKA5S,OAAA,+BACA,wBACA,wBACA,kCACA,SACA,mBACA,SAAA4J,EAAA8G,EAAAgC,EAAAC,EAAAM,GAEA,IAAAC,EAAAxC,EAAA1C,SACAb,UAAA,SAEA3M,KAAA,GAEAsS,SAAA,GAEAK,KAAA,GAEAC,QAAA,GAEAC,KAAA,GAEAC,SAAA,GAEAC,OACA1B,IAAA,WACA,OAAA7K,KAAAwM,SAAAxM,KAAAwM,OAAA,IAAAd,GACAe,SAAA,EACAC,UAAA,OAKA7H,WAAA,SAAAK,GACAA,GACAtC,EAAA9C,MAAAE,KAAAkF,IAIAyH,MAAA,aASAC,QAAA,SAAAnN,GACAO,KAAA6M,UACA7M,KAAA6M,SAAApN,GAEAO,KAAAwJ,QAAA,YACA/J,OAAAA,OAMA,OAAAkM,EAAAO,OAAAA,IAKAlT,OAAA,wBACA,wBACA,SAAA0L,GACA,OAAAA,IAEA1L,OAAA,uBACA,uBACA,SAAAkO,GACA,OAAAA,IAEAlO,OAAA,4BACA,WACA,SAAAkO,GACA,IA4JA4F,EAAA,SAAAC,GAuBA,IAAAA,EACA,OAAAA,EAGA,IAAAC,IAAAD,EAAAE,KAKA,SAAAC,EAAAC,GAGAJ,EAAAI,GAAA,WACA,IAAA3N,EAAAE,UACAxB,EAAAkP,SAAAC,KAAAN,EAAA,SAAAA,GAEA,OAAAD,EAAA9S,MAAAgC,UAAAmR,GAAApN,MAAAgN,EAAAvN,MAIA,GAAA,YAAA2N,GAAAH,EACA,OAAA9O,GAaA,OA5BA8O,IACAD,EAAAjR,OAAAwR,SAAAP,IAmBAG,EAAA,WACAA,EAAA,UACAA,EAAA,OACA,MAAAH,EAAAQ,QACAR,EAAAQ,MAAAH,SAAAC,KAAAN,EAAA,SAAAA,GACA,OAAAA,EAAA1T,UAGA0T,GAGAS,EAAAtG,GACAf,UAAA,aAEAsH,YA3NA,SAAAC,EAAAxI,GA6CA,cAAAwI,GACA,QACA,MAAA,IAAArI,MAAA,+BAAAqI,GACA,IAAA,SAAA,IAAA,YACA,IAAAC,EAAAD,EACAA,EAAA,SAAAlT,GACA,IAAA,IAAAsE,KAAA6O,EAAA,CACA,IAAAC,EAAAD,EAAA7O,GACA,GAAA8O,GAAAA,EAAA7P,MAEA,IAAA6P,EAAA7P,KAAAvD,EAAAsE,GAAAtE,GACA,OAAA,OAEA,GAAAoT,GAAApT,EAAAsE,GACA,OAAA,EAGA,OAAA,GAEA,MACA,IAAA,SAEA,IAAAkB,KAAA0N,GACA,MAAA,IAAArI,MAAA,sBAAAqI,EAAA,uBAEAA,EAAA1N,KAAA0N,GAEA,IAAA,YAkDA,SAAAd,EAAA5J,GAEA,IAAA+J,EAhDA,SAAA5I,EAAAlD,EAAA4M,GAyBA,IAAAjT,EAAArB,EAAA,EAAAwH,EAAAoD,GAAAA,EAAA9K,QAAA,EAAAsK,KACA5C,GAAA,iBAAAoD,IAAAA,EAAAA,EAAA/K,MAAA,KACA,iBAAA6H,IAAAA,EAAA6M,MAAA7M,IAAA8M,QAAA9M,IACA,GAAA4M,EACA,KAAAtU,EAAAwH,IAAAxH,EACAqB,EAAAuJ,EAAA5K,GACA0H,EAAA1G,KAAAsT,EAAAjT,EAAArB,EAAA4K,IACAR,EAAA5E,KAAAnE,QAIA,KAAArB,EAAAwH,IAAAxH,EACAqB,EAAAuJ,EAAA5K,GACA0H,EAAArG,EAAArB,EAAA4K,IACAR,EAAA5E,KAAAnE,GAIA,OAAA+I,EAKAd,CAAAG,EAAA0K,GAEAM,EAAA9I,GAAAA,EAAA+I,KAmBA,GAlBAD,GACAjB,EAAAkB,KAAA,mBAAAD,EAAAA,EAAA,SAAA9N,EAAAC,GACA,IAAA,IAAA8N,EAAA1U,EAAA,EAAA0U,EAAAD,EAAAzU,GAAAA,IAAA,CACA,IAAA2U,EAAAhO,EAAA+N,EAAAE,WACAC,EAAAjO,EAAA8N,EAAAE,WAIA,GAFAD,EAAA,MAAAA,EAAAA,EAAAtQ,UAAAsQ,EACAE,EAAA,MAAAA,EAAAA,EAAAxQ,UAAAwQ,EACAF,GAAAE,EAGA,QAAAH,EAAAI,aAAA,MAAAH,GAAAA,EAAAE,IAAA,EAAA,EAGA,OAAA,IAIAlJ,IAAAA,EAAAoJ,OAAApJ,EAAA6E,OAAA,CACA,IAAAwD,EAAAR,EAAA1T,QACA0T,EAAAA,EAAA/O,MAAAkH,EAAAoJ,OAAA,GAAApJ,EAAAoJ,OAAA,IAAApJ,EAAA6E,OAAAwE,EAAAA,KACAhB,MAAAA,EAEA,OAAAR,EAGA,OADAH,EAAA4B,QAAAd,EACAd,GAoEA6B,WAAA,KAGA5D,IAAA,SAAA6D,GAOA,OAAA1O,KAAA2H,KAAA3H,KAAAc,MAAA4N,KAGAC,YAAA,SAAAnU,GACA,OAAAA,EAAAwF,KAAAyO,aAGAG,IAAA,SAAApU,EAAA0K,GACA,IAAAyC,EAAA3H,KAAA2H,KACA7G,EAAAd,KAAAc,MACA2N,EAAAzO,KAAAyO,WACAC,EAAAlU,EAAAiU,GAAAvJ,GAAA,OAAAA,EAAAA,EAAAwJ,GAAAD,KAAAjU,EAAAA,EAAAiU,GAAAI,KAAAC,SACA,GAAAJ,KAAA5N,EAAA,CAEA,GAAAoE,IAAA,IAAAA,EAAA6J,UACA,MAAA,IAAA1J,MAAA,yBAGAsC,EAAA7G,EAAA4N,IAAAlU,OAGAsG,EAAA4N,GAAA/G,EAAA5I,KAAAvE,GAAA,EAEA,OAAAkU,GAGAM,IAAA,SAAAxU,EAAA0K,GAGA,OAFAA,EAAAA,OAAA6J,WAAA,EAEA/O,KAAA4O,IAAApU,EAAA0K,IAGAiG,OAAA,SAAAuD,GAOA,IAAA5N,EAAAd,KAAAc,MACA6G,EAAA3H,KAAA2H,KACA,GAAA+G,KAAA5N,EAIA,OAHA6G,EAAAnF,OAAA1B,EAAA4N,GAAA,GAEA1O,KAAAiP,QAAAtH,IACA,GAGA+F,MAAA,SAAAA,EAAAxI,GA8BA,OAAA4H,EAAA9M,KAAAyN,YAAAC,EAAAxI,EAAAlF,CAAAA,KAAA2H,QAGAsH,QAAA,SAAAtH,GAKAA,EAAAtF,OAEArC,KAAAyO,WAAA9G,EAAAuH,YAAAlP,KAAAyO,WACA9G,EAAA3H,KAAA2H,KAAAA,EAAAtF,OAEArC,KAAA2H,KAAAA,EAEA3H,KAAAc,SACA,IAAA,IAAAvH,EAAA,EAAAwH,EAAA4G,EAAAtO,OAAAE,EAAAwH,EAAAxH,IACAyG,KAAAc,MAAA6G,EAAApO,GAAAyG,KAAAyO,aAAAlV,GAIAuL,KAAA,SAAAI,GACA,IAAA,IAAA3L,KAAA2L,EACAlF,KAAAzG,GAAA2L,EAAA3L,GAEAyG,KAAAiP,QAAAjP,KAAA2H,aAKA,OAAA6F,IAEAxU,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAA4F,EAAA6P,EAAA,EAqEA,SAAAC,EAAAjV,GACA,OAAA,SAAA+E,EAAAmQ,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAvQ,EAAAmQ,GACAI,GAAAA,EAAAvQ,QAAAA,IAEAA,EAAAmQ,GAAAG,EAAA,WAKA,IAJA,IAAAE,EAAAP,EAEA3P,EAAAE,UACAiQ,EAAAH,EAAAG,OACAA,GACAnQ,EAAAmQ,EAAAL,OAAAvP,MAAAC,KAAAR,IAAAA,EACAmQ,EAAAA,EAAAtF,KAGA,GAAAmF,EAAAI,OACA,IAAA7C,EAAAyC,EAAAI,OAAAN,OAAAtP,KAAAR,GAIA,IADA,IAAAqQ,EAAAL,EAAAK,MACAA,GAAAA,EAAAnB,GAAAgB,GAAA,CACA,GAAAG,EAAAN,iBAAA,CACA,IAAAO,EAAAD,EAAAP,OAAAvP,MAAAC,KAAAR,GAEAuN,EAAA+C,IAAAxQ,EAAAyN,EAAA+C,OAEA/C,EAAA8C,EAAAP,OAAA/U,KAAAyF,KAAA+M,EAAAvN,GAEAqQ,EAAAA,EAAAxF,KAEA,OAAA0C,GAEA0C,IACAD,EAAAI,QAAAN,OAAA,SAAApQ,EAAAM,GACA,OAAAiQ,EAAA1P,MAAAb,EAAAM,MAGAgQ,EAAAtQ,OAAAA,GAEA,IAAA6N,EA3GA,SAAAyC,EAAArV,EAAAmV,EAAAC,GACA,IAEAQ,EAFAC,EAAAR,EAAArV,GACAyV,EAAA,UAAAzV,EAEA,GAAAyV,EAAA,CACA,IAAAK,EAAAX,EAAA,WACA,OAAAU,EAAAV,OAAAtP,KAAAN,aAEAqQ,GACA5E,OAAA,WACA8E,IACAA,EAAAT,EAAAF,EAAA,OAGAA,OAAA,SAAApQ,EAAAM,GACA,OAAAyQ,EACAA,EAAAlQ,MAAAb,EAAAM,GACAwQ,EAAAV,OAAApQ,EAAAM,UAKAuQ,GACA5E,OAAA,WACA,GAAA4E,EAAAT,OAAA,CACA,IAAAU,EAAAD,EAAAC,SACA3F,EAAA0F,EAAA1F,KACAA,GAAA2F,GAGAA,EACAA,EAAA3F,KAAAA,EAEAmF,EAAArV,GAAAkQ,EAEAA,IACAA,EAAA2F,SAAAA,WARAR,EAAArV,GAaAqV,EAAAF,EAAAS,EAAAT,OAAA,OAGAZ,GAAAS,IACAG,OAAAA,EACAC,iBAAAA,GAGA,GAAAS,IAAAJ,EACA,GAAA,SAAAzV,EAAA,CAGA,KAAA6V,EAAA3F,OAAA2F,EAAAA,EAAA3F,QACA2F,EAAA3F,KAAA0F,EACAA,EAAAC,SAAAA,MACA,UAAA7V,IAEAqV,EAAArV,GAAA4V,EACAA,EAAA1F,KAAA2F,EACAA,EAAAA,SAAAD,QAIAP,EAAArV,GAAA4V,EAEA,OAAAA,EAyCAG,CAAAV,GAAAC,EAAAtV,EAAAmV,EAAAC,GAEA,OADAD,EAAA,KACAvC,GAIA,OAAArT,EAAAC,OAAA,gBACAkW,MAAAT,EAAA,SAEAQ,OAAAR,EAAA,UAEAO,OAAAP,EAAA,cAGApW,OAAA,6BACA,YACA,SAAAoW,GACA,OAAAA,IAEApW,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAAoW,GACA,OAAAA,IAEApW,OAAA,6BACA,sBACA,sBACA,yBACA,SAAAU,EAAAoD,EAAA8F,GACA,IAAA9C,EAAA8C,EAAA9C,MACA9B,EAAAhE,MAAAgC,UAAAgC,MACArD,EAAAmC,EAAAnC,WACAM,EAAA6B,EAAA7B,SAcA,SAAAkV,EAAA/L,EAAAgM,GACA,IAAA5Q,EAAA,KAAAE,WAAA1B,EAAAzD,KAAAmF,UAAA,GACA,GAAA/E,EAAAyJ,GAAA,CAIA,OAHA,WACA,OAAAA,EAAArE,MAAAqQ,EAAA5Q,EAAAA,EAAAwE,OAAAhG,EAAAzD,KAAAmF,YAAAA,YAGA,GAAAzE,EAAAmV,GACA,OAAA5Q,GACAA,EAAA+F,QAAAnB,EAAAgM,GAAAhM,GACA+L,EAAApQ,MAAA,KAAAP,IAEA2Q,EAAA/L,EAAAgM,GAAAhM,GAGA,MAAA,IAAAiM,UAAA,qBAiBA,IAAA/C,EAAA,WAEA,SAAAgD,KACA,OAAA,SAAA1W,EAAAmL,GACAuL,EAAAtU,UAAApC,EACA,IAAA+M,EAAA,IAAA2J,EAKA,OAJAA,EAAAtU,UAAA,KACA+I,GACAjF,EAAA6G,EAAA5B,GAEA4B,GAVA,GAiBA4J,GACAC,SAAA,kBACAC,YAAA,mBACAC,OAAA,oBAMAC,EAAA,OAKAC,GACAC,IAAA,IACAC,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAC,EAAA,+BA0FA,OAAA1X,EAAAC,OAAA,eACA0X,KAAAlB,EAEAmB,SAnJA,SAAAlN,EAAAmN,GACA,IAAAC,EACA,OAAA,WACA,IAAApB,EAAApQ,KAAAR,EAAAE,UAKA8R,GAAAC,aAAAD,GACAA,EAAAE,WALA,WACAF,EAAA,KACApN,EAAArE,MAAAqQ,EAAA5Q,IAGA+R,KA4IAjE,SAAAA,EAEAqE,MAtLA,SAAAvN,GACAwN,sBACAA,sBAAAxN,GAEAyN,cAAAzN,GAEA,OAAApE,MAkLA8R,OAnBA,SAAA7O,GACA,GAAA,mBAAAA,EACA,MAAA,IAAAoN,UAAA,uBAEA,OAAA,YAAA7Q,GACA,OAAAyD,EAAAlD,MAAAC,KAAAR,KAgBAuS,KAjLA,aAmLA5B,MAAAA,EAEA6B,WAAA,WACA,OAAA,GAGAC,YAAA,WACA,OAAA,GAGA1B,iBAAAA,EACA2B,SA/GA,SAAA/F,EAAAxE,EAAAwK,GACA,IAAAC,EACAD,EAAAvP,EAAAnE,YAAA0T,EAAA5B,GAGA,IAAA8B,EAAAC,SACAH,EAAAzB,QAAAC,GAAAxR,QACAgT,EAAA1B,aAAAE,GAAAxR,QACAgT,EAAA3B,UAAAG,GAAAxR,QACAmI,KAAA,KAAA,KAAA,KAGAxG,EAAA,EACA3B,EAAA,SACAgN,EAAAtO,QAAAwU,EAAA,SAAAzH,EAAA8F,EAAAD,EAAAD,EAAA1M,GAcA,OAbA3E,GAAAgN,EAAAnO,MAAA8C,EAAAgD,GACAjG,QAAAuT,EAAA,SAAAxG,GAAA,MAAA,KAAAgG,EAAAhG,KAEA8F,IACAvR,GAAA,cAAAuR,EAAA,kCAEAD,IACAtR,GAAA,cAAAsR,EAAA,wBAEAD,IACArR,GAAA,OAAAqR,EAAA,YAEA1P,EAAAgD,EAAA8G,EAAAvR,OACAuR,IAEAzL,GAAA,OAGAgT,EAAAI,WAAApT,EAAA,mBAAAA,EAAA,OAEAA,EAAA,4FAEAA,EAAA,gBAEA,IACAiT,EAAA,IAAAtM,SAAAqM,EAAAI,UAAA,MAAA,IAAApT,GACA,MAAA+I,GAEA,MADAA,EAAA/I,OAAAA,EACA+I,EAGA,GAAAP,EACA,OAAAyK,EAAAzK,EAAA3H,MAEA,IAAAkS,EAAA/B,EAAA,SAAAxI,GACA,OAAAyK,EAAA7X,KAAAyF,KAAA2H,EAAA3H,OACAA,MAGAwS,EAAAL,EAAAI,UAAA,MAGA,OAFAL,EAAA/S,OAAA,YAAAqT,EAAA,OAAArT,EAAA,IAEA+S,OAyDAlZ,OAAA,4BACA,WACA,SAAAyZ,GACA,OAAAA,IAEAzZ,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,uBACA,sBACA,yBACA,SAAA0L,EAAA+N,EAAA7P,GACA,aAEA,IAAA5E,EAAAhE,MAAAgC,UAAAgC,MACAmS,EAAAsC,EAAAtC,MACAtM,EAAAa,EAAAb,UACA3F,EAAA0E,EAAA1E,OACA4B,EAAA8C,EAAA9C,MAEAA,EAAA4S,QAAA1W,WACA2W,OAAA,SAAAC,GAIA,OADA5S,KAAAiN,KAAA2F,EAAAA,GACA5S,MAEA6S,KAAA,WACA,IAAA,IAAAtZ,EAAA,EAAAA,EAAAmG,UAAArG,OAAAE,IACAyG,KAAAiN,KAAAvN,UAAAnG,IAEA,OAAAyG,MAEA8S,KAAA,SAAAF,GAIA,OADA5S,KAAA+S,MAAAH,GACA5S,QAKA,IAAAoN,EAAA,WACA,IAAAtF,EAAA9H,KACAA,KAAAgT,QAAAC,EAAA,IAAAP,QAAA,SAAAQ,EAAAC,GACArL,EAAAsL,SAAAF,EACApL,EAAAuL,QAAAF,MAeA,SAAAF,EAAAD,GAEA,GAAAA,EAAAM,WAAA,OAAAN,EAGA,IAAAO,GAAA,EACAC,GAAA,EACAF,GAAA,EAGApV,EAAA8U,EAAA/F,KACA,SAAAwG,GAGA,OAFAH,GAAA,EACAC,GAAA,EACAE,GAEA,SAAAvL,GAGA,MAFAsL,GAAA,EACAD,GAAA,EACArL,IAIAhK,EAAAoV,WAAA,WAAA,OAAAA,GACApV,EAAAqV,UAAA,WAAA,OAAAA,GACArV,EAAAsV,WAAA,WAAA,OAAAA,GAEAtV,EAAAqO,MAAA,WACA,OAAA+G,EACA,WAEAE,EACA,WAEA,WAGA,IAAAE,KACArL,KAgDA,OA7CAnK,EAAA+O,KAAA,SAAA0G,EAAAC,EAAAC,GAIA,OAHAA,GACA7T,KAAA8T,SAAAD,GAEAZ,EAAAP,QAAA1W,UAAAiR,KAAA1S,KAAAyF,KACA2T,GAAA,SAAAnU,GACA,OAAAA,QAAAF,IAAAE,EAAAuU,QACAJ,EAAA5T,MAAAP,EAAAuU,QAAAvU,GAEAmU,EAAAnU,IAGAoU,GAAA,SAAApU,GACA,OAAAA,QAAAF,IAAAE,EAAAuU,QACAH,EAAA7T,MAAAP,EAAAuU,QAAAvU,GAEAoU,EAAApU,OAMAtB,EAAA4V,SAAA,SAAAlB,GAKA,OAJAc,EAAAtZ,QAAA,SAAAQ,GACAgY,EAAAhY,KAEAyN,EAAAtJ,KAAA6T,GACA5S,MAGA9B,EAAA8V,KAAA9V,EAAA+O,KAEA/O,EAAA+V,OAAA,SAAArZ,GACA,IAGA,OAFA8Y,EAAA3U,KAAAnE,GAEAyN,EAAAjO,QAAA,SAAAoO,GACA,OAAAA,EAAA5N,KAEA,MAAAsZ,GACAlU,KAAAmT,OAAAe,GAEA,OAAAlU,MAGA9B,EA+IA,OA3IAkP,EAAApR,UAAAkX,QAAA,SAAAtY,GACA,IAAA4E,EAAAxB,EAAAzD,KAAAmF,WACA,OAAAM,KAAAmU,YAAA,KAAA3U,IAGA4N,EAAApR,UAAAmY,YAAA,SAAA/D,EAAA5Q,GAKA,OAJAA,EAAAA,EAAAqE,EAAArE,OACAuU,QAAA3D,EACApQ,KAAAoT,SAAA5T,GACAQ,KAAAoU,WAAA,EACApU,MAGAoN,EAAApR,UAAAiY,OAAA,SAAArZ,GACA,IAAAyZ,EAAAnW,EAAA8B,KAAA,WAEA,OADAqU,EAAAJ,OAAArZ,GACAoF,MAGAoN,EAAApR,UAAAmX,OAAA,SAAAmB,GACA,IAAA9U,EAAAxB,EAAAzD,KAAAmF,WACA,OAAAM,KAAAuU,WAAA,KAAA/U,IAGA4N,EAAApR,UAAAuY,WAAA,SAAAnE,EAAA5Q,GAKA,OAJAA,EAAAA,EAAAqE,EAAArE,OACAuU,QAAA3D,EACApQ,KAAAqT,QAAA7T,GACAQ,KAAAwU,WAAA,EACAxU,MAGAoN,EAAApR,UAAAsX,WAAA,WACA,IAAAe,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAAf,cAGAlG,EAAApR,UAAAwX,WAAA,WACA,IAAAa,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAAb,cAGApG,EAAApR,UAAAuQ,MAAA,WACA,IAAA8H,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAA9H,SAGAa,EAAApR,UAAAiR,KAAA,SAAAhM,EAAAwT,EAAAC,GACA,IAAAL,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAApH,KAAAhM,EAAAwT,EAAAC,IAGAtH,EAAApR,UAAA8X,SAAA,SAAAY,GACA,IAAAL,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAAP,SAAAY,IAGAtH,EAAApR,UAAA+W,MAAA,SAAA0B,GACA,IAAAJ,EAAAnW,EAAA8B,KAAA,WACA,OAAAqU,EAAAtB,MAAA0B,IAIArH,EAAApR,UAAA2W,OAAA,WACA,IAAA0B,EAAAnW,EAAA8B,KAAA,WAEA,OADAqU,EAAA1B,OAAA5S,MAAAsU,EAAA3U,WACAM,MAGAoN,EAAApR,UAAA6W,KAAA,WACA,IAAAwB,EAAAnW,EAAA8B,KAAA,WAEA,OADAqU,EAAAxB,KAAA9S,MAAAsU,EAAA3U,WACAM,MAGAoN,EAAApR,UAAA8W,KAAA,SAAA2B,GACA,IAAAJ,EAAAnW,EAAA8B,KAAA,WAEA,OADAqU,EAAAvB,KAAA2B,GACAzU,MAIAoN,EAAAuH,IAAA,SAAA3R,GAEA,IAAA4R,EAAA,IAAAxH,EAEA,OADAsF,QAAAiC,IAAA3R,GAAAiK,KAAA2H,EAAA1B,QAAA7B,KAAAuD,GAAAA,EAAAzB,OAAA9B,KAAAuD,IACA1W,EAAA0W,EAAA,YAGAxH,EAAA7J,MAAA,SAAAP,GACA,OAAAiQ,EAAAP,QAAAmC,KAAA7R,KAIAoK,EAAAC,KAAA,SAAAyH,EAAA7T,EAAAwT,EAAAC,GACA,IAAAK,EAAAD,GAAA,mBAAAA,EAAA7H,KACA+H,EAAAD,GAAAD,aAAApC,QAEA,IAAAqC,EACA,OAAArV,UAAArG,OAAA,EACA4H,EAAAA,EAAA6T,GAAAA,GAEA,IAAA1H,GAAA8F,QAAA4B,GAEA,IAAAE,EAAA,CACA,IAAAC,EAAA,IAAA7H,EAAA0H,EAAAI,QACAJ,EAAA7H,KAAAkD,EAAA8E,EAAA/B,QAAA+B,GAAA9E,EAAA8E,EAAA9B,OAAA8B,GAAAA,EAAAhB,QACAa,EAAAG,EAAAjC,QAGA,OAAA/R,GAAAwT,GAAAC,EACAI,EAAA7H,KAAAhM,EAAAwT,EAAAC,GAEAI,GAGA1H,EAAA+F,OAAA,SAAAgC,GACA,IAAAP,EAAA,IAAAxH,EAEA,OADAwH,EAAAzB,OAAAgC,GACAP,EAAA5B,SASA5F,EAAAgI,UANAhI,EAAA8F,QAAA,SAAAvL,GACA,IAAAiN,EAAA,IAAAxH,EAEA,OADAwH,EAAA1B,QAAAnT,MAAA6U,EAAAlV,WACAkV,EAAA5B,SAMA5F,EAAA4F,QAAA,SAAA/R,GACA,IAAA2T,EAAA,IAAAxH,EAIA,OAFAnM,EAAA2T,EAAA1B,QAAA7B,KAAAuD,GAAAA,EAAAzB,OAAA9B,KAAAuD,GAAAA,EAAAd,SAAAzC,KAAAuD,IAEAA,EAAA5B,SAGA5F,IAEApU,OAAA,6BACA,mBACA,wBACA,cACA,SAAAU,EAAAkJ,EAAAwK,GACA,IAAApM,EAAA4B,EAAA5B,KAEAqU,GACAjI,SAAAA,EAEAkI,SAAA,SAAAnR,EAAA3E,EAAAoI,GACA,IAAA2N,KAQA,OAPA3N,EAAAA,GAAA,KACApI,EAAAA,MAEAwB,EAAAmD,EAAA,SAAA5K,EAAAkK,GACA8R,EAAAxW,KAAA0E,EAAA1D,MAAA6H,EAAApI,MAGA4N,EAAAuH,IAAAY,IAGAC,OAAA,SAAArR,EAAA3E,EAAAoI,GACA,IAAA2N,KACAX,EAAA,IAAAxH,EACAiH,EAAAO,EAAA5B,QAaA,OAXApL,EAAAA,GAAA,KACApI,EAAAA,MAEAoV,EAAA1B,UACAlS,EAAAmD,EAAA,SAAA5K,EAAAkK,GACA4Q,EAAAA,EAAApH,KAAA,WACA,OAAAxJ,EAAA1D,MAAA6H,EAAApI,KAEA+V,EAAAxW,KAAAsV,KAGAjH,EAAAuH,IAAAY,IAGAE,SAAA,SAAAtR,EAAA3E,EAAAoI,GACA,IAAAgN,EAAA,IAAAxH,EACAiH,EAAAO,EAAA5B,QAUA,OARApL,EAAAA,GAAA,KACApI,EAAAA,MAEAoV,EAAAT,YAAAvM,EAAApI,GAEAwB,EAAAmD,EAAA,SAAA5K,EAAAkK,GACA4Q,EAAAA,EAAApH,KAAAxJ,KAEA4Q,IAIA,OAAA3a,EAAAC,OAAA,cAAA0b,KAEArc,OAAA,4BACA,WACA,SAAAqc,GACA,OAAAA,IAEArc,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAqc,GACA,OAAAA,IAEArc,OAAA,qCACA,oBACA,SAAAU,GA2DA,OAAAA,EAAAC,OAAA,mBACA+b,kBA3DA,SAAAC,GAEA,IAAAC,EAAAD,EAAAvc,MAAA,KACAyc,EAAAtY,SAAAqY,EAAA,IAEA,GAAAE,MAAAD,GACA,OAAA,EAKA,OAAAD,EAAA,GAAAG,OAAAlY,QAAA,MAAA,KACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAgY,EACA,IAAA,QACA,IAAA,OACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,OAfA,KAeAA,EACA,IAAA,UACA,IAAA,SACA,IAAA,MACA,IAAA,KACA,IAAA,IACA,OAAA,IAAAA,EACA,IAAA,OACA,IAAA,MACA,IAAA,KACA,IAAA,KACA,IAAA,IACA,OAAA,MAAAA,EACA,IAAA,SACA,IAAA,QACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,IACA,IAAA,IACA,OAAA,OAAAA,EACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,KACA,IAAA,IACA,OAAA,QAAAA,EACA,QACA,OAAA,QAQA7c,OAAA,gCACA,eACA,SAAAgd,GACA,OAAAA,IAEAhd,OAAA,2BAAA,gCAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,2BACA,2BACA,SAAAgd,GACA,OAAAA,IAEAhd,OAAA,0BACA,gCACA,SAAAoU,GACA,OAAAA,IAEApU,OAAA,yBACA,yBACA,SAAA0Q,GACA,OAAAA,IAEA1Q,OAAA,uBACA,uBACA,SAAAyZ,GACA,OAAAA,IAEAzZ,OAAA,+BACA,oBACA,SAAAU,GAEA,IAAAuc,GACAC,WAAA,EACAC,OAAA,KACAC,OAAApW,KACAqW,QAAA,KACAC,KAAA,MAGA,iBAAAC,SAAAA,QAAAC,UAAAD,QAAAC,SAAAF,MAAAC,QAAAC,SAAAC,KACAR,EAAAE,QAAA,EACAF,EAAAC,WAAA,GAGAD,EAAAG,OAAA,WACA,MAAA,oBAAAA,QAAA,mBAAAA,OAIAA,OACA,oBAAAjb,OAEAA,OAEA,oBAAA2M,KAEAA,KAEA9H,KAdA,GAiBA,IAAA0W,EAAA,KAWA,GATA5a,OAAAgL,eAAAmP,EAAA,WAAA,WACA,IAAAS,EAAA,CACA,IAAAC,EAAA,oBAAAxb,OAAAyb,QAAA,gBAAAzb,OACAub,EAAAC,EAAAE,SAGA,OAAAH,IAGAT,EAAAC,UAAA,CAiBA,IAAAY,EAhBA,SAAAC,GACAA,EAAAA,EAAA1c,cAEA,IAAAuQ,EAAA,wBAAAoM,KAAAD,IACA,wBAAAC,KAAAD,IACA,qCAAAC,KAAAD,IACA,kBAAAC,KAAAD,IACAA,EAAApV,QAAA,cAAA,GAAA,gCAAAqV,KAAAD,OAGA,OACAV,QAAAzL,EAAA,IAAA,GACAqM,QAAArM,EAAA,IAAA,KAIAsM,CAAAC,UAAAC,WAEAf,EAAAJ,EAAAI,WAEAS,EAAAT,UACAA,EAAAS,EAAAT,UAAA,EACAA,EAAAY,QAAAH,EAAAG,SAIAZ,EAAAgB,OACAhB,EAAAiB,QAAA,EACAjB,EAAAiB,SACAjB,EAAAkB,QAAA,GAIA,OAAA7d,EAAAC,OAAA,eAAAsc,KAEAjd,OAAA,6BACA,YACA,SAAAid,GACA,OAAAA,IAEAjd,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,wBACA,wBACA,SAAAid,GACA,OAAAA,IAEAjd,OAAA,yBACA,yBACA,SAAAoF,GACA,OAAAA,IAEApF,OAAA,iCACA,oBACA,SAAAU,GAEA,IAAA8d,EAAA1b,OAAA2b,QACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAhH,IAAA,SACAiH,IAAA,SACAC,IAAA,WAEA,SAAAC,EAAAhO,GACA,OAAAwN,EAAAxN,GAEA,IAAAiO,EAAA,aA2GA,IAAAC,EAAA,EAWA,SAAAhG,EAAAxD,EAAA/G,GA0BA,IAEAnO,EAAA2e,EACAC,EAAAC,EAgBA5U,EACAY,EACAiU,EArBAC,EAAA7Y,UAAA8Y,OAwBA,OAvBAD,EAAAzK,MAAAY,KAAA6J,EAAAzK,MAAAY,IACAlV,EAAAkV,EAAAyJ,EAAA,YAAApa,KAAA2Q,GAAA6J,EAAA1N,IAAA6D,IAAAlV,EAAA,mBAAAkV,GACA0J,EAAA,EAAAC,GACA,UACAE,EAAAhG,SAAA,OAAAgG,EAAAhG,SAAA,iBAAA,wBACA,gBACA4F,EACAta,QAAA,MAAA,KAAAA,QAAA,MAAA,KACAA,QAAA,0BAAA,SACAA,QAAA,aAAA,IACAA,QAAA,WAAA,WAAA,MAAA,sBAAAua,EAAA,uBACAva,QAAA,qBAAA,gBACAA,QAAA,kBAAA,+BACAA,QAAA,iBAAA,wBACA,OAAA0a,EAAAhG,SAAA,GAAA,KAAA,qEACA/Y,EAAA,mDACAA,EAAA,MACAqE,QAAA,qBAAA,IACA4F,EAAA,IAAAqC,SAAAuS,GACAhU,GAAAqT,IAAA,QAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,SAAAhH,IAAA,UACAyH,EAAA,SAAAH,GAAA,OAAA,GAAAA,GAAAta,QAAA,aAAA,SAAAyL,GAAA,OAAAjF,EAAAiF,MACA,SAAAmP,GAAA,OAAAhV,EAAAlJ,KAAAge,EAAAnI,SAAAkI,WAAAA,EAAAF,KAAA,EAAAvR,IAAA,GAAA4R,MAAAA,OAEA9Q,EAAA4Q,EAAAzK,MAAAY,GAAA/G,GAAA4Q,EAAAzK,MAAAY,GA+DA,OA5DAwD,EAAApE,SAGAoE,EAAArH,IAAA,SAAA6D,GACA,OAAAmI,SAAA6B,eAAAhK,GAAAiK,WAwDAjf,EAAAC,OAAA,iBACAif,UAAA,SAAAjD,GACA,OAAAA,EAAA9X,QAAA,cAAA,SAAAqC,GACA,OAAAA,EAAA2Y,cAAAhb,QAAA,IAAA,OAIAib,UArOA,SAAAnD,GACA,OAAAA,EAAA9X,QAAA,MAAA,KACAA,QAAA,wBAAA,SACAA,QAAA,oBAAA,SACAA,QAAA,KAAA,KACAxD,eAkOA0e,iBA/NA,SAAAne,GACA,IACA,OAAAA,EACA,QAAAA,GACA,SAAAA,IACA,QAAAA,EAAA,MACAA,EAAA,IAAAA,GAAAA,EACA,UAAAmD,KAAAnD,GAAAoe,KAAA7R,MAAAvM,GACAA,GAAAA,EACA,MAAAsN,GACA,OAAAtN,IAuNA0d,WAnNA,SAAA3C,GACA,GAAA,MAAAA,EACA,MAAA,GAEA,IAAAA,EACA,OAAArb,OAAAqb,GAGA,OAAAA,EAAAzb,WAAA2D,QAAAoa,EAAAD,IA6MAiB,aA1MA,WACA,MAAA,uCAAApb,QAAA,QAAA,SAAAmM,GACA,IAAAkP,EAAA,GAAArK,KAAAC,SAAA,EACA2E,EAAA,MAAAzJ,EAAAkP,EAAA,EAAAA,EAAA,EACA,OAAAzF,EAAAvZ,SAAA,OAwMAif,WAAA,SAAAxD,GACA,OAAAA,EAAAyD,OAAA,GAAA/e,cAAAsb,EAAA3X,MAAA,IAGAqb,MAxEA,SAAA1D,GACA,OAAAA,EAAA9X,QAAA,QAAA,KAyEAyb,eAAA,SAAA1e,GACA,OAAAoe,KAAAO,UAAA3e,IAIA4e,WA3MA,SAAAtH,EAEA7N,EAEAoV,EAEA5L,GAmBA,SAAA6L,EAAA5a,EAAAuF,GACA,GAAAvF,EAAA8L,MAAA,MAAA,CACA,IAAA+O,EACAC,EAAA,SAAA/a,EAAAjF,GACA,IAAAigB,EAAAhb,EAAAe,MACA,OAAAia,EACAjgB,EAAAigB,GACAD,EAAA/a,EAAA8a,EAAA/f,EAAAigB,IADA,KAGAF,GAGA,OAAAC,EAAA9a,EAAA1F,MAAA,KAAA0gB,UAAAzV,GAEA,OAAAA,EAAAvF,GAIA,OAxBA+O,EAAAA,GAAA1S,OACAse,EAAAA,EACAtJ,MAAAtC,EAAA4L,GAAA,SAAAhG,GACA,OAAAA,GAqBAvB,EAAArU,QAAA,yCACA,SAAA+M,EAAA9L,EAAAib,GACA,IAAAnf,EAAA8e,EAAA5a,EAAAuF,GAIA,OAHA0V,IACAnf,EAAA8e,EAAAK,EAAAlM,GAAAtT,KAAAsT,EAAAjT,EAAAkE,IAEA2a,EAAA7e,EAAAkE,GAAA5E,cA4JA8f,QA5EA,SAAArE,GAIAA,GAHAA,EAAAA,EAAA9X,QAAA,aAAA,KAGAxD,cAKA,IAFA,IAAA4f,EAAA,qGAEA1gB,EAAA,EAAAwH,EAAAkZ,EAAA5gB,OAAAE,EAAAwH,EAAAxH,IACAoc,EAAAA,EAAA9X,QAAA,IAAAyU,OAAA2H,EAAAb,OAAA7f,GAAA,KAFA,qGAEA6f,OAAA7f,IAUA,OAJAoc,EAAAA,EAAA9X,QAAA,OAAA,KAEAA,QAAA,MAAA,MA8DAkY,KArNA,SAAAJ,GACA,OAAA,MAAAA,EAAA,GAAArb,OAAA0B,UAAA+Z,KAAAxb,KAAAob,IAsNAuE,SA7JA,SAAAC,GACA,IAAAzL,IAAAwJ,EAAA,GACA,OAAAiC,EAAAA,EAAAzL,EAAAA,GA6JA0L,WAAA,SAAAzE,GACA,OAAAA,EAAAyD,OAAA,GAAAP,cAAAlD,EAAA3X,MAAA,QAKAhF,OAAA,8BACA,aACA,SAAAqhB,GACA,OAAAA,IAEArhB,OAAA,yBAAA,8BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,yBACA,yBACA,SAAAqhB,GACA,OAAAA,IAEArhB,OAAA,0BACA,YACA,YACA,aACA,SAAA0Q,EAAA2Q,EAAAzX,GACA,IAAAvB,EAAAuB,EAAAvB,QACAvB,EAAA8C,EAAA9C,MACA5B,EAAA0E,EAAA1E,OACAxD,EAAAkI,EAAAlI,cACAgG,EAAAkC,EAAAlC,MACAwZ,EAAAG,EAAAH,SAEAI,EAAA5Q,EAAA1C,SACAnC,WAAA,SAAA0V,EAAArV,GACA,IAAApD,EAAAyY,MACArV,IAAAA,MACAlF,KAAAwa,IAAAN,EAAAla,KAAAya,WACAza,KAAAua,cACArV,EAAA3D,aAAAvB,KAAAuB,WAAA2D,EAAA3D,YACA2D,EAAAiC,QAAArF,EAAA9B,KAAAmH,MAAArF,EAAAoD,QACA,IAAAzG,EAAAP,EAAA8B,KAAA,YACA8B,EAAAhC,KAAArB,EAAAqD,GACA9B,KAAAgL,IAAAlJ,EAAAoD,GACAlF,KAAA0a,YAIAA,QAAA,KAGAC,gBAAA,KAIAC,YAAA,KAIAH,UAAA,IAIAI,OAAA,SAAA3V,GACA,OAAAxE,EAAAV,KAAAua,aAKA1P,IAAA,SAAAiQ,GACA,OAAA9a,KAAAua,WAAAO,IAKA9b,IAAA,SAAA8b,GACA,OAAA,MAAA9a,KAAA6K,IAAAiQ,IAMA9P,IAAA,SAAAlM,EAAAic,EAAA7V,GACA,GAAA,MAAApG,EAAA,OAAAkB,KAGA,IAAA8B,EAWA,GAVA,iBAAAhD,GACAgD,EAAAhD,EACAoG,EAAA6V,IAEAjZ,MAAAhD,GAAAic,EAGA7V,IAAAA,OAGAlF,KAAAgb,UAAAlZ,EAAAoD,GAAA,OAAA,EAGA,IAAA+V,EAAA/V,EAAA+V,MACAlQ,EAAA7F,EAAA6F,OACAmQ,KACAC,EAAAnb,KAAAob,UACApb,KAAAob,WAAA,EAEAD,IACAnb,KAAAqb,oBAAA3a,EAAAV,KAAAua,YACAva,KAAA0a,YAGA,IAAAY,EAAAtb,KAAAua,WACAG,EAAA1a,KAAA0a,QACAa,EAAAvb,KAAAqb,oBAGA,IAAA,IAAAP,KAAAhZ,EACAiZ,EAAAjZ,EAAAgZ,GACAzZ,EAAAia,EAAAR,GAAAC,IAAAG,EAAAnc,KAAA+b,GACAzZ,EAAAka,EAAAT,GAAAC,UAGAL,EAAAI,GAFAJ,EAAAI,GAAAC,EAIAE,SAAAK,EAAAR,GAAAQ,EAAAR,GAAAC,EAOA,GAHA/a,KAAA4a,eAAA9Y,IAAA9B,KAAA0O,GAAA1O,KAAA6K,IAAA7K,KAAA4a,eAGA7P,EAAA,CACAmQ,EAAA7hB,SAAA2G,KAAAwb,SAAAtW,GACA,IAAA,IAAA3L,EAAA,EAAAA,EAAA2hB,EAAA7hB,OAAAE,IACAyG,KAAAwJ,QAAA,UAAA0R,EAAA3hB,GAAAyG,KAAAsb,EAAAJ,EAAA3hB,IAAA2L,GAMA,GAAAiW,EAAA,OAAAnb,KACA,IAAA+K,EACA,KAAA/K,KAAAwb,UACAtW,EAAAlF,KAAAwb,SACAxb,KAAAwb,UAAA,EACAxb,KAAAwJ,QAAA,SAAAxJ,KAAAkF,GAKA,OAFAlF,KAAAwb,UAAA,EACAxb,KAAAob,WAAA,EACApb,MAKAib,MAAA,SAAAH,EAAA5V,GACA,OAAAlF,KAAAgL,IAAA8P,OAAA,EAAAhb,KAAAoF,GAAA+V,OAAA,MAIAnR,MAAA,SAAA5E,GACA,IAAApD,KACA,IAAA,IAAAhD,KAAAkB,KAAAua,WAAAzY,EAAAhD,QAAA,EACA,OAAAkB,KAAAgL,IAAAlJ,EAAAhC,KAAAoF,GAAA+V,OAAA,MAKAQ,WAAA,SAAAX,GACA,OAAA,MAAAA,GAAApgB,EAAAsF,KAAA0a,cACApb,IAAAU,KAAA0a,QAAAI,IASAY,kBAAA,SAAAC,GACA,IAAAA,EAAA,QAAA3b,KAAAyb,cAAA/a,EAAAV,KAAA0a,SACA,IAAAkB,EAAA5b,KAAAob,UAAApb,KAAAqb,oBAAArb,KAAAua,WACAG,KACA,IAAA,IAAAI,KAAAa,EAAA,CACA,IAAAZ,EAAAY,EAAAb,GACAzZ,EAAAua,EAAAd,GAAAC,KACAL,EAAAI,GAAAC,GAEA,OAAArgB,EAAAggB,IAAAA,GAKA1K,SAAA,SAAA8K,GACA,OAAA,MAAAA,GAAA9a,KAAAqb,oBACArb,KAAAqb,oBAAAP,GADA,MAMAe,mBAAA,WACA,OAAAnb,EAAAV,KAAAqb,sBAIA3a,MAAA,WACA,OAAA,IAAAV,KAAAvF,YAAAuF,KAAAua,aAIAuB,MAAA,WACA,OAAA9b,KAAAhB,IAAAgB,KAAA4a,cAIAmB,QAAA,SAAA7W,GACA,OAAAlF,KAAAgb,aAAAlb,KAAAoF,GAAA8W,UAAA,MAKAhB,UAAA,SAAAlZ,EAAAoD,GACA,IAAAA,EAAA8W,WAAAhc,KAAAgc,SAAA,OAAA,EACAla,EAAAhC,KAAAE,KAAAua,WAAAzY,GACA,IAAAoS,EAAAlU,KAAA2a,gBAAA3a,KAAAgc,SAAAla,EAAAoD,IAAA,KACA,OAAAgP,IACAlU,KAAAwJ,QAAA,UAAAxJ,KAAAkU,EAAApU,EAAAoF,GAAAyV,gBAAAzG,MACA,MAIA,OAAAoG,IAEAthB,OAAA,6BACA,mBACA,iCACA,SAAAU,EAAAgQ,GACA,IAAAuS,EAAA,IAAAvS,EAEA,OAAAhQ,EAAAC,OAAA,eACAuiB,QAAA,SAAA1iB,EAAA2iB,EAAAC,GACA,IAAAzU,KAAA3J,MAAAzD,KAAAmF,UAAA,GAEA,OAAAuc,EAAAzS,SACArP,KAAAX,EACAmO,KAAAA,KAIA0U,UAAA,SAAA7iB,EAAAgP,EAAAZ,GACA,IAAAgL,EAAA,SAAA1K,GACAM,EAAAzI,MAAA6H,EAAAM,EAAAP,OAGA,OADAsU,EAAAzU,GAAAhO,EAAAoZ,IAEAzH,OAAA,WACA8Q,EAAA9S,IAAA3P,EAAAoZ,UAQA5Z,OAAA,4BACA,WACA,SAAAsjB,GACA,OAAAA,IAEAtjB,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,uBACA,uBACA,SAAAsjB,GACA,OAAAA,IAEAtjB,OAAA,uBACA,uBACA,SAAA8D,GACA,OAAAA,IAEA9D,OAAA,uBACA,YACA,WACA,eACA,WACA,UACA,cACA,aACA,YACA,YACA,UACA,WACA,UACA,YACA,YACA,aACA,YACA,UACA,WACA,SAAAU,EAAAgL,EAAA8I,EAAA4B,EAAAiG,EAAAW,EAAA5I,EAAA7F,EAAAmC,EAAA+I,EAAAwD,EAAA/O,EAAA9I,EAAAwE,EAAA0X,EAAAD,EAAAiC,EAAAxf,GACA,aAEA9C,MAAAgC,UAAAgI,OACAhK,MAAAgC,UAAA2F,QACA3H,MAAAgC,UAAAgC,MACAhE,MAAAgC,UAAA6G,OAJA,IAKA/C,EAAA8C,EAAA9C,MAEAnF,GADAiI,EAAAD,UACA7F,EAAAnC,YA6BA,IAAA4hB,EAAA,EAMA,SAAAC,IACA,OAAAA,EAuCA,OApCA1c,EAAA0c,GACA/S,YAAAlC,EAAAkC,YAEAgT,QAvCA,SAAArM,EAAAhP,EAAAmB,EAAAma,GACA,OAAA/hB,EAAAyG,GAAAA,EAAA7G,KAAA6V,EAAA7N,EAAAma,GAAAtb,GAwCAub,eArCA,SAAAC,GACA,IACAvV,GADAuV,EAAAA,GAAAzhB,OAAAiB,SAAAF,MACA9C,MAAA,KACAqG,KAEA4H,EAAAhO,OAAA,GACAgO,EAAA,GAAAjO,MAAA,KAAAgB,QAAA,SAAAyiB,GACA,IAAAC,EAAAD,EAAAzjB,MAAA,KACAqG,EAAAqd,EAAA,IAAAA,EAAA,KAGA,OAAArd,GA4BAsd,QAxBA,SAAAniB,GAGA,OAAAoiB,WAAApiB,IAAA,GAuBAqiB,IAjBA,SAAArjB,GACA,OAAAA,EAAA2iB,OAAA3iB,EAAA2iB,KAAAA,MAkBAW,IAAA,oBAAA/hB,OAAAA,OAAA+hB,KAAA/hB,OAAAgiB,UAAA,OAKArd,EAAA0c,EAAA9X,EAAA0K,EAAA4G,EAAAvD,EAAArU,EAAAwE,EAAAyX,EAAAvd,GACA0Q,WAAAA,EAEA6H,MAAAA,EAEAjI,SAAAA,EAEA7F,QAAAA,EAEAmC,QAAAA,EAEAuM,OAAAA,EAEA/O,MAAAA,EAEAoT,SAAAA,EAEAgC,MAAAA,IAGA5iB,EAAA8iB,MAAAA,IAEAxjB,OAAA,gCACA,wBACA,uBACA,SAAAU,EAAA8iB,GACA,aAEA,IAqBAY,EACAC,EAtBAhH,EAAAmG,EAAAvG,OAAAI,QAKAiH,GACAC,iBAAA,sBACAC,cAAA,gBACAC,YAAA,gCACAC,WAAA,iBAEAC,EAAA,KAGAC,EAAA,GAEAC,EAAA,GAEAC,KACAC,KAIAC,EAAA,qCAEAnH,EAAA1b,OAAA0b,SACAoH,EAAApH,EAAAqH,cAAA,OAEAC,EAAAF,EAAAG,uBACAH,EAAAI,oBACAJ,EAAAK,kBACAL,EAAAE,gBAEAI,EAAAN,EAAAO,mBACAP,EAAAQ,yBACAR,EAAAS,sBACAT,EAAAU,oBAOAC,GALA/H,EAAAgI,gBACAhI,EAAAiI,wBACAjI,EAAAkI,qBACAlI,EAAAmI,iBAEAf,EAAAgB,OAEA,IAAA,IAAAzlB,KAAAolB,EAAA,CACA,IAAA9H,EAAAtd,EAAAoR,MAAAyS,GAAAW,GACA,GAAAlH,EAAA,CACAuG,IACAD,EAAAtG,EAAA,GACAuG,EAAA,IAAA/K,OAAA,KAAA8K,EAAA,UAEAA,EACAQ,EAAA,IAAAR,EAAA/iB,cAAA,IACAwjB,EAAAT,EAAA/iB,eAGAyjB,EAAAtB,EAAArD,WAAArC,EAAA,KAAAtd,EACA,IAAA0lB,EAAA1C,EAAA1D,UAAAhC,EAAA,IACAiH,EAAAmB,GAAAtB,EAAAsB,EAEA5B,EAAA9jB,KACAmkB,EAAAL,EAAA9jB,KA0DA,OArDAmkB,QACAre,IAAAsf,EAAA,aACAjB,EAAAL,EAAA,YAgBAd,EAAA1c,MAAAuW,GACAuH,eAAAA,EAEAuB,OAAA,QAAAnI,KAAA7b,OAAAgc,UAAAC,WAEAgI,uBATA,SAAA5lB,GACA,OAAAskB,EAAAtkB,IAAAA,GAUA6lB,qBAfA,SAAA7lB,GACA,OAAAukB,EAAAvkB,IAAAA,GAgBA8lB,kBArBA,SAAA9lB,GACA,OAAAqkB,EAAAA,EAAArkB,EAAAA,EAAAa,eAsBA8jB,gBAAAA,EAEAI,kBAAAA,EAEAM,eAAAN,EAEAniB,SAAA,WACA,OAAAjB,OAAAiB,UAGAmjB,aAMA5B,IACAtH,EAAAkJ,QAAA7B,YACA8B,IAAA7B,IAIAM,EAAA,KAEAvkB,EAAAC,OAAA,eAAA0c,KAGArd,OAAA,6BACA,aACA,SAAAqd,GACA,OAAAA,IAEArd,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,wBACA,sBACA,wBACA,SAAAU,EAAA8iB,EAAAnG,GACA,IAAA8I,IAAAhI,UAAAC,UAAAxM,MAAA,eAAAuM,UAAAC,UAAAxM,MAAA,SACA6U,EAAA,qBACAC,EAAA,6BACAC,EAAA9I,SAAAqH,cAAA,OACA0B,EAAA/I,SAAAqH,cAAA,SACA2B,EAAAhJ,SAAAqH,cAAA,SACA4B,EAAAjJ,SAAAqH,cAAA,MACA6B,GACAC,GAAAH,EACAI,MAAAL,EACAM,MAAAN,EACAO,MAAAP,EACAQ,GAAAN,EACAO,GAAAP,EACAQ,IAAAX,GAEAY,EAAA,mBACAlc,EAAArK,MAAAgC,UAAAqI,IACArG,EAAAhE,MAAAgC,UAAAgC,MAEA,SAAAwiB,EAAAC,EAAAC,GASA,OARAlE,EAAAphB,YAAAqlB,KACAA,GAAAA,IAEAC,IACAD,EAAApc,EAAA9J,KAAAkmB,EAAA,SAAAnK,GACA,OAAAA,EAAAqK,WAAA,MAGAnE,EAAApZ,QAAAqd,GAGA,SAAAG,EAAAC,EAAAC,GACA,IAAAtnB,EAAAqnB,EAAAD,UAAAC,EAAAD,SAAAvmB,cACA,YAAAiF,IAAAwhB,EACAtnB,IAAAsnB,EAAAzmB,cAEAb,EAiCA,SAAAunB,EAAAC,EAAA1K,GACA,GAAAkG,EAAA7hB,WAAAqmB,GACA,OAAAA,EAAAjhB,MAAAuW,MAEA,GAAAkG,EAAAphB,YAAA4lB,GAAA,CAEA,IADA,IAAAC,EACA1nB,EAAA,EAAAA,EAAAynB,EAAA3nB,OAAAE,IACAijB,EAAA7hB,WAAAqmB,EAAAznB,MACAynB,EAAAznB,GAAAynB,EAAAznB,GAAAwG,MAAAuW,MACAkG,EAAAphB,YAAA4lB,EAAAznB,MACA0nB,GAAA,IAIAA,IACAD,EAAAxE,EAAApZ,QAAA4d,IAGA,OAAAA,EAqBA,SAAAE,EAAA5K,EAAA0K,EAAAN,GACAM,EAAAD,EAAAC,EAAA1K,GAGA,IAFA,IAAA6K,EAAA7K,EACAmK,EAAAD,EAAAQ,EAAAN,GACAnnB,EAAA,EAAAA,EAAAknB,EAAApnB,OAAAE,IACA4nB,EAAAC,YAAAX,EAAAlnB,IAEA,OAAAyG,KAgCA,SAAAke,EAAAmD,EAAAtc,EAAAC,GACA,IAAAsR,EAQA,GALAA,EADA,OAAAvY,KAAAsjB,GACAxK,SAAAyK,gBAAA,6BAAAD,GAEAxK,SAAAqH,cAAAmD,GAGAtc,EACA,IAAA,IAAAvL,KAAAuL,EACAuR,EAAAiL,aAAA/nB,EAAAuL,EAAAvL,IAMA,OAHAwL,GACAkc,EAAAlc,EAAAsR,GAEAA,EAiKA,IAAAkL,EAAA,0EAqCA,SAAAC,EAAAnL,EAAAtR,EAAA0c,GACA,GAAAA,EACA,OAAApL,EAAA6K,aAAAnc,EAEA,GAAA6R,SAAA8K,gBAAAC,SACA,OAAA5c,EAAA4c,SAAAtL,GAEA,KAAAA,GAAA,CACA,GAAAtR,IAAAsR,EACA,OAAA,EAGAA,EAAAA,EAAA6K,WAGA,OAAA,EAiCA,SAAAU,EAAAhB,GACA,OAAAA,EAIA,GAAAA,EAAA/lB,SACA+lB,EAGAA,EAAAiB,cAPAjL,SAsLA,SAAAkL,IACA,OAAAA,EA8EA,OA3EAvF,EAAA1c,MAAAiiB,GACAC,OA/iBA,SAAAC,GAEA,IAAAC,EADAD,EAAAA,GAAApL,SAKA,IACAqL,EAAAD,EAAAE,cACA,MAAAjO,GACAgO,EAAAD,EAAA5J,KAMA6J,IACAA,EAAAD,EAAA5J,MAMA6J,EAAAtB,WACAsB,EAAAD,EAAA5J,MAGA,OAAA6J,GAuhBAE,KAAA,SAAAF,GACAA,EAAAE,QAGA/J,KAAA,WACA,OAAAxB,SAAAwB,MAGA3X,MAjZA,SAAA4V,EAAAlX,GACA,IACAsB,EADAoH,EAAA9H,KAIA,IAAAmf,GAAA,IAAA7I,EAAAxb,UAAAsE,EACA,OAAAkX,EAAAqK,UAAAvhB,GAIA,IAAAA,EAQA,OAPAsB,EAAAmW,SAAAqH,cAAA5H,EAAAsK,UAGA5f,KAAA8G,EAAAua,WAAA/L,GAAA,SAAAwE,GACAhT,EAAAwa,UAAA5hB,EAAAoa,EAAA8F,SAAA9Y,EAAAya,UAAAjM,EAAAwE,EAAA8F,aAGAlgB,GAgYA8hB,SA5dA,SAAA3B,GACA,GAAAD,EAAAC,EAAA,UACA,OAAAA,EAAA4B,gBAEA,OAAA5B,EAAA6B,YA0dAxE,cAAAA,EAEAyE,eAjbA,SAAAC,GAGA,GADAA,EAAApG,EAAAzG,KAAA6M,GACAlD,EAAA3hB,KAAA6kB,GACA,OAAA1E,EAAA5L,OAAAuQ,KAGA,IAAArpB,EAAAimB,EAAA1hB,KAAA6kB,IAAAtQ,OAAAuQ,GACArpB,KAAAumB,IACAvmB,EAAA,KAEA,IAAAspB,EAAA/C,EAAAvmB,GAQA,OAPAspB,EAAAnK,UA1BA,SAAAoK,GAGA,IAFA,IAAA3pB,EAAA2pB,EAAA3pB,MAAA,MACA4pB,EAAA,GACAzpB,EAAA,EAAAA,EAAAH,EAAAC,OAAA,EAAAE,IAAA,CACA,IAAA0pB,EAAA7pB,EAAAG,GAAAH,MAAA,KACA4pB,GAAA5pB,EAAAG,GAAA,MAAA0pB,EAAAA,EAAA5pB,OAAA,GAAAD,MAAA,KAAA,GAAA,IAEA,OAAA4pB,EAAA5pB,EAAAA,EAAAC,OAAA,GAmBA6pB,CAAA,GAAAN,GACAO,IAAAnlB,EAAAzD,KAAAuoB,EAAAJ,YAEAS,IAAA/oB,QAAA,SAAAkc,GACAwM,EAAAM,YAAA9M,KAGA6M,KAgaAvB,SA7XA,SAAAtL,EAAA+M,GACA,OAAA5B,EAAA4B,EAAA/M,IA8XAgN,eAtXA,SAAAnX,GACA,OAAA0K,SAAAyM,eAAAnX,IAuXA8V,IAjXA,WACA,OAAApL,UAkXA0M,MA3WA,SAAAjN,GACA,KAAAA,EAAAkN,iBAAA,CACA,IAAAH,EAAA/M,EAAAmN,WACAnN,EAAA8M,YAAAC,GAEA,OAAArjB,MAwWA0jB,WAnWA,SAAAxB,GACA,IAAA,IAAAA,EACA7L,EAAAsN,eAAA5jB,MAAA8W,cACA,CAAA,IAAAqL,EAIA,OACArL,SAAA+M,mBACA/M,SAAAgN,yBACAhN,SAAAiN,sBACAjN,SAAAkN,oBAPA1N,EAAAkI,kBAAAxe,MAAAmiB,GACAA,IAgWA8B,UAnVA,SAAAC,EAAAC,GACA,IAAA7f,EAAA8f,EAAAC,EAAAC,EAAAC,EACA1D,EAAAqD,EAAArD,SAAAvmB,cAEA,GAAA,SAAAumB,EAGA,OAFAvc,EAAA4f,EAAA9C,WACAgD,EAAA9f,EAAA7K,QACAyqB,EAAA/nB,OAAAioB,GAAA,QAAA9f,EAAAuc,SAAAvmB,kBAGA+pB,EAAAG,EAAA,gBAAAJ,EAAA,OACA9qB,OAAA,GAAA+qB,EAAAI,GAAA,aAGA,0CAAAzmB,KAAA6iB,IACAyD,GAAAJ,EAAAvX,YAQA4X,EAAAC,EAAAN,GAAAQ,QAAA,YAAA,MAEAJ,GAAAC,EAAA5X,UAIA2X,EADA,MAAAzD,GACAqD,EAAA/nB,MAEAgoB,EAGA,OAAAG,GAAAE,EAAAN,GAAAO,GAAA,aAAAE,QAAAH,EAAAN,KAmTArB,KAxSA,SAAAtM,EAAAsM,GACA,QAAAtjB,IAAAsjB,EACA,OAAAtM,EAAAqC,UAOA,GALA3Y,KAAAujB,MAAAjN,GACAsM,EAAAA,GAAA,GACApG,EAAAvhB,SAAA2nB,KACAA,EAAAA,EAAA/kB,QAAA2jB,EAAA,cAEAhF,EAAAvhB,SAAA2nB,IAAApG,EAAAzhB,SAAA6nB,GACAtM,EAAAqC,UAAAiK,OACA,GAAApG,EAAAphB,YAAAwnB,GACA,IAAA,IAAArpB,EAAA,EAAAA,EAAAqpB,EAAAvpB,OAAAE,IACA+c,EAAA8K,YAAAwB,EAAArpB,SAGA+c,EAAA8K,YAAAwB,GAGA,OAAA5iB,MAuRAyhB,UAAAA,EAEAlmB,WAxPA,SAAA+a,GACA,OAAA,MAAAA,GAAAA,EAAAxb,UAAAwb,EAAA9a,eAyPAmpB,aAlPA,SAAArO,GACA,OAAAA,IAAAO,SAAAwB,MAAAxB,SAAAwB,KAAAuJ,SAAAtL,IAmPApb,SAAAshB,EAAAthB,SAEA0lB,SAAAA,EAEAgE,aAzLA,SAAA/D,GACA,IAAA7b,EAAA6b,EAAA+D,cAAA/N,SAAAwB,KACA,KAAArT,IAAAub,EAAAxiB,KAAAiH,EAAA4b,WAAA,UAAA/J,SAAAgO,YAAAC,iBAAA9f,GAAA+f,UACA/f,EAAAA,EAAA4f,aAEA,OAAA5f,GAsLA6c,SAAAA,EAEAmD,YA1NA,SAAAnE,GACA,IAAAoB,EAAAJ,EAAAhB,GACA,OAAAoB,EAAA4C,aAAA5C,EAAAgD,cA0NApV,MA7iBA,SAAAyG,EAAA0K,EAAAN,GACAM,EAAAD,EAAAC,EAAA1K,GACA,IACAtR,GADAkgB,EAAA5O,GACA6K,WACA,GAAAnc,EAIA,IAHA,IAAAyb,EAAAD,EAAAQ,EAAAN,GACAwE,EAAAA,EAAAC,YAEA5rB,EAAA,EAAAA,EAAAknB,EAAApnB,OAAAE,IACA2rB,EACAlgB,EAAAogB,aAAA3E,EAAAlnB,GAAA2rB,GAEAlgB,EAAAoc,YAAAX,EAAAlnB,IAIA,OAAAyG,MA+hBA2P,OAlhBA,SAAA2G,EAAA0K,EAAAN,GACAM,EAAAD,EAAAC,EAAA1K,GACA,IAAA4O,EAAA5O,EACAtR,EAAAkgB,EAAA/D,WACA,GAAAnc,EAEA,IADA,IAAAyb,EAAAD,EAAAQ,EAAAN,GACAnnB,EAAA,EAAAA,EAAAknB,EAAApnB,OAAAE,IACAyL,EAAAogB,aAAA3E,EAAAlnB,GAAA2rB,GAGA,OAAAllB,MA0gBAqlB,QArNA,SAAA/O,EAAA0K,EAAAN,GAIA,IAHA,IAAAS,EAAA7K,EACA4O,EAAA/D,EAAAsC,WACAhD,EAAAD,EAAAQ,EAAAN,GACAnnB,EAAA,EAAAA,EAAAknB,EAAApnB,OAAAE,IACA2rB,EACA/D,EAAAiE,aAAA3E,EAAAlnB,GAAA2rB,GAEA/D,EAAAC,YAAAX,EAAAlnB,IAGA,OAAAyG,MA4MAkhB,OAAAA,EAEAoE,OAlJA,SAAAzE,GACA,MAAAqB,KACArB,EAAAhK,UAIA,OAFAgK,EAAA0E,aAEAvlB,MA8IAmL,OA7LA,SAAAmL,GACA,GAAAA,GAAAA,EAAA6K,WACA,IACA7K,EAAA6K,WAAAiC,YAAA9M,GACA,MAAApO,GACAsd,QAAAC,KAAA,8BAAAvd,GAGA,OAAAlI,MAuLAojB,YApLA,SAAA9M,EAAAoP,GACAlJ,EAAAphB,YAAAsqB,KACAA,GAAAA,IAEA,IAAA,IAAAnsB,EAAA,EAAAA,EAAAmsB,EAAArsB,OAAAE,IACA+c,EAAA8M,YAAAsC,EAAAnsB,IAGA,OAAAyG,MA8KAnC,QA1IA,SAAAyY,EAAAqP,GAEA,OADAA,EAAAxE,WAAAyE,aAAAtP,EAAAqP,GACA3lB,MA0IA6lB,SAjIA,SAAAA,EAAAvP,EAAAlS,GACAA,EAAAkS,GACA,IAAA,IAAA/c,EAAA,EAAA+O,EAAAgO,EAAAoM,WAAArpB,OAAAE,EAAA+O,EAAA/O,IACAssB,EAAAvP,EAAAoM,WAAAnpB,GAAA6K,GAEA,OAAApE,MA8HA8Z,QAvHA,SAAAxD,GAEA,IADA,IAAAmN,EAAAnN,EAAAmN,WACAlqB,EAAA+c,EAAAoP,SAAArsB,OAAA,EAAAE,EAAA,EAAAA,IACA,GAAAA,EAAA,EAAA,CACA,IAAA8pB,EAAA/M,EAAAoP,SAAAnsB,GACA+c,EAAA8O,aAAA/B,EAAAI,KAoHAqC,QA1GA,SAAAxP,EAAAyP,GACAvJ,EAAAvhB,SAAA8qB,KACAA,EAAA/lB,KAAA2iB,eAAAoD,GAAAtC,YAEAnN,EAAA6K,WAAAiE,aAAAW,EAAAzP,GACAyP,EAAA3E,YAAA9K,IAuGA0P,aA/FA,SAAA1P,EAAAyP,GACA,IAAArD,EAAA1kB,EAAAzD,KAAA+b,EAAAoM,YACApM,EAAA8K,YAAA2E,GACA,IAAA,IAAAxsB,EAAA,EAAAA,EAAAmpB,EAAArpB,OAAAE,IACAwsB,EAAA3E,YAAAsB,EAAAnpB,IAEA,OAAAyG,MA2FAimB,OApFA,SAAA3P,GACA,IAAAtR,EAAAsR,EAAA6K,WACA,GAAAnc,EAAA,CACA,GAAAhF,KAAAkmB,MAAAlhB,EAAAmc,YAAA,OACAnc,EAAAmc,WAAAiE,aAAA9O,EAAAtR,OAmFAtL,EAAAC,OAAA,aAAAooB,KAEA/oB,OAAA,2BACA,WACA,SAAA+oB,GACA,OAAAA,IAEA/oB,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,8BACA,wBACA,sBACA,uBACA,sBACA,SAAAU,EAAA8iB,EAAAnG,EAAA0L,GACA,IAAAoE,KACAtjB,EAAA7I,MAAAgC,UAAA6G,OACA7E,EAAAhE,MAAAgC,UAAAgC,MACAooB,EAAA/P,EAAA8H,iBAUA,WAEA,IAAAnW,EACAqe,EACAC,EACAC,EAyDAtM,EAxDAnM,KACA0Y,KACAC,EAAA,MAEAtf,EAAA,SAAAuf,EAAAC,GACA,GAAA,MAAAD,EAAA,OAAA,KACA,IAAA,IAAAA,EAAAE,MAAA,OAAAF,EACAA,GAAA,GAAAA,GAAA7oB,QAAA,aAAA,IAEA,IAAAgpB,GADAN,IAAAI,GACAH,EAAA1Y,EACA,GAAA+Y,EAAAH,GAAA,OAAAG,EAAAH,GAUA,IATA1e,GACA4e,OAAA,EACAE,eACAC,IAAAL,EACA5M,QAAA,WACA,OAAA3S,EAAAnH,KAAA+mB,KAAA,KAGAV,GAAA,EACAK,IAAAA,EAAAA,EAAA7oB,QAAAmpB,EAAAC,MAEA,OADAjf,EAAA3O,OAAA2O,EAAA8e,YAAAztB,OACAwtB,EAAA7e,EAAA+e,KAAA,EAAAjN,EAAA9R,GAAAA,GAGAkf,EAAA,SAAAC,GACA,MAAA,MAAAA,EAAA,IACA,MAAAA,EAAA,IACA,KAAAppB,KAAAopB,GAAAA,EAAAtpB,QAAA,KAAA,IACA,IAAAspB,GAGArN,EAAA,SAAA4M,GAEA,IADA,IAAAI,EAAAJ,EAAAI,YACAvtB,EAAA,EAAAA,EAAAutB,EAAAztB,OAAAE,IAAA,CAQA,IAPA,IAAA6tB,EAAAN,EAAAvtB,GACA8tB,GACAC,SACAjG,IAAA,IACA8F,WAAAD,EAAAE,EAAA,GAAAD,aAGA9jB,EAAA,EAAAA,EAAA+jB,EAAA/tB,OAAAgK,IAAA,CACA,IAAAkkB,EAAAH,EAAA/jB,GACAkkB,EAAAL,oBAAAK,EAAAL,kBAAA,KACAK,EAAAJ,WAAAI,EAAAL,yBACAK,EAAAL,kBAGAE,EAAAtN,UAAA/a,KAAAsoB,GAEA,OAAAX,GAGAc,GAEAvN,EAAA,kCAEA,SAAA9B,GACA,OAAAA,EAAAta,QAAAoc,EAFA,QAMA+M,EAAA,IAAA1U,OACA,0QACAzU,QAAA,eAAA,IAAA2pB,EAAA,sBAAA,KACA3pB,QAAA,aAAA,8CACAA,QAAA,cAAA,gDAGA,SAAAopB,EACAQ,EAEAC,EACAP,EACAQ,EAEAC,EACAlZ,EACApO,EAEAunB,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAAX,IAAA,IAAArB,KACAre,EAAA8e,cAAAT,MACAC,GAAA,EACAoB,GAAA,MAAA,GAGA,GAAAP,GAAAQ,IAAA,IAAArB,EAAA,CACAa,EAAAA,GAAA,IACA,IAAAmB,EAAAtgB,EAAA8e,YAAAT,GACAE,GAAA+B,EAAAhC,KACAgC,EAAAhC,GAAAY,kBAAAA,EAAAC,IACAmB,IAAAhC,IACAa,WAAAA,EACA9F,IAAA,KAIA,IAAAkH,EAAAvgB,EAAA8e,YAAAT,GAAAC,GAEA,GAAAsB,EACAW,EAAAlH,IAAAuG,EAAA/pB,QAAA4oB,EAAA,SAEA,GAAA/X,EACA6Z,EAAA7Z,GAAAA,EAAA7Q,QAAA4oB,EAAA,SAEA,GAAAnmB,EACAA,EAAAA,EAAAzC,QAAA4oB,EAAA,IAEA8B,EAAAC,YAAAD,EAAAC,cACAD,EAAAE,UAAAF,EAAAE,YACAF,EAAAC,UAAAzpB,KAAAuB,GACAioB,EAAAE,QAAA1pB,MACAnE,MAAA0F,EACA0mB,OAAA,IAAA1U,OAAA,UAAAkV,EAAAlnB,GAAA,kBAGA,GAAA4nB,EAEAG,GADAA,EAAAA,GAAAD,GACAC,EAAAxqB,QAAA4oB,EAAA,IAAA,KAEA8B,EAAAG,UAAAH,EAAAG,YACAH,EAAAG,QAAA3pB,MACAD,IAAAopB,EAAArqB,QAAA4oB,EAAA,IACA7rB,MAAAytB,EACAluB,KAAA,GAAA8tB,EAAA5uB,OAAA,QAAA,iBAGA,GAAAwuB,EAAA,CAIA,IAAA9pB,EAAAipB,EAEA,OALAa,EAAAA,EAAAhqB,QAAA4oB,EAAA,IACAuB,GAAAA,GAAA,IAAAnqB,QAAA4oB,EAAA,IAIAqB,GACA,IAAA,KACAd,EAAA,IAAA1U,OAAA,IAAAkV,EAAAQ,IACA,MACA,IAAA,KACAhB,EAAA,IAAA1U,OAAAkV,EAAAQ,GAAA,KACA,MACA,IAAA,KACAhB,EAAA,IAAA1U,OAAA,UAAAkV,EAAAQ,GAAA,WACA,MACA,IAAA,KACAhB,EAAA,IAAA1U,OAAA,IAAAkV,EAAAQ,GAAA,SACA,MACA,IAAA,IACAjqB,EAAA,SAAAnD,GACA,OAAAotB,GAAAptB,GAEA,MACA,IAAA,KACAmD,EAAA,SAAAnD,GACA,OAAAA,GAAAA,EAAA+G,QAAAqmB,IAAA,GAEA,MACA,IAAA,KACAjqB,EAAA,SAAAnD,GACA,OAAAotB,GAAAptB,GAEA,MACA,QACAmD,EAAA,SAAAnD,GACA,QAAAA,GAIA,IAAAotB,GAAA,WAAAjqB,KAAA+pB,KAAA/pB,EAAA,WACA,OAAA,IAGAA,IAAAA,EAAA,SAAAnD,GACA,OAAAA,GAAAosB,EAAAjpB,KAAAnD,KAGA2tB,EAAAhO,aAAAgO,EAAAhO,eACAgO,EAAAhO,WAAAxb,MACAD,IAAA+oB,EACAc,SAAAb,EACAltB,MAAAotB,EACAjqB,KAAAA,IAKA,MAAA,GAKA,IAAA6oB,EAAA5mB,KAAA4mB,UAEAA,EAAAzf,MAAA,SAAAuf,GACA,OAAAvf,EAAAuf,IAGAE,EAAAY,aAAAA,EAEAxnB,KAAA4mB,QAAA5mB,KAAA4mB,MAAAA,KAEA7mB,MAAAomB,GAGA,IAEAyC,EAAA,sCACAC,EAAA,SACA7qB,EAAAhE,MAAAgC,UAAAgC,MAGAmoB,EAAA2C,cAAA3C,EAAAS,MAAAzf,MAGA,IAAAuhB,EAAAvC,EAAAuC,SAEAK,OAAA,SAAAC,GACA,IAAAxvB,EAAAwvB,EAAApI,SAAAvmB,cACA,MAAA,UAAAb,GAAA,WAAAwvB,EAAA7uB,MAAA,WAAAX,GAGAiT,QAAA,SAAAoU,GACA,QAAAA,EAAApU,SAGAmV,SAAA,SAAAf,EAAAte,EAAAke,EAAAtU,GACA,GAAAoY,EAAAvkB,MAAAmM,OAAAxK,QAAAwK,IAAA,EAAA,OAAAnM,MAGA0M,SAAA,SAAAmU,GACA,QAAAA,EAAAnU,UAGAuc,QAAA,SAAApI,GACA,OAAAA,EAAAnU,UAGArO,GAAA,SAAAwiB,EAAAte,EAAAke,EAAA7lB,GACA,OAAA2H,GAAA3H,GAGAsuB,KAAA,SAAArI,EAAAte,EAAAke,EAAA7lB,GACA,OAAA2H,EAAA,GAAA,GAGA4mB,MAAA,SAAAtI,GACA,OAAAhK,SAAAsL,gBAAAtB,IAAAA,EAAA3kB,MAAA2kB,EAAA1mB,MAAA0mB,EAAAuI,WAGApF,UAAA,SAAAnD,GACA,OAAAkB,EAAAiC,UAAAnD,EAAA,MAAAA,EAAAuI,WAGA7lB,MAAA,SAAAsd,EAAAte,GACA,OAAA,IAAAA,GAGA8mB,GAAA,SAAAxI,EAAAte,EAAAke,EAAA7lB,GACA,OAAA2H,EAAA3H,GAGAoE,IAAA,SAAA6hB,EAAAte,EAAAke,EAAA6I,GACA,OAAAxmB,EAAA+d,EAAAyI,IAIAC,OAAA,SAAAP,GACA,OAAAH,EAAA9qB,KAAAirB,EAAApI,WAGA4I,OAAA,SAAA3I,GACA,OAAAsF,EAAAuC,QAAA,QAAA7H,IAGA4I,MAAA,SAAAT,GACA,OAAAJ,EAAA7qB,KAAAirB,EAAApI,WAGAyG,KAAA,SAAAxG,EAAAte,EAAAke,GACA,OAAAle,IAAAke,EAAApnB,OAAA,GAGAqwB,GAAA,SAAA7I,EAAAte,EAAAke,EAAA7lB,GACA,OAAA2H,EAAA3H,GAGA+uB,IAAA,SAAA9I,EAAAte,EAAAke,EAAA6I,GACA,OAAA9a,EAAAqS,EAAAyI,IAGAM,IAAA,SAAA/I,EAAAte,EAAAke,EAAA7lB,GACA,OAAA2H,EAAA,GAAA,GAOAyC,OAAA,SAAA6b,GACA,QAAAA,EAAAM,YAGA0I,SAAA,SAAAhJ,GACA,QAAAA,EAAAgJ,UAGAC,SAAA,SAAAjJ,GACA,IAAAkJ,EAAAlJ,EAAAuI,SACAlF,EAAA,MAAA6F,EACA,QAAA7F,GAAA6F,GAAA,IAAAhI,EAAAiC,UAAAC,QAAAC,IAGA/X,KAAA,SAAA0U,GACA,MAAA,SAAAA,EAAA1mB,MAGAuqB,QAAA,SAAA7D,GACA,OAAAA,EAAAmJ,aAAAnJ,EAAAmJ,aAEAzG,MAAA,SAAA1C,GACA,OAAAA,EAAA2C,kBAYA,SAAAyG,EAAA9vB,GACA,OAAA,SAAA6uB,GACA,IAAAxvB,EAAAwvB,EAAApI,SAAAvmB,cACA,MAAA,UAAAb,GAAAwvB,EAAA7uB,OAAAA,GAIA,SAAA+vB,EAAA/vB,GACA,OAAA,SAAA6uB,GACA,IAAAxvB,EAAAwvB,EAAApI,SAAAvmB,cACA,OAAA,UAAAb,GAAA,WAAAA,IAAAwvB,EAAA7uB,OAAAA,GAKA,IAAAZ,KAvBA,QAAA,KAAA,QAAAa,QAAA,SAAAkI,GACAomB,EAAApmB,GAAA6nB,eAAA,IAKAzB,EAAA,IAAAA,EAAA,IAkBA0B,OAAA,EACAC,UAAA,EACAC,MAAA,EACAC,UAAA,EACAC,OAAA,GAEA9B,EAAAnvB,GAAA0wB,EAAA1wB,GAEA,IAAAA,KACAkxB,QAAA,EACAC,OAAA,GAEAhC,EAAAnvB,GAAA2wB,EAAA3wB,GAiWA,SAAAoxB,EAAArU,EAAA5O,EAAAkjB,GAGA,IAFA,IAAA/jB,KACAgkB,EAAAD,GAAApO,EAAAvhB,SAAA2vB,IACAtU,EAAAA,EAAA6K,aAAA,IAAA7K,EAAAxb,UAAA,CACA,GAAA8vB,EACA,GAAAC,GACA,GAAArc,EAAA8H,EAAAsU,GACA,WAEA,GAAApO,EAAAphB,YAAAwvB,IACA,GAAApO,EAAA5Y,QAAA0S,EAAAsU,IAAA,EACA,WAEA,GAAAtU,GAAAsU,EACA,MAGAljB,IAAA8G,EAAA8H,EAAA5O,IACAb,EAAA9H,KAAAuX,GAOA,OAAAzP,EAkBA,SAAA6e,EAAApP,EAAA5O,GAGA,IAFA,IAAAgb,EAAApM,EAAAoM,WACA7b,KACAtN,EAAA,EAAAA,EAAAmpB,EAAArpB,OAAAE,IAAA,CACA,IAAA+c,EAAAoM,EAAAnpB,GACA,GAAA+c,EAAAxb,UACA+L,EAAA9H,KAAAuX,GAMA,OAHA5O,IACAb,EAAAsf,EAAAtjB,OAAAgE,EAAAa,IAEAb,EAgBA,SAAAikB,EAAAjK,EAAAnZ,GAEA,IACA,OAAA1J,EAAAzD,KAAAsmB,EAAAkK,iBAAArjB,IACA,MAAAsjB,IAGA,OAAA7E,EAAAzY,MAAAmT,EAAAnZ,GAQA,SAAAujB,EAAApK,EAAAnZ,GAEA,IACA,OAAAmZ,EAAAqK,cAAAxjB,GACA,MAAAsjB,IAGA,IAAAvK,EAAA0F,EAAAzY,MAAAmT,EAAAnZ,GACA,OAAA+Y,EAAApnB,OAAA,EACAonB,EAAA,GAEA,KASA,SAAA3d,EAAA+d,EAAAnZ,GAKA,OAJAA,IACAA,EAAAmZ,EACAA,EAAAhK,SAAAwB,MAEA7J,EAAAqS,EAAAnZ,GACAmZ,EAEAoK,EAAApK,EAAAnZ,GAuBA,SAAA+b,EAAA5C,EAAAnZ,EAAAnE,GAGA,IAFA,IAAAmf,EAAA7B,EAAA6B,WACApM,EAAAoM,EAAA,GACApM,GAAA,CACA,GAAA,GAAAA,EAAAxb,SAAA,CACA,IAAA4M,GAAA8G,EAAA8H,EAAA5O,GACA,OAAA4O,EAEA,GAAA/S,EACA,MAGA+S,EAAAA,EAAA6O,YAGA,OAAA,KASA,SAAAgG,EAAAtK,EAAAnZ,EAAA2f,GAGA,IAFA,IAAA3E,EAAA7B,EAAA6B,WACApM,EAAAoM,EAAAA,EAAArpB,OAAA,GACAid,GAAA,CACA,GAAA,GAAAA,EAAAxb,SAAA,CACA,IAAA4M,GAAA8G,EAAA8H,EAAA5O,GACA,OAAA4O,EAEA,GAAA+Q,EACA,MAGA/Q,EAAAA,EAAA8U,gBAGA,OAAA,KAQA,SAAA5c,EAAAqS,EAAAnZ,GACA,IAAAA,IAAAmZ,GAAA,IAAAA,EAAA/lB,SACA,OAAA,EAGA,GAAA0hB,EAAAvhB,SAAAyM,GAAA,CACA,IACA,OAAA0e,EAAA7rB,KAAAsmB,EAAAnZ,EAAA7J,QAAA,iCAAA,cACA,MAAAmtB,IAGA,OAAA7E,EAAAvb,MAAAiW,EAAAnZ,GACA,OAAA8U,EAAAphB,YAAAsM,GACA8U,EAAA5Y,QAAAid,EAAAnZ,IAAA,EACA8U,EAAA3gB,cAAA6L,GACAye,EAAAkF,MAAAxK,EAAAnZ,GAEAmZ,IAAAnZ,EAWA,SAAAyd,EAAAtE,EAAAnZ,EAAA4jB,GAEA,IADA,IAAAhV,EAAAuK,EAAAsE,YACA7O,GAAA,CACA,GAAA,GAAAA,EAAAxb,SAAA,CACA,IAAA4M,GAAA8G,EAAA8H,EAAA5O,GACA,OAAA4O,EAEA,GAAAgV,EACA,MAGAhV,EAAAA,EAAA6O,YAEA,OAAA,KAQA,SAAAoG,EAAA1K,EAAAnZ,GAGA,IAFA,IAAA4O,EAAAuK,EAAAsE,YACAte,KACAyP,GACA,GAAAA,EAAAxb,WACA4M,IAAA8G,EAAA8H,EAAA5O,IACAb,EAAA9H,KAAAuX,IAGAA,EAAAA,EAAA6O,YAEA,OAAAte,EAQA,SAAA7B,EAAA6b,EAAAnZ,GACA,IAAA4O,EAAAuK,EAAAM,WACA,OAAA7K,GAAA5O,IAAA8G,EAAA8H,EAAA5O,GAIA,KAHA4O,EAYA,SAAA8U,EAAAvK,EAAAnZ,EAAA4jB,GAEA,IADA,IAAAhV,EAAAuK,EAAAuK,gBACA9U,GAAA,CACA,GAAA,GAAAA,EAAAxb,SAAA,CACA,IAAA4M,GAAA8G,EAAA8H,EAAA5O,GACA,OAAA4O,EAEA,GAAAgV,EACA,MAGAhV,EAAAA,EAAA8U,gBAEA,OAAA,KAQA,SAAAI,EAAA3K,EAAAnZ,GAGA,IAFA,IAAA4O,EAAAuK,EAAAuK,gBACAvkB,KACAyP,GACA,GAAAA,EAAAxb,WACA4M,IAAA8G,EAAA8H,EAAA5O,IACAb,EAAA9H,KAAAuX,IAGAA,EAAAA,EAAA8U,gBAEA,OAAAvkB,EAQA,SAAA4kB,EAAA5K,EAAAnZ,GAGA,IAFA,IAAA4O,EAAAuK,EAAAM,WAAAsC,WACA5c,KACAyP,GACA,GAAAA,EAAAxb,UAAAwb,IAAAuK,IACAnZ,IAAA8G,EAAA8H,EAAA5O,IACAb,EAAA9H,KAAAuX,IAGAA,EAAAA,EAAA6O,YAEA,OAAAte,EA3pBAsf,EAAAuF,OAAA,SAAAC,GACA,IAEAtK,EACA3S,EACA+Z,EACAlO,EACAmO,EANAkD,EAAA,GACAC,KAWA,IAHAnd,EAAAid,EAAAjd,MACAkd,GAAA,IAAAld,GAEA+Z,EAAAkD,EAAAlD,QACA,IAAA,IAAAlvB,EAAAkvB,EAAApvB,OAAAE,KACAqyB,GAAA,IAAAnD,EAAAlvB,GAAAqB,MAGA,GAAA2f,EAAAoR,EAAApR,WACA,IAAA,IAAAhhB,EAAA,EAAAA,EAAAghB,EAAAlhB,OAAAE,IACAghB,EAAAhhB,GAAAovB,SACAiD,GAAA,IAAArR,EAAAhhB,GAAAuF,IAAAyb,EAAAhhB,GAAAovB,SAAA3P,KAAAO,UAAAgB,EAAAhhB,GAAAqB,OAAA,IAEAgxB,GAAA,IAAArR,EAAAhhB,GAAAuF,IAAA,IAIA,GAAA4pB,EAAAiD,EAAAjD,QACA,IAAAnvB,EAAAmvB,EAAArvB,OAAAE,KACAuyB,KAAApD,EAAAnvB,GACAyG,KAAA0oB,QAAAoD,KAAAhtB,KACA+sB,EAAA9sB,KAAA+sB,WAEAxsB,IAAAwsB,KAAAlxB,QACAgxB,GAAA,IAAAE,KAAAhtB,IAAA,IAAAka,KAAAO,UAAAuS,OAgBA,OAVAzK,EAAAsK,EAAAtK,MACA,MAAAA,IACAuK,EAAAvK,EAAAxI,cAAA+S,GAIAA,IACAA,EAAA,MAIAA,eAAAA,EACAC,cAAAA,IAKA1F,EAAAkF,MAAA,SAAA/U,EAAAqV,EAAAppB,EAAAke,EAAAsL,GACA,IAAA1K,EACA3S,EACA+Z,EACAlO,EACAmO,EAEAnvB,EAAAuyB,EAAArmB,EAAAumB,EAEA,IAAAD,EAAA,CACA,GAAA1K,EAAAsK,EAAAtK,IAAA,CACA,IAAAT,EAAAtK,EAAAsK,SAAA/H,cACA,GAAA,KAAAwI,GACA,GAAAT,EAAA,IAAA,OAAA,OAEA,GAAAA,IAAAS,GAAA,IAAAxI,cAAA,OAAA,EAIA,IAAAnK,EAAAid,EAAAjd,KACA4H,EAAA2V,aAAA,OAAAvd,EACA,OAAA,EAKA,GAAA+Z,EAAAkD,EAAAlD,QACA,IAAAlvB,EAAAkvB,EAAApvB,OAAAE,KAEA,KADAkM,EAAA6Q,EAAA2V,aAAA,YACAxD,EAAAlvB,GAAAytB,OAAAjpB,KAAA0H,GAAA,OAAA,EAIA,GAAA8U,EAAAoR,EAAApR,WACA,IAAAhhB,EAAAghB,EAAAlhB,OAAAE,KAEA,IADAuyB,EAAAvR,EAAAhhB,IACAovB,UAAAmD,EAAA/tB,KAAAuY,EAAA2V,aAAAH,EAAAhtB,OAAAwX,EAAA4V,aAAAJ,EAAAhtB,KAAA,OAAA,EAKA,GAAA4pB,EAAAiD,EAAAjD,QACA,IAAAnvB,EAAAmvB,EAAArvB,OAAAE,KAEA,GADAuyB,EAAApD,EAAAnvB,GACAyyB,EAAAhsB,KAAA0oB,QAAAoD,EAAAhtB,MACA,IAAAitB,GAAAC,EAAA7B,gBAAA4B,IAAAC,EAAA7B,iBACA6B,EAAA1V,EAAA/T,EAAAke,EAAAqL,EAAAlxB,OACA,OAAA,OAIA,IAAAmxB,IAAA3F,EAAA7rB,KAAA+b,EAAAwV,EAAAhtB,KACA,OAAA,EAKA,OAAA,GAGAqnB,EAAAvb,MAAA,SAAA0L,EAAA5O,GAEA,IAAAM,EAQA,KALAA,EADAwU,EAAAvhB,SAAAyM,GACAye,EAAAS,MAAAzf,MAAAO,GAEAA,GAIA,OAAA,EAIA,IAEAnO,EACA4yB,EAHArF,EAAA9e,EAAA8e,YACAsF,EAAA,EAGA,IAAA7yB,EAAA,EACA4yB,EAAArF,EAAAvtB,GAAAA,IACA,GAAA,GAAA4yB,EAAA9yB,OAAA,CACA,IAAA+tB,EAAA+E,EAAA,GACA,GAAAnsB,KAAAqrB,MAAA/U,EAAA8Q,GACA,OAAA,EAEAgF,IAIA,GAAAA,GAAApkB,EAAA3O,OACA,OAAA,EAGA,IACAiJ,EADAme,EAAAzgB,KAAA0N,MAAAmJ,SAAA7O,GAEA,IAAAzO,EAAA,EAAA+I,EAAAme,EAAAlnB,MACA,GAAA+I,IAAAgU,EACA,OAAA,EAGA,OAAA,GAIA6P,EAAAkG,aAAA,SAAA5L,EAAA2G,GACA,IAAAkF,EAAAzpB,EAAAtI,KAAAkmB,EAAA,SAAAnK,EAAA/T,GACA,OAAA4jB,EAAAkF,MAAA/U,EAAA8Q,EAAA7kB,EAAAke,GAAA,KAMA,OAHA6L,EAAAzpB,EAAAtI,KAAA+xB,EAAA,SAAAhW,EAAA/T,GACA,OAAA4jB,EAAAkF,MAAA/U,EAAA8Q,EAAA7kB,EAAA+pB,GAAA,MAKAnG,EAAAtjB,OAAA,SAAA4d,EAAA/Y,GAGA,IAAA8U,EAAAvhB,SAAAyM,GAGA,OAAAye,EAAAkG,aAAA5L,EAAA/Y,GAIA,IACAnO,EACA4yB,EAFArF,EANAX,EAAAS,MAAAzf,MAAAO,GAMAof,YAGAjgB,KACA,IAAAtN,EAAA,EACA4yB,EAAArF,EAAAvtB,GAAAA,IAAA,CACA,GAAA,GAAA4yB,EAAA9yB,OAOA,MAAA,IAAAgM,MAAA,0BAAAqC,GANA,IAAA0f,EAAA+E,EAAA,GAEAG,EAAAnG,EAAAkG,aAAA5L,EAAA2G,GAEAvgB,EAAA2V,EAAA/X,KAAAoC,EAAA7C,OAAAsoB,IAMA,OAAAzlB,GAIAsf,EAAAoG,QAAA,SAAA1L,EAAA2L,GACA,IAEAC,EAFAC,EAAAF,EAAArF,WACAwE,EAAAa,EAEA/L,KAEA,OAAAiM,GACA,IAAA,IACAjM,EAAAiF,EAAA7E,EAAA8K,GACA,MACA,IAAA,KACAc,EAAAtH,EAAAtE,EAAA8K,GAAA,KAEAlL,EAAA1hB,KAAA0tB,GAEA,MACA,IAAA,KACAA,EAAAhJ,EAAA5C,EAAA8K,GAAA,KAEAlL,EAAA1hB,KAAA0tB,GAEA,MACA,IAAA,IACAhM,EAAA8K,EAAA1K,EAAA8K,GACA,MACA,IAAA,KACA,IAAApQ,EAAA6P,EAAAvK,EAAA8K,GAAA,GACAthB,EAAA8a,EAAAtE,EAAA8K,GAAA,GACApQ,GACAkF,EAAA1hB,KAAAwc,GAEAlR,GACAoW,EAAA1hB,KAAAsL,GAEA,MACA,IAAA,KACAoW,EAAAgL,EAAA5K,EAAA8K,GACA,MACA,IAAA,IACAlL,EAAAkK,EAAA9J,EAAA8K,GACA,MACA,IAAA,MACAc,EAAAznB,EAAA6b,EAAA8K,KAEAlL,EAAA1hB,KAAA0tB,GAEA,MACA,IAAA,KACAhM,EAAA2K,EAAAvK,EAAA8K,GAAA,GACA,MACA,IAAA,MACAc,EAAAtB,EAAAtK,EAAA8K,GAAA,KAEAlL,EAAA1hB,KAAA0tB,GAEA,MACA,IAAA,KACAhM,EAAA+K,EAAA3K,EAAA8K,GACA,MACA,QACA,IAAAgB,EAAA3sB,KAAA0rB,OAAAc,GAEA,GADA/L,EAAAziB,EAAAzD,KAAAsmB,EAAAkK,iBAAA4B,EAAAf,iBACAe,EAAAd,cACA,IAAA,IAAAtyB,EAAAozB,EAAAd,cAAAxyB,OAAA,EAAAE,GAAA,EAAAA,IACAknB,EAAA5d,EAAAtI,KAAAkmB,EAAA,SAAAne,EAAAC,GACA,OAAA4jB,EAAAkF,MAAA/oB,GACAomB,SAAAiE,EAAAd,cAAAtyB,KACAgJ,EAAAke,GAAA,KAGAA,EAAA5d,EAAAtI,KAAAkmB,EAAA,SAAAne,EAAAC,GACA,OAAA4jB,EAAAkF,MAAA/oB,GACAomB,SAAAiE,EAAAd,cAAAtyB,KACAgJ,EAAAke,GAAA,KAOA,OAAAA,GAGA0F,EAAAzY,MAAA,SAAA4I,EAAA5O,EAAAklB,GAUA,IAPA,IAIAT,EAAAU,EAJA7kB,EAAAhI,KAAA4mB,MAAAzf,MAAAO,GAGAolB,KAEAhG,EAAA9e,EAAA8e,YAEAvtB,EAAA,EACA4yB,EAAArF,EAAAvtB,GAAAA,IAAA,CAGA,IAFA,IACAwzB,EADAC,GAAA1W,GAEAjT,EAAA,EACAwpB,EAAAV,EAAA9oB,GAAAA,KACA0pB,EAAAvQ,EAAAnY,IAAA2oB,EAAA,SAAA1qB,EAAA/I,GACA,OAAA4sB,EAAAoG,QAAAjqB,EAAAuqB,QAGAG,EAAAD,GAGAA,IACAD,EAAAA,EAAA9oB,OAAA+oB,IAIA,OAAAD,GAmWA,IAAAG,EAAA,WACA,OAAAA,GA4CA,OAzCAzQ,EAAA1c,MAAAmtB,GAEAC,SAhWA,SAAA5W,EAAA5O,EAAAkjB,GACA,IAAAC,EAAAD,GAAApO,EAAAvhB,SAAA2vB,GACA,KAAAtU,EAAAA,EAAA6K,YAAA,CACA,GAAA3S,EAAA8H,EAAA5O,GACA,OAAA4O,EAEA,GAAAsU,EACA,GAAAC,GACA,GAAArc,EAAA8H,EAAAsU,GACA,WAEA,GAAAtU,GAAAsU,EACA,MAIA,OAAA,MAkVAD,UAAAA,EAEAwC,KA1SA,SAAAze,EAAAuT,GAEA,OADAA,EAAAA,GAAAF,EAAAE,OACAvJ,eAAAhK,IA0SAgX,SAAAA,EAEAjB,QArRA,SAAAnO,EAAA5O,GACA,KAAA4O,IAAA9H,EAAA8H,EAAA5O,IACA4O,EAAAA,EAAA6K,WAGA,OAAA7K,GAkRA2U,WAAAA,EAEAH,YAAAA,EAEAhoB,KAAAA,EAEAsqB,QA5NA,SAAAvM,EAAAnZ,GACAA,IACAA,EAAAmZ,EACAA,EAAAhK,SAAAwB,MAEA,OAAAyS,EAAAjK,EAAAnZ,IAyNA+b,WAAAA,EAEA0H,UAAAA,EAEA3c,QAAAA,EAEA2W,YAAAA,EAEAoG,aAAAA,EAEAvmB,OAAAA,EAEAomB,gBAAAA,EAEAI,iBAAAA,EAEA9C,QAAAvC,EAAAuC,QAEA+C,SAAAA,IAGA/xB,EAAAC,OAAA,cAAAszB,KAEAj0B,OAAA,4BACA,YACA,SAAAi0B,GAEA,OAAAA,IAEAj0B,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,sBACA,sBACA,SAAAU,EAAA8iB,EAAAyQ,EAAAlL,GACA,IAAA1d,EAAArK,MAAAgC,UAAAqI,IAEAuU,GADA5e,MAAAgC,UAAA6G,OACA2Z,EAAA5D,WACAG,EAAAyD,EAAAzD,iBAEAsU,EAAA,WACAC,GACAlE,SAAA,WACAmE,SAAA,WACAC,IAAA,UACAC,MAAA,YACAC,UAAA,YACAC,YAAA,cACAC,YAAA,cACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,YAAA,cACAC,gBAAA,mBAUA,IAAAC,GACAC,QACAtjB,IAAA,SAAAme,GACA,IAAAjO,EAAAiO,EAAAiD,aAAA,SACA,OAAA,MAAAlR,EAAAA,GAAA5O,EAAA6c,GATApe,MAAA,0BACAtD,KAAA,OAWA8mB,QACAvjB,IAAA,SAAAme,GACA,IAAApuB,EAAAuzB,EAAA50B,EACA2L,EAAA8jB,EAAA9jB,QACApE,EAAAkoB,EAAAqF,cACAxmB,EAAA,eAAAmhB,EAAA7uB,KACA8F,EAAA4H,EAAA,QACAymB,EAAAzmB,EAAA/G,EAAA,EAAAoE,EAAA7L,OAUA,IAPAE,EADAuH,EAAA,EACAwtB,EAGAzmB,EAAA/G,EAAA,EAIAvH,EAAA+0B,EAAA/0B,IAGA,IAFA40B,EAAAjpB,EAAA3L,IAEAswB,WAGAsE,EAAAzhB,YACAyhB,EAAAhN,WAAAzU,WACAqV,EAAAnB,SAAAuN,EAAAhN,WAAA,aAAA,CAMA,GAHAvmB,EAAAmgB,EAAAoT,GAGAtmB,EACA,OAAAjN,EAIAqF,EAAAlB,KAAAnE,GAIA,OAAAqF,GAGA+K,IAAA,SAAAge,EAAApuB,GAMA,IALA,IAAA2zB,EAAAJ,EACAjpB,EAAA8jB,EAAA9jB,QACAjF,EAAAuc,EAAA3Y,UAAAjJ,GACArB,EAAA2L,EAAA7L,OAEAE,OACA40B,EAAAjpB,EAAA3L,IAIAswB,SACArN,EAAA5Y,QAAAsqB,EAAAC,OAAAtjB,IAAAsjB,GAAAluB,IAAA,KAEAsuB,GAAA,GAUA,OAHAA,IACAvF,EAAAqF,eAAA,GAEApuB,KA6CA,SAAA6a,EAAA+F,EAAArnB,EAAAoB,GACA,QAAA0E,IAAA1E,EAAA,CACA,GAAA,iBAAApB,EAAA,CACA,IAAA,IAAAg1B,KAAAh1B,EACAshB,EAAA+F,EAAA2N,EAAAh1B,EAAAg1B,IAEA,OAAAxuB,KAEA,OAAA6gB,EAAAoL,aAAApL,EAAAoL,aAAAzyB,GAAAqnB,EAAArnB,GAIA,OADAqnB,EAAAU,aAAAV,EAAAU,aAAA/nB,EAAAoB,GAAAimB,EAAArnB,GAAAoB,EACAoF,KAoBA,SAAAyuB,EAAA5N,EAAA6N,GACA,IAAAC,EAAA9N,EAAA,SAIA,OAHA8N,GAAAD,IACAC,EAAA9N,EAAA,SAbA,SAAAA,GACA,IAAA8N,KAMA,OALAnS,EAAAxb,KAAA6f,EAAAtG,eAAA,SAAAhhB,EAAAuhB,GACA,GAAAA,EAAAthB,KAAAmI,QAAA,WACAgtB,EAAA/V,EAAAkC,EAAAthB,KAAAqE,QAAA,QAAA,MAAAkb,EAAA+B,EAAAlgB,UAGA+zB,EAMAC,CAAA/N,IAEA8N,EAuBA,SAAAE,EAAAhO,EAAArnB,EAAAoB,GACA,IAAA+zB,EAAAF,EAAA5N,GAAA,GACA8N,EAAA/V,EAAApf,IAAAoB,EAUA,SAAA+M,EAAAkZ,EAAArnB,EAAAoB,GAEA,QAAA0E,IAAA1E,EAAA,CACA,GAAA,iBAAApB,EAAA,CACA,IAAA,IAAAs1B,KAAAt1B,EACAq1B,EAAAhO,EAAAiO,EAAAt1B,EAAAs1B,IAEA,OAAA9uB,KAEA,OAzCA,SAAA6gB,EAAArnB,GACA,QAAA8F,IAAA9F,EACA,OAAAi1B,EAAA5N,GAAA,GAEA,IAAA8N,EAAAF,EAAA5N,GACA,GAAA8N,EAAA,CACA,GAAAn1B,KAAAm1B,EACA,OAAAA,EAAAn1B,GAEA,IAAAu1B,EAAAnW,EAAApf,GACA,GAAAu1B,KAAAJ,EACA,OAAAA,EAAAI,GAGA,IAAAP,EAAA,QAAAh1B,EAAAqE,QAAAwvB,EAAA,OAAAhzB,cACA,OAAAygB,EAAA+F,EAAA2N,GA0BAQ,CAAAnO,EAAArnB,GAIA,OADAq1B,EAAAhO,EAAArnB,EAAAoB,GACAoF,KAQA,SAAAivB,EAAApO,GACAA,EAAA,iBACAA,EAAA,SAiFA,SAAA1U,EAAA0U,EAAAqO,GACA,YAAA5vB,IAAA4vB,EACArO,EAAAsO,aAEAtO,EAAAsO,YAAA,MAAAD,EAAA,GAAA,GAAAA,EACAlvB,MASA,SAAA+a,EAAA8F,EAAAjmB,GACA,IAAAw0B,EAAAlB,EAAArN,EAAA1mB,OAAA+zB,EAAArN,EAAAD,SAAAvmB,eACA,QAAAiF,IAAA1E,EAgBA,OAAAw0B,GAAA,QAAAA,QAAA9vB,KAAAuH,IAAAuoB,EAAAvkB,IAAAgW,EAAA,UACAha,KAGAA,IAAAga,EAAAjmB,MAGA,iBAAAiM,IACAA,IAAAhJ,QAAA,MAAA,IAIA,MAAAgJ,IAAA,GAAAA,KAYA,MAAAjM,EACAA,EAAA,GAEA,iBAAAA,EACAA,GAAA,GAEA4hB,EAAAviB,QAAAW,KACAA,EAAA4hB,EAAAnY,IAAAzJ,EAAA,SAAAy0B,GACA,OAAA,MAAAA,EAAA,GAAAA,EAAA,MAKAD,GAAA,QAAAA,QAAA9vB,IAAA8vB,EAAApkB,IAAA6V,EAAAjmB,EAAA,WACAimB,EAAAjmB,MAAAA,GAWA,SAAA00B,IACA,OAAAA,EA6BA,OArUA9S,EAAAxb,MAAA,QAAA,YAAA,WACAktB,EAAAluB,OACAgL,IAAA,SAAAge,EAAApuB,GACA,GAAA4hB,EAAAviB,QAAAW,GACA,OAAAouB,EAAAvc,QAAA+P,EAAA5Y,QAAAmX,EAAAiO,GAAApuB,IAAA,MA8RAqyB,EAAAvE,QAAA/gB,KAAA,SAAAqhB,EAAAzvB,EAAAqR,EAAA2kB,GACA,QAAA5nB,EAAAqhB,EAAAuG,GAAA3kB,EAAA,KAQA4R,EAAA1c,MAAAwvB,GACAE,KAjRA,SAAA3O,EAAArnB,EAAAoB,GACA,OAAAoF,KAAA8a,KAAA+F,EAAA,QAAArnB,EAAAoB,IAkRAkgB,KAAAA,EAEAmU,UAAAA,EAEAtnB,KAAAA,EAEA8nB,MAlJA,SAAAhP,EAAAiP,GACA,OAAArrB,EAAA9J,KAAAkmB,EAAA,SAAAI,GACA,OAAAA,EAAA6O,MAkJAhtB,KAxIA,SAAAme,EAAArnB,EAAAoB,GAEA,OADApB,EAAA8zB,EAAA9zB,IAAAA,OACA8F,IAAA1E,EACAimB,EAAArnB,IAEAqnB,EAAArnB,GAAAoB,EACAoF,OAoIA2vB,WA3HA,SAAA9O,EAAArnB,GAIA,OAHAA,EAAAJ,MAAA,KAAAgB,QAAA,SAAA0gB,IA3KA,SAAA+F,EAAArnB,EAAAoB,GACA,MAAAA,EACAimB,EAAA+O,gBAAAp2B,GAEAqnB,EAAAU,aAAA/nB,EAAAoB,GAwKA2mB,CAAAV,EAAA/F,KAEA9a,MAyHA6vB,WA5KA,SAAAhP,EAAAiP,GACA,GAAAA,EAAA,CACAtT,EAAAvhB,SAAA60B,KACAA,EAAAA,EAAA12B,MAAA,QAEA,IAAAu1B,EAAAF,EAAA5N,GAAA,GACAiP,EAAA11B,QAAA,SAAAZ,UACAm1B,EAAAn1B,UAGAy1B,EAAApO,GAEA,OAAA7gB,MAkKA+vB,WAlHA,SAAAlP,EAAArnB,GAIA,OAHAA,EAAAJ,MAAA,KAAAgB,QAAA,SAAAsI,UACAme,EAAAne,KAEA1C,MAgHAmM,KAAAA,EAEA4O,IAAAA,EAEAmT,SAAAA,IAGAx0B,EAAAC,OAAA,YAAA21B,KAEAt2B,OAAA,4BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAA8iB,EAAAuF,EAAAkL,GACA,IAUA+C,EAVAC,EAAAj2B,MAAAgC,UAAAi0B,KACAlxB,EAAA/E,MAAAgC,UAAA+C,KAGAf,GAFAhE,MAAAgC,UAAAk0B,MACAl2B,MAAAgC,UAAAgI,OACAhK,MAAAgC,UAAAgC,OAEA6E,GADA7I,MAAAgC,UAAAqI,IACArK,MAAAgC,UAAA6G,QACAzI,EAAAJ,MAAAgC,UAAA5B,QACAuH,EAAA3H,MAAAgC,UAAA2F,QACAsM,EAAAjU,MAAAgC,UAAAiS,KAGAkiB,EAAA,2CAEA1T,EAAAD,EAAAC,QACArhB,EAAAohB,EAAAphB,YACAH,EAAAuhB,EAAAvhB,SACAwJ,EAAA+X,EAAA/X,KACA9J,EAAA6hB,EAAA7hB,WAEAR,EAAAqiB,EAAAriB,KAOAa,GANAwhB,EAAAviB,QAEAuiB,EAAAthB,SAEAshB,EAAAjhB,WAEAihB,EAAAxhB,UAEAwhB,EAAA3gB,cAEA2gB,EAAAlZ,QAEAkZ,EAAApZ,QAEAoZ,EAAA5D,UAEA4D,EAAA1D,UACAmU,EAAAvH,SAEA,SAAA0K,EAAA3sB,EAAA2M,EAAAigB,GACA,OAAA,SAAAzN,GACA,IAAA0N,EAAA7P,EAAAjE,EAAAnY,IAAA3E,UAAA,SAAA0B,GAEA,MAAA,aADAkvB,EAAAn2B,EAAAiH,KACA,UAAAkvB,GAAA,SAAAA,GAAA,MAAAlvB,EACAA,EAAA2gB,EAAAY,eAAAvhB,KAEA,OAAAqf,EAAApnB,OAAA,EACA2G,MAEAA,KAAAgB,KAAA,SAAAuB,GACAkB,EAAA1D,MAAAqQ,GAAApQ,KAAAygB,EAAAle,EAAA,MAEAvC,OAIA,SAAAuwB,EAAA9sB,EAAA2M,GACA,OAAA,WACA,IACA3Q,EAAAzB,EAAAzD,KAAAmF,WACAxB,EAAAse,EAAAnY,IAFArE,KAEA,SAAAgpB,EAAAzmB,GACA,OAAAkB,EAAA1D,MAAAqQ,GAAA4Y,GAAAhlB,OAAAvE,MAEA,OAAAiO,EAAAjJ,EAAAvG,KAIA,SAAAsyB,EAAA/sB,EAAA2M,EAAAiX,GACA,OAAA,SAAA3f,GAEA1J,EAAAzD,KAAAmF,WADA,IAEAxB,EAAA8B,KAAAqE,IAAA,SAAA9B,EAAAymB,GAEA,OAAAA,EAAAkC,cACAznB,EAAA1D,MAAAqQ,EAAAiX,GAAA2B,IAAAA,EAAAthB,SAKA,OAAA2f,GAAA3f,EACAxJ,EAAA2E,OAAA6E,GAEAxJ,GAKA,SAAAuyB,EAAAhtB,EAAA2M,EAAAiX,GACA,OAAA,SAAAqJ,EAAAhpB,GAEA1J,EAAAzD,KAAAmF,WADA,IAMAxB,EAAA8B,KAAAqE,IAAA,SAAA9B,EAAAymB,GAGA,OAAAvlB,EAAA1D,MAAAqQ,EAAAiX,GAAA2B,EAAA0H,IAAA1H,EAAAthB,EAAAgpB,MAKA,OAAArJ,GAAA3f,EACAxJ,EAAA2E,OAAA6E,GAEAxJ,GAMA,SAAAyyB,EAAAltB,EAAA2M,GACA,OAAA,WACA,IACA3Q,EAAAzB,EAAAzD,KAAAmF,WAIA,OAHAM,KAAAgB,KAAA,SAAAuB,EAAA+T,GACA7S,EAAA1D,MAAAqQ,GAAApQ,MAAAgE,OAAAvE,MAHAO,MAuDA,SAAA4wB,EAAAntB,EAAA2M,EAAAigB,GACA,OAAA,SAAAz1B,GAGA,OAAA4hB,EAAAlhB,UAAAV,IACAR,EAAAG,KAHAyF,KAGA,SAAAgpB,EAAAzmB,GACA,IAAAsuB,EAEAA,EADAR,EACA5T,EAAAuM,EAAApuB,EAAA2H,EAAA8tB,EAAArH,IAEApuB,EAEA6I,EAAA1D,MAAAqQ,GAAA4Y,EAAA6H,MAVA7wB,MAAAA,KAcA,GACAyD,EAAA1D,MAAAqQ,GAfApQ,KAeA,UADA,GAQA,IAmfAukB,EAnfAuM,EAAAtU,EAAAtV,OACAf,UAAA,aACArB,KAAA,SAAA4C,EAAA0I,GACA,IACAxF,EAAA6V,EAAAnK,EAAAvR,EAsDA,GApDA2C,IAHA1H,KAIAoQ,QAAAA,EAAAA,GAAA2R,EAAAE,MAEAhnB,EAAAyM,IANA1H,KAQA0H,SAAAA,GAGAkD,EADA,MAAAlD,EAAA0R,OAAA,IAAA,MAAA1R,EAAA0R,OAAA1R,EAAArO,OAAA,IAAAqO,EAAArO,QAAA,GACA,KAAAqO,EAAA,MAEAyoB,EAAAnZ,KAAAtP,IAIAkD,EAAA,IAEA6V,EAAAsB,EAAAY,eAAAjb,GAEA8U,EAAA3gB,cAAAuU,KACArL,EAAAqL,KAIAkG,EAAA2W,EAAAE,KAAAviB,EAAA,GAAAmX,EAAAF,SAAAzR,OAIAqQ,GAAAnK,KAMAkG,EAAAvhB,SAAAmV,KACAA,EAAA6c,EAAAnqB,KAAAsN,IAGAqQ,EAAAwM,EAAAnC,YAAA1a,EAAA1I,KAKA+Y,EAFA/Y,IAAAvM,QAAAC,EAAAsM,GAEAA,GAGAA,IAOA+Y,IAEA1hB,EAAAgB,MAzDAC,KAyDAygB,GAEA1b,GACA,IAAA,IAAAvL,KAAAuL,EAEAyX,EAAA7hB,WAAAqF,KAAAxG,IACAwG,KAAAxG,GAAAuL,EAAAvL,IAEAwG,KAAA8a,KAAAthB,EAAAuL,EAAAvL,IAMA,OAvEAwG,QA2EA0N,EAAA,WACAsiB,EAAA,SAAAx1B,GACA,OAAAA,aAAAs2B,GAEAhsB,KAAA,SAAA4C,EAAA0I,GACA,OAAA,IAAA0gB,EAAAppB,EAAA0I,IAGA,IAAAmU,EAAA,SAAA7c,EAAA0I,GACA,OAAAzV,EAAA+M,IACA6c,EAAAwM,MAAA,WACArpB,EAAA6c,KAEAyM,GACAhB,EAAAtoB,GACAA,EAEA0I,GAAA4f,EAAA5f,IAAAnV,EAAAyM,GACA0I,EAAAtN,KAAA4E,GAEA5C,KAAA4C,EAAA0I,IAEA4gB,EAAAzM,EAAA1N,UAEA0N,EAAAngB,GAAA0sB,EAAA90B,UACAwgB,EAAA1c,MAAAykB,EAAAngB,IAGA/K,OAAA,EAEAgL,IAAA,SAAAD,GACA,OAAAmgB,EAAA9f,EAAA+X,EAAAnY,IAAArE,KAAA,SAAAkiB,EAAA3oB,GACA,OAAA6K,EAAA7J,KAAA2nB,EAAA3oB,EAAA2oB,QAIAlkB,MAAA,WACA,OAAAumB,EAAAvmB,EAAA+B,MAAAC,KAAAN,aAGAtF,QAAA,WACA,OAAAA,EAAA2F,MAAAC,KAAAN,YAGAmL,IAAA,SAAAtI,GACA,YAAAjD,IAAAiD,EAAAvE,EAAAzD,KAAAyF,MAAAA,KAAAuC,GAAA,EAAAA,EAAAA,EAAAvC,KAAA3G,SAGAsI,QAAA,WACA,OAAAA,EAAA5B,MAAAC,KAAAN,YAGAuO,KAAA,WACA,OAAAA,EAAAlO,MAAAC,KAAAN,YAGA4K,QAAA,WACA,OAAAtM,EAAAzD,KAAAyF,OAGAixB,KAAA,WACA,OAAAjxB,KAAA3G,QAIA8R,OAAA,SAAAzD,GACA,OAAAA,EACA1H,KAAA8C,KAAA4E,GAAAyD,UAEAnL,KAAAgB,KAAA,SAAAzH,EAAA+c,GACAyL,EAAA5W,OAAAmL,KAEAtW,OAGAgB,KAAA,SAAAC,GAEA,OADAub,EAAAxb,KAAAhB,KAAAiB,GACAjB,MAGA6C,OAAA,SAAA6E,GACA,OAAA/M,EAAA+M,GAAA1H,KAAA2pB,IAAA3pB,KAAA2pB,IAAAjiB,IACA6c,EAAA1hB,EAAAtI,KAAAyF,KAAA,SAAAikB,GACA,OAAAgJ,EAAAze,QAAAyV,EAAAvc,OAIAsH,IAAA,SAAAtH,EAAA0I,GACA,OAAAmU,EAAA9f,EAAAzE,KAAAsK,UAAAtG,OAAAugB,EAAA7c,EAAA0I,GAAA9F,cAGAka,GAAA,SAAA9c,GACA,GAAA1H,KAAA3G,OAAA,EAAA,CAEA,GAAAmjB,EAAAvhB,SAAAyM,GACA,OAAAuoB,EAAA11B,KAFAyF,KAEA,SAAAgpB,GACA,OAAAiE,EAAAze,QAAAwa,EAAAthB,KAEA,GAAA8U,EAAAphB,YAAAsM,GACA,OAAAuoB,EAAA11B,KANAyF,KAMA,SAAAgpB,GACA,OAAAxM,EAAA5Y,QAAAolB,EAAAthB,IAAA,IAEA,GAAA8U,EAAA3hB,WAAA6M,GACA,OAAAuoB,EAAA11B,KAVAyF,KAUA,SAAAgpB,GACA,OAAAA,GAAAthB,IAIA,OAAA,GAGAiiB,IAAA,SAAAjiB,GACA,IAAA+Y,KACA,GAAA9lB,EAAA+M,SAAApI,IAAAoI,EAAAnN,KACAyF,KAAAgB,KAAA,SAAAuB,EAAA+T,GACA5O,EAAAnN,KAAAyF,KAAAuC,EAAA+T,IAAAmK,EAAA1hB,KAAAiB,YAEA,CACA,IAAAkxB,EAAA,iBAAAxpB,EAAA1H,KAAA6C,OAAA6E,GACAtM,EAAAsM,IAAA/M,EAAA+M,EAAApF,MAAAtE,EAAAzD,KAAAmN,GAAA6c,EAAA7c,GACA1H,KAAA5F,QAAA,SAAA8nB,GACAgP,EAAAvvB,QAAAugB,GAAA,GAAAzB,EAAA1hB,KAAAmjB,KAGA,OAAAqC,EAAA9D,IAGAzhB,IAAA,SAAA0I,GACA,OAAA1H,KAAA6C,OAAA,WACA,OAAA7H,EAAA0M,GACAqa,EAAAH,SAAA5hB,KAAA0H,GACA6c,EAAAvkB,MAAA8C,KAAA4E,GAAAupB,UAIA5yB,GAAA,SAAAkE,GACA,OAAA,IAAAA,EAAAvC,KAAAhC,MAAAuE,GAAAvC,KAAAhC,MAAAuE,GAAAA,EAAA,IAGAgB,MAAA,WACA,OAAAvD,KAAA3B,GAAA,IAGAgpB,KAAA,WACA,OAAArnB,KAAA3B,IAAA,IAGAyE,KAAA0tB,EAAAvD,EAAAnC,YAAAmC,GAEAxI,QAAA+L,EAAAvD,EAAAxI,QAAAwI,GAaAkE,QAAAX,EAAAvD,EAAAtC,UAAAsC,GAEAmE,aAAAX,EAAAxD,EAAAtC,UAAAsC,GAGAjoB,OAAAwrB,EAAAvD,EAAAjoB,OAAAioB,GAEAvH,SAAA8K,EAAAvD,EAAAvH,SAAAuH,GAEAzK,SAAA+N,EAAAxO,EAAAS,SAAAT,GAEAwB,MAAAoN,EAAA5O,EAAAwB,MAAAxB,GAEAa,KAAAgO,EAAA7O,EAAAa,KAAAb,GAGA0N,MAAA,SAAAC,GACA,OAAAlT,EAAAnY,IAAArE,KAAA,SAAAkiB,GACA,OAAAA,EAAAwN,MAIA2B,UAAA,SAAAC,GACA,IAAAzqB,EAAA0d,EAAA+M,GAEA,OADAzqB,EAAA0qB,WAAAvxB,KACA6G,GAGA2qB,YAAA,SAAAC,GACA,OAAAzxB,KAAA2P,OAAA8hB,GAAAtmB,UAGAumB,KAAA,SAAA9O,GAcA,IAAA+O,EAAA,mBAAA/O,EAEA,OAAA5iB,KAAAgB,KAAA,SAAAzH,GACAgrB,EAAAvkB,MAAA4xB,QAAAD,EAAA/O,EAAAroB,KAAAyF,KAAAzG,GAAAqpB,MAIAgP,QAAA,SAAAhP,GAaA,IAAA8O,EAyBA,OAvBA1xB,KAAA,KACA,mBAAA4iB,IACAA,EAAAA,EAAAroB,KAAAyF,KAAA,KAIA0xB,EAAAnN,EAAA3B,EAAA5iB,KAAA,GAAA8hB,eAAAzjB,GAAA,GAAAqC,OAAA,GAEAV,KAAA,GAAAmhB,YACAuQ,EAAAtM,aAAAplB,KAAA,IAGA0xB,EAAArtB,IAAA,WAGA,IAFA,IAAA2kB,EAAAhpB,KAEAgpB,EAAA6I,mBACA7I,EAAAA,EAAA6I,kBAGA,OAAA7I,IACA9H,OAAAlhB,OAGAA,MAIA8xB,UAAA,SAAAlP,GAUA,MAAA,mBAAAA,EACA5iB,KAAAgB,KAAA,SAAAzH,GACAgrB,EAAAvkB,MAAA8xB,UAAAlP,EAAAroB,KAAAyF,KAAAzG,MAIAyG,KAAAgB,KAAA,WACA,IAAA8G,EAAAyc,EAAAvkB,MACAwiB,EAAA1a,EAAA0a,WAEAA,EAAAnpB,OACAmpB,EAAAoP,QAAAhP,GAGA9a,EAAAoZ,OAAA0B,MAMAqD,OAAA,SAAAve,GAiBA,OAHA1H,KAAAgF,OAAA0C,GAAAiiB,IAAA,QAAA3oB,KAAA,WACAujB,EAAAvkB,MAAAwxB,YAAAxxB,KAAA0iB,cAEA1iB,MAIAU,MAAA,WACA,OAAAV,KAAAqE,IAAA,WACA,OAAArE,KAAA2gB,WAAA,MAKAoR,OAAA,SAAAC,GACA,OAAAhyB,KAAAgB,KAAA,WACA,IAAAkhB,EAAAqC,EAAAvkB,YACAV,IAAA0yB,EAAA,QAAA9P,EAAA+P,IAAA,WAAAD,GAAA9P,EAAAgQ,OAAAhQ,EAAAiQ,UAIA5W,KAAA,SAAA7T,GACA,OAAA6c,EAAAvkB,KAAAyvB,MAAA,2BAAA5sB,OAAA6E,GAAA,MAGA0qB,QAAA5B,EAAAvD,EAAAzB,iBAAAyB,GAEA5iB,KAAA,SAAA3C,GACA,OAAA6c,EAAAvkB,KAAAyvB,MAAA,uBAAA5sB,OAAA6E,GAAA,MAGA2qB,QAAA7B,EAAAvD,EAAA1B,aAAA0B,GAEAxB,SAAA+E,EAAAvD,EAAAxB,SAAAwB,GAEAnsB,MAAA,SAAAkoB,GACA,OAAAA,EACAhpB,KAAA2B,QAAA4iB,EAAAyE,GAAA,IAEAhpB,KAAAgF,SAAA0gB,WAAA/jB,QAAA3B,KAAA,OAMAukB,EAAAngB,GAAAkuB,OAAA/N,EAAAngB,GAAA+G,OAEAoZ,EAAAngB,GAAAmuB,MAAA,SAAAC,EAAAC,GACA,OAAAzyB,KAAA0yB,WAAAF,GAAAG,WAAAF,GAAAD,IAIAzQ,EAAA8D,SAiEA,OA9DAtB,EAAAngB,GAAAyL,MAAAugB,EAAArO,EAAAlS,MAAAkS,GAEAwC,EAAAngB,GAAAihB,QAAA+K,EAAArO,EAAAsD,QAAAtD,GAEAwC,EAAAngB,GAAAuL,OAAAygB,EAAArO,EAAApS,OAAAoS,GAEAwC,EAAAngB,GAAA8c,OAAAkP,EAAArO,EAAAb,OAAAa,GAGAvF,EAAAxb,MACA4xB,SAAA,SACAC,UAAA,UACAzN,aAAA,SACA0N,YAAA,QACAC,WAAA,eACA,SAAAv5B,EAAAw5B,GACAzO,EAAAngB,GAAA5K,GAAA,SAAAkO,GAOA,IANA,IAAAurB,EACApsB,KACAqsB,EAAA3O,EAAA7c,GACA2f,EAAA6L,EAAA75B,OAAA,EACAE,EAAA,EAEAA,GAAA8tB,EAAA9tB,IACA05B,EAAA15B,IAAA8tB,EAAArnB,KAAAA,KAAAU,OAAA,GACA6jB,EAAA2O,EAAA35B,IAAAy5B,GAAAC,GAIAl0B,EAAAgB,MAAA8G,EAAAosB,EAAApoB,OAGA,OAAA7K,KAAAqxB,UAAAxqB,MA8BA0d,EAlaA,GA4kBA,OAvKAA,EAmBA7W,GAlBAtJ,GAAA+uB,aAAA,SAAAC,GACA,IAAArO,EAAA/kB,KAAAiyB,IAAA,YACAoB,EAAA,aAAAtO,EACAuO,EAAAF,EAAA,uBAAA,gBACAD,EAAAnzB,KAAAmxB,UAAAtuB,OAAA,WACA,IAAAmC,EAAAuf,EAAAvkB,MACA,QAAAqzB,GAAA,WAAAruB,EAAAitB,IAAA,cAGAqB,EAAAv1B,KAAAiH,EAAAitB,IAAA,YAAAjtB,EAAAitB,IAAA,cACAjtB,EAAAitB,IAAA,iBACA5zB,GAAA,GAEA,MAAA,UAAA0mB,GAAAoO,EAAA95B,OAEA85B,EADA5O,EAAAvkB,KAAA,GAAA8hB,eAAAjL,WAOA,SAAA0N,GACAA,EAAAngB,GAAAob,IAAA,WACA,OAAAxf,KAAAuxB,YAAAhN,KAGAA,EAAAngB,GAAAmvB,QAAA,WACA,OAAAvzB,KAAAgP,IAAAhP,KAAAuxB,YAAAhN,MAGAA,EAAAngB,GAAAovB,QAAA,SAAA9rB,GACA,OAAA1H,KAAAuxB,WACA7pB,EACA1H,KAAAgP,IAAAhP,KAAAuxB,WAAA1uB,OAAA6E,IAEA1H,KAAAgP,IAAAhP,KAAAuxB,YAGAvxB,MAIA,uGAAA5G,MAAA,KAAAgB,QAAA,SAAAs1B,GACA,IAAAtrB,EAAAmgB,EAAAngB,GAAAsrB,GACAnL,EAAAngB,GAAAsrB,GAAA,WACA,IAAA7oB,EAAAzC,EAAArE,MAAAC,KAAAN,WAEA,OADAmH,EAAA0qB,WAAAvxB,KACA6G,KA1BA,CA6BA6G,GAGA,SAAA6W,GA6DA,IACAkP,EA7DAlP,EAAAngB,GAAAsJ,MAAA6W,EAAAngB,GAAAtB,KAEAyhB,EAAAngB,GAAAsvB,MAAA,SAAAxO,EAAAH,GAwBA,OALAvI,EAAAvhB,SAAAiqB,GACAA,EAAA+H,EAAAhC,WAAA/F,GACA8K,EAAA9K,KACAA,EAAAA,EAAA,IAEAllB,KAAAgB,KAAA,SAAAzH,EAAA+c,GACA,OAAAyO,GACA,IAAA,SACAhD,EAAApS,OAAAuV,EAAA5O,GACA,MACA,IAAA,QACAyL,EAAAlS,MAAAqV,EAAA5O,GACA,MACA,IAAA,UACAyL,EAAAlkB,QAAAqnB,EAAA5O,GACA,MACA,IAAA,OACAyL,EAAAwB,MAAA2B,GACAnD,EAAAb,OAAAgE,EAAA5O,GACA,MACA,IAAA,QACAyL,EAAAsD,QAAAH,EAAA5O,GACA,MAEA,QACAyL,EAAAb,OAAAgE,EAAA5O,OAKAiO,EAAAngB,GAAAuvB,WAAA,SAAAC,EAAA7O,GAIA,OAHA6O,EAAA1hB,WACA0hB,EAAApX,EAAAhD,WAAAoa,EAAA1hB,SAAA0hB,IAEA5zB,KAAAkhB,OAAA0S,IAKArP,EAAAngB,GAAAyvB,kBACAJ,EAAA,kBAAA5c,SAAAqH,cAAA,OACA,cACA,YAEA,WACA,OAAAle,KAAAwH,GAAAisB,EAAA,uBAAA,SAAArsB,GACAA,EAAA0sB,qBAKAvP,EAAAngB,GAAA2vB,gBAAA,WACA,OAAA/zB,KAAAmJ,IAAA,yBAGAob,EAAAngB,GAAAkhB,OAAA,WACA,OAAAvD,EAAAiS,KAAAh0B,KAAA,KAGAukB,EAAAngB,GAAA6vB,YAAA,WACA,OAAAlS,EAAAkS,YAAAj0B,KAAA,KAlFA,CAsFA0N,GAEAA,EAAAtJ,GAAA8vB,OAAA,SAAA16B,EAAA0L,GACA,IAAA1F,EAAAxB,EAAAzD,KAAAmF,UAAA,GACAoI,EAAA9H,KACAm0B,EAAAn0B,KAKA,OAHAA,KAAAgB,KAAA,WACAmzB,EAAAC,QAAAC,YAAAt0B,MAAA+H,GAAA9H,KAAAxG,GAAAwK,OAAAxE,MAEA20B,GAIAzmB,EAAA4mB,OACAlE,uBAAAA,EACAG,YAAAA,EACAK,cAAAA,EACAJ,iBAAAA,EACA+D,iBA5sBA,SAAA9wB,EAAA2M,GACA,OAAA,WACA,IACA3Q,EAAAzB,EAAAzD,KAAAmF,WACA,OAAAuwB,EAAA11B,KAFAyF,KAEA,SAAAgpB,GACA,OAAAvlB,EAAA1D,MAAAqQ,GAAA4Y,GAAAhlB,OAAAvE,QAwsBAgxB,uBAAAA,EACA+D,+BA1tBA,SAAA/wB,EAAA2M,EAAAigB,GACA,OAAA,SAAAlU,GACA,IACA1c,EAAAzB,EAAAzD,KAAAmF,WAKA,OAJAtF,EAAAG,KAFAyF,KAEA,SAAAgpB,EAAAzmB,GACA,IAAAkyB,EAAAhY,EAAAuM,EAAA7M,EAAA5Z,EAAA8tB,EAAArH,IACAvlB,EAAA1D,MAAAqQ,GAAA4Y,EAAAyL,GAAAzwB,OAAAvE,EAAAzB,MAAA,OAJAgC,OAytBA2wB,kBAAAA,EACA+D,mBAtsBA,SAAAjxB,EAAA2M,EAAAigB,GACA,OAAA,SAAA72B,EAAAoB,GAGA,OAAA4hB,EAAA3gB,cAAArC,IAAAgjB,EAAAlhB,UAAAV,IACAR,EAAAG,KAHAyF,KAGA,SAAAgpB,EAAAzmB,GACA,IAAAsuB,EAEAA,EADAR,EACA5T,EAAAuM,EAAApuB,EAAA2H,EAAA8tB,EAAArH,EAAAxvB,IAEAoB,EAEA6I,EAAA1D,MAAAqQ,GAAA4Y,EAAAxvB,EAAAq3B,MAVA7wB,MAAAA,KAcA,GACAyD,EAAA1D,MAAAqQ,GAfApQ,KAeA,GAAAxG,SADA,KA0rBAE,EAAAC,OAAA,aAAA+T,KAGA1U,OAAA,2BACA,WACA,SAAA0U,GACA,OAAAA,IAEA1U,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,sBACA,sBACA,SAAAU,EAAA8iB,EAAAuF,EAAAkL,EAAA1I,GACA,IAAAlgB,EAAArK,MAAAgC,UAAAqI,IACArG,EAAAhE,MAAAgC,UAAAgC,MAKA22B,EAAAnY,EAAAtV,OACAf,UAAA,gBAEAtB,WAAA,SAAAyR,GACAkG,EAAAvhB,SAAAqb,KAGAA,EAFA,MAAAA,EAAA8C,OAAA,GAEA2I,EAAAY,eAAArM,GAAA,GAGAO,SAAA6B,eAAApC,IAGAtW,KAAA40B,KAAAte,KAIAqe,EAAA34B,UAAAuoB,EAAAoQ,EAAA34B,UAAA0R,MAAA,SAAAhG,GACA,OAAA6c,EAAA7c,EAAA1H,KAAA40B,OAGAD,EAAA34B,UAAA6kB,IAAA,WACA,OAAA7gB,KAAA40B,MAMA,IAAAhK,EAAA,IAAA+J,EAAA9d,SAAAwB,MACAwc,EAAA,SAAAve,GACA,OAAAA,EACA,IAAAqe,EAAAre,GAEAsU,GAgIA,OA7FApO,EAAA1c,MAAA+0B,GACAC,MAAA,SAAArU,EAAAsU,EAAAv1B,GAMA,OALAihB,EAAArmB,QAAA,SAAAkc,GACA,IAAAuK,EAAAvK,aAAAqe,EAAAre,EAAAue,EAAAve,GACAuK,EAAAkU,GAAAh1B,MAAA8gB,EAAArhB,KAGAQ,MAGA4qB,KAAA,IAAA+J,EAAA9d,SAAAwB,MAEAsc,cAAAA,EAEAtuB,QAAA,SAAA7M,EAAA4K,GACA,IAAAW,KAEAA,EAAAvL,GAAA4K,EAEAuwB,EAAAtuB,QAAAtB,IAGAuI,SAAA,SAAAwiB,EAAA1f,GACA,IAAArL,KAEA+qB,EAAA11B,QAAA,SAAAZ,GACAuL,EAAAvL,GArDA,SAAA4K,EAAAgM,GACA,OAAA,WACA,IACA4Y,EADAhpB,KACA40B,KACA/tB,EAAAzC,EAAArE,MAAAqQ,GAAA4Y,GAAAhlB,OAAAhG,EAAAzD,KAAAmF,aAEA,GAAAmH,EAAA,CACA,GAAAA,IAAAuJ,EACA,OANApQ,KAQA6G,aAAAmuB,YACAnuB,EAAA,IAAA8tB,EAAA9tB,GACA2V,EAAAphB,YAAAyL,KACAA,EAAAxC,EAAA9J,KAAAsM,EAAA,SAAAqb,GACA,OAAAA,aAAA8S,YACA,IAAAL,EAAAzS,GAEAA,KAMA,OAAArb,GA8BAouB,CAAA7kB,EAAA5W,GAAA4W,KAGAukB,EAAAtuB,QAAAtB,MAKA8vB,EAAAvnB,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACA2f,GAMA4H,EAAA/xB,KAAA,SAAA4E,GACA,MAAA,SAAAA,EACA1H,KAAA4qB,KAEA5qB,KAAA4qB,KAAAK,WAAAvjB,IAMAmtB,EAAAvnB,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,aACA,eACA,WACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACAyU,GAGAroB,EAAAC,OAAA,YAAAk7B,KAEA77B,OAAA,0BACA,UACA,SAAA67B,GACA,OAAAA,IAEA77B,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,SACA,oBACA,sBACA,SAAA2O,EAAAktB,EAAAtQ,GA6BA,OA3BAsQ,EAAAvnB,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACA3F,GAEA4c,EAAAngB,GAAA+H,KAAAoY,EAAA+P,MAAA1D,cAAAjpB,EAAAwE,KAAAxE,EAAAA,EAAAwE,MAEAoY,EAAAngB,GAAA0W,KAAAyJ,EAAA+P,MAAAI,mBAAA/sB,EAAAmT,KAAAnT,EAAAA,EAAAmT,MAEAyJ,EAAAngB,GAAAurB,WAAApL,EAAA+P,MAAA3D,kBAAAhpB,EAAAgoB,WAAAhoB,GAEA4c,EAAAngB,GAAA1B,KAAA6hB,EAAA+P,MAAAI,mBAAA/sB,EAAAjF,KAAAiF,EAAAA,EAAAjF,MAEA6hB,EAAAngB,GAAA2rB,WAAAxL,EAAA+P,MAAA3D,kBAAAhpB,EAAAooB,WAAApoB,GAEA4c,EAAAngB,GAAAuD,KAAA4c,EAAA+P,MAAAI,mBAAA/sB,EAAAA,KAAAA,GAEA4c,EAAAngB,GAAAyrB,WAAAtL,EAAA+P,MAAA3D,kBAAAhpB,EAAAkoB,YAEAtL,EAAAngB,GAAA2W,IAAAwJ,EAAA+P,MAAA1D,cAAAjpB,EAAAoT,IAAApT,EAAAA,EAAAoT,KAGApT,IAEA3O,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,wBACA,sBACA,uBACA,sBACA,qBACA,qBACA,SAAAU,EAAA8iB,EAAAnG,EAAA4W,EAAAlL,EAAAuN,GACA9S,EAAA1c,MAAA,IACAkB,EAAAwb,EAAAxb,KAEAic,GADAjjB,MAAAgC,UAAAgC,MACAwe,EAAAS,KACAiY,EAAA,mCACAC,GACArB,eAAA,qBACAsB,yBAAA,gCACAC,gBAAA,wBAEAC,EAAA,8BAEA,SAAAC,EAAAnuB,EAAAjI,GAeA,OAdAA,GAAAiI,EAAAouB,qBACAr2B,IACAA,EAAAiI,GAGAoV,EAAAxb,KAAAm0B,EAAA,SAAA37B,EAAAyJ,GACA,IAAAwyB,EAAAt2B,EAAA3F,GACA4N,EAAA5N,GAAA,WAEA,OADAwG,KAAAiD,GAAAuZ,EAAAxK,WACAyjB,GAAAA,EAAA11B,MAAAZ,EAAAO,YAEA0H,EAAAnE,GAAAuZ,EAAAvK,eAGA7K,EAGA,SAAAD,EAAAC,GACA,IAAAC,GAAA,GAAAD,GAAAhO,MAAA,KACA,OACAe,KAAAkN,EAAA,GACA/N,GAAA+N,EAAArJ,MAAA,GAAAiQ,OAAA3G,KAAA,MAKA,IAAAouB,GACAv6B,OAAA,YACAA,OAAA,iBACAA,OAAA,UACAA,OAAA,MACAA,OAAA,WACAA,OAAA,cACAA,OAAA,aACAA,OAAA,WACAA,OAAA,iBACAA,OAAA,gBACAA,OAAA,cACAA,OAAA,cACAA,OAAA,UACAA,OAAA,WACAA,OAAA,QACAA,OAAA,WACAA,OAAA,gBAEAw6B,GACAC,iBAAA,EACAC,eAAA,EACAC,kBAAA,EAEAC,WAAA,GACAC,UAAA,GACAC,YAAA,GACAp1B,KAAA,GACAq1B,IAAA,GACAC,MAAA,GAEAC,KAAA,EACAC,QAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,SAAA,EACAC,UAAA,EACAC,KAAA,EAEAC,MAAA,EACAC,OAAA,EACA3iB,MAAA,EACA4iB,gBAAA,EACArM,OAAA,EACAC,MAAA,EAEAvB,MAAA,EACA/G,KAAA,EACA2U,QAAA,EACAC,SAAA,EAEAC,QAAA,EACAC,SAAA,EACAC,MAAA,EAEAC,QAAA,EAEAC,MAAA,EACAC,YAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,UAAA,EACAC,UAAA,EACAC,SAAA,EACAlF,WAAA,EACAC,WAAA,EAGAkF,UAAA,GAEAC,WAAA,GACAC,UAAA,GACAC,SAAA,GAEAC,KAAA,GACAC,OAAA,GACA9J,OAAA,GACA+J,OAAA,GACAC,OAAA,GAEAC,MAAA,IAIA5uB,EAAA,WAUA,OAAA,SAAAtP,EAAA4K,GAGAyX,EAAAvhB,SAAAd,GACA4K,EAAAA,MAGA5K,GADA4K,EAAA5K,OACAA,MAAA,GAEA,IAAA6N,EAAAb,EAAAhN,GACAA,EAAA6N,EAAA7N,KAEA4K,EAAAyX,EAAA1c,OACAw4B,SAAA,EACAC,YAAA,GACAxzB,GAEAiD,EAAA1O,KACAyL,EAAAyzB,UAAAxwB,EAAA1O,IAGA,IAAA8L,EA7BA,SAAAjL,GACA,IAAAoI,EAAAozB,EAAAx7B,GACAoI,IACAA,EAAA,GAEA,OAAAmzB,EAAAnzB,GAwBAk2B,CAAAt+B,GACA+N,EAAA,IAAA9C,EAAAjL,EAAA4K,GAIA,OAFAyX,EAAA7Z,UAAAuF,EAAAnD,GAEAwwB,EAAArtB,IApCA,GAwCA,SAAAwwB,EAAA/3B,EAAAoE,GACA,IAAAjG,EACAqR,GACAwoB,cAAAh4B,GAEA,IAAA7B,KAAA6B,EACA,kBAAA7B,GAAAo2B,EAAAn3B,KAAAe,SAAAQ,IAAAqB,EAAA7B,KACAqR,EAAArR,GAAA6B,EAAA7B,IAMA,OAHAiG,GACAyX,EAAA1c,MAAAqQ,EAAApL,GAEAwwB,EAAAplB,EAAAxP,GAGA,IACAi4B,KACAC,EAAA,cAAA19B,OACAguB,GAAAA,MAAA,UAAA/G,KAAA,YACAmQ,GAAAG,WAAA,YAAAC,WAAA,YACAmG,EAAA,SAAA3+B,GACA,OAAAo4B,EAAAp4B,IAAA0+B,GAAA1P,EAAAhvB,IAAAA,GAEA4+B,KACAC,EAAAxc,EAAAtV,OACApC,KAAA,SAAA5F,EAAAkI,GACApH,KAAAi5B,QAAA/5B,EACAc,KAAAk5B,OAAA9xB,EACApH,KAAAm5B,cAGAnqB,IAAA,SAAA5K,EAAAc,GACA,IAAAk0B,EAAAp5B,KAAAm5B,UACAE,GACAj1B,GAAAA,EACAc,QAAAsX,EAAA1c,SAAAoF,IAGAk0B,EAAAr6B,KAAAs6B,GAEA,IAAAvxB,EAAA9H,KACA,IAAA8H,EAAAwxB,UAAA,CACAxxB,EAAAwxB,UAAA,SAAAC,GACA,IAAA1Y,EAAA7gB,KACAkI,EAAAwwB,EAAAa,GACA/5B,EAAA+5B,EAAAC,MACAJ,EAAAtxB,EAAAqxB,UACA7/B,EAAA4O,EAAAswB,UAGAh5B,EADAgd,EAAAlhB,UAAAkE,IACA0I,GAAAlE,OAAAxE,IAEA0I,GAGAsU,EAAAxb,KAAAo4B,EAAA,SAAA72B,EAAA82B,GACA,IAAAzuB,EAAAiW,EACA,GAAA3Y,EAAAuxB,+BAAAvxB,EAAAuxB,gCACA,OAAA,EAEA,IAAAr1B,EAAAi1B,EAAAj1B,GACAc,EAAAm0B,EAAAn0B,YACAwC,EAAAxC,EAAAwC,SACAG,EAAA3C,EAAA2C,IACAF,EAAAzC,EAAAyC,KAEA,IAAArO,GAAAA,GAAA4L,EAAA5L,KAAA,IAAA4L,EAAA5L,GAAAqI,QAAArI,GAAA,CAGA,GAAAoO,EAAA,CAEA,KADAkD,EAAAqiB,EAAAxI,QAAAvc,EAAAhJ,OAAAwI,KACAkD,IAAAiW,EAMA,OALArE,EAAA1c,MAAAoI,GACAwxB,cAAA9uB,EACA+uB,UAAA9Y,IAOA,IAAA8X,EAAA7wB,EAAAoxB,OACA,GAAAP,KAAApG,EAAA,CACA,IAAAqH,EAAA1xB,EAAA2xB,cACA,GAAAD,IAAAA,IAAAhvB,GAAAmX,EAAAH,SAAAhX,EAAAgvB,IACA,OAIApd,EAAAlhB,UAAAqM,KACAO,EAAAP,KAAAA,GAGAE,GACAC,EAAAqD,OAAA/G,EAAAc,GAGA,IAAAhH,EAAAkG,EAAArE,MAAA6K,EAAApL,IAEA,IAAAtB,IACAgK,EAAA4rB,iBACA5rB,EAAAmtB,uBAKA,IAAAjuB,EAAAU,EAAAoxB,OAaApxB,EAAAmxB,QAAAa,iBACAhyB,EAAAmxB,QAAAa,iBAAAhB,EAAA1xB,GAAAU,EAAAwxB,WAAA,GAEA9T,QAAAC,KAAA,yBAAA3d,EAAAmxB,WAKA9tB,OAAA,SAAA/G,EAAAc,GAMA,IAAAmN,EAHA/Y,GAFA4L,EAAAsX,EAAA1c,SAAAoF,IAMA5L,KAJAA,EAKA4L,EAAA5L,GAAA+Y,EAJA,IAAAC,OAAA,UAAAhZ,EAAAuE,QAAA,IAAA,SAAA,YAOAmC,KAAAm5B,UAAAn5B,KAAAm5B,UAAAt2B,OAAA,SAAAw2B,GACA,IAAAU,IAAA31B,GAAAA,IAAAi1B,EAAAj1B,OACAiO,GAAAA,EAAAtU,KAAAs7B,EAAAn0B,QAAA5L,QACA4L,EAAAwC,UAAAxC,EAAAwC,UAAA2xB,EAAAn0B,QAAAwC,UAEA,OAAAqyB,IAEA,GAAA/5B,KAAAm5B,UAAA9/B,SACA2G,KAAAi5B,QAAAe,qBACAh6B,KAAAi5B,QAAAe,oBAAAlB,EAAA94B,KAAAk5B,QAAAl5B,KAAAs5B,WAAA,GAEAt5B,KAAAs5B,UAAA,SAIAW,EAAAzd,EAAAtV,OACApC,KAAA,SAAA+b,GACA7gB,KAAAi5B,QAAApY,EACA7gB,KAAAk6B,aAKAC,SAAA,SAAA/yB,EAAAnG,EAAAiE,GAEA,IAAA8C,EAAAb,EAAAC,GACAA,EAAAY,EAAA7N,KACAigC,EAAAxB,EAAAxxB,GACAizB,EAAAD,IAAAA,EAAAE,UAAAF,EAAAG,eAEA9yB,EAAAzH,KAAAk6B,cAGA56B,IAAAmI,EAAAL,KACAK,EAAAL,GAAA,IAAA4xB,EAAAh5B,KAAAi5B,QAAAoB,GAAAjzB,IAIAK,EAAAL,GAAA4H,IAAA/N,EAAAub,EAAA1c,OACAxG,GAAA0O,EAAA1O,IACA4L,KAIAs1B,WAAA,SAAApzB,EAAAhD,EAAAc,GAEA,IAAAuC,EAAAzH,KAAAk6B,SACAlyB,EAAAb,EAAAC,GAGA,GAFAA,EAAAY,EAAA7N,KAEA,CACA,IAAAqO,EAAAf,EAAAL,GAEAoB,GACAA,EAAA2C,OAAA/G,EAAAoY,EAAA1c,OACAxG,GAAA0O,EAAA1O,IACA4L,SAIA,IAAAkC,KAAAK,EAAA,CACA,IAAAe,EAAAf,EAAAL,GACAoB,EAAA2C,OAAA/G,EAAAoY,EAAA1c,OACAxG,GAAA0O,EAAA1O,IACA4L,QAMAu1B,EAAA,SAAA5Z,GACA,IAAAnS,EAAAuO,EAAA4D,GACAjO,EAAAmmB,EAAArqB,GAIA,OAHAkE,IACAA,EAAAmmB,EAAArqB,GAAA,IAAAurB,EAAApZ,IAEAjO,GAwDA,SAAApL,EAAAqZ,EAAApZ,EAAAC,EAAAC,EAAA1G,EAAA4G,GAGA,GAAA2U,EAAA3gB,cAAA4L,GAIA,OAHA+U,EAAAxb,KAAAyG,EAAA,SAAAtN,EAAAiK,GACAoD,EAAAqZ,EAAA1mB,EAAAuN,EAAAC,EAAAvD,EAAAyD,KAEA7H,KAGAwc,EAAAvhB,SAAAyM,IAAA8U,EAAA7hB,WAAAsG,KACAA,EAAA0G,EACAA,EAAAD,EACAA,OAAApI,GAGAkd,EAAA7hB,WAAAgN,KACA1G,EAAA0G,EACAA,OAAArI,IAGA,IAAA2B,IACAA,EAAAub,EAAAvK,aAGA,iBAAAxK,IAEAA,EADAA,EAAA9F,QAAA,MAAA,EACA8F,EAAArO,MAAA,KAEAqO,EAAArO,MAAA,OAIA,IAAAwZ,EAAA6nB,EAAA5Z,GAYA,OAVApZ,EAAArN,QAAA,SAAAgN,GACA,GAAA,SAAAA,EACA,OAAA2pB,EAAA9vB,GAEA2R,EAAAunB,SAAA/yB,EAAAnG,GACA0G,KAAAA,EACAD,SAAAA,EACAG,MAAAA,MAGA7H,KA2DA,SAAA+wB,EAAA9vB,GASA,OANAq0B,EAAAv3B,KAAA8Y,SAAA6jB,aAAA7jB,SAAAwB,KACAmE,EAAA7K,MAAA1Q,GAEA4V,SAAAijB,iBAAA,mBAAA74B,GAAA,GAGAjB,KAGA,IAAA26B,GACAC,UAAA,EACAC,MAAA,IACAC,OAAA,GACAC,KAAA,GACAvb,IAAA,GACAwb,MAAA,GACAtqB,OAAA,GACAuqB,KAAA,GACAC,KAAA,GACAC,UAAA,GACAC,QAAA,GACAC,OAAA,IACAC,MAAA,GACAC,MAAA,GACAC,IAAA,EACAC,GAAA,IA8EA,SAAAC,IACA,OAAAA,EAwDA,OAnEArlB,EAAAkJ,QAAA7B,aACAkb,EAAA+C,eAIArB,SAAAjkB,EAAAkJ,QAAA7B,WAAA8B,IACAoc,aAAAvlB,EAAAkJ,QAAA7B,WAAA8B,MAQAhD,EAAA1c,MAAA47B,GACA/F,aAAAA,EAEA5vB,OAAA0D,EAEA5K,KAAA87B,EAEAxxB,IA3QA,SAAAA,EAAA0X,EAAApZ,EAAAC,EAAAzG,GAEA,GAAAub,EAAA3gB,cAAA4L,GAIA,OAHA+U,EAAAxb,KAAAyG,EAAA,SAAAtN,EAAAiK,GACA+E,EAAA0X,EAAA1mB,EAAAuN,EAAAtD,KAHApE,KAQAwc,EAAAvhB,SAAAyM,IAAA8U,EAAA7hB,WAAAsG,KAAA,IAAAA,IACAA,EAAAyG,EACAA,OAAApI,IAGA,IAAA2B,IACAA,EAAAub,EAAAvK,aAGA,iBAAAxK,IAEAA,EADAA,EAAA9F,QAAA,MAAA,EACA8F,EAAArO,MAAA,KAEAqO,EAAArO,MAAA,OAIA,IAAAwZ,EAAA6nB,EAAA5Z,GAEApZ,GAAAA,EAAArN,QAAA,SAAAgN,GAEAwL,EAAA4nB,WAAApzB,EAAAnG,GACAyG,SAAAA,MAGA,OAAA1H,MA2OAwH,GAAAA,EAEAK,IAzKA,SAAAgZ,EAAApZ,EAAAC,EAAAC,EAAA1G,GAGA,OAFAuG,EAAAqZ,EAAApZ,EAAAC,EAAAC,EAAA1G,EAAA,GAEAjB,MAwKAmQ,MAAAuoB,EAEA3H,MAAAA,EAEA8K,UA/FA,SAAAhb,GAEA,IAAAib,EAAAxM,EAAA3nB,KAAAkZ,EAAA,aACA,IAAAib,EAAA,CACAA,KACAxM,EAAA3nB,KAAAkZ,EAAA,YAAAib,GACA,IAAAC,EAAA,SAAAzvB,EAAAlF,GACA,IAAA5D,EAAA4D,EAAA40B,SAAA50B,EAAA60B,QACA,GAAA3vB,EAAA4vB,MAAA14B,GAAA8I,EAAA6vB,KAAA/0B,EAAAg1B,QAAA9vB,EAAA3M,OAAAyH,EAAAi1B,WACAj1B,EAAAk1B,SAAAhwB,EAAAgwB,SAAAl1B,EAAAm1B,UAAAn1B,EAAAm1B,UAAAjwB,EAAAiwB,UAKA,OAJAn1B,EAAA0sB,iBACA,WAAA1sB,EAAAjN,MACAmS,EAAAlI,GAAAgD,IAEA,GAIAI,EAAAqZ,EAAA,yBAAA,SAAAzZ,GACA,IAAA,iBAAArJ,KAAAqJ,EAAAlI,OAAA0hB,UACA,IAAA,IAAA9hB,KAAAg9B,EACAC,EAAAD,EAAAh9B,GAAAsI,KAOA,OACA4H,IAAA,SAAAwtB,EAAAp4B,IAEAo4B,EAAA76B,QAAA,MAAA,EACA66B,EAAAniC,cAAAjB,MAAA,KAEAojC,EAAAniC,cAAAjB,MAAA,MAEAgB,QAAA,SAAAqiC,GACA,IAAAzK,GACA5tB,GAAAA,EACA+3B,KAAA,EACAD,MAAA,EACAv8B,OAAA,GAEA88B,EAAArjC,MAAA,KAAAgB,QAAA,SAAA0E,GACA,OAAAA,GACA,IAAA,MACA,IAAA,OACA,IAAA,QACAkzB,EAAAlzB,IAAA,EACA,MACA,QACAkzB,EAAAuK,SAAAz9B,EAAA49B,WAAA,GACA1K,EAAAsK,QAAA3B,EAAA77B,IAAAA,EAAA+Z,cAAA6jB,WAAA,MAGA,IAAAC,GAAA3K,EAAAkK,KAAA,OAAA,IAAA,KAAAlK,EAAAmK,IAAA,MAAA,IAAA,KAAAnK,EAAAryB,MAAA,QAAA,IAAA,IAAAqyB,EAAAsK,QACAR,EAAAa,GAAA3K,OAyCA4K,QAAAhE,EAEAiE,KAzKA,SAAAz1B,GACAjM,OAAA0b,SAAAlC,MACAvN,EAAAk1B,QAAA,GAEAl1B,EAAA0sB,iBACA1sB,EAAA0sB,iBACA1sB,EAAAiuB,mBAEA,OAAAr1B,MAmKAwJ,QA3JA,SAAAszB,EAAA3iC,EAAAqF,GACA,IAAA0I,EAEAA,EADA/N,aAAA4iC,MACA5iC,EAEAsP,EAAAtP,EAAAqF,GAEA0I,EAAAsxB,MAAAh6B,EAEA,IAAA4E,EAAA04B,EAAAE,eAAAF,EAAAtzB,QACApF,EACAA,EAAA7J,KAAAuiC,EAAA50B,GAEAsd,QAAAC,KAAA,mDAGA,OAAAzlB,QA+IAgB,EAAA20B,EAAA,SAAAn8B,GACAkiC,EAAAliC,GAAA,SAAAqnB,EAAAnZ,EAAAC,EAAA1G,GACA,OAAAvB,UAAArG,OAAA,EACA2G,KAAAwH,GAAAqZ,EAAArnB,EAAAkO,EAAAC,EAAA1G,IAEA,SAAAzH,EACAqnB,EAAAsI,OACAtI,EAAAsI,QAEA,QAAA3vB,EACAqnB,EAAAuB,MACAvB,EAAAuB,OAEA,SAAA5oB,EACAqnB,EAAAwW,OACAxW,EAAAwW,QAGAr3B,KAAAwJ,QAAAqX,EAAArnB,GAGAwG,SAKAtG,EAAAC,OAAA,eAAA+hC,KAEA1iC,OAAA,6BACA,sBACA,YACA,oBACA,sBACA,SAAAwjB,EAAAkf,EAAA7G,EAAAtQ,GAEA,IAAA0Y,GACA,MACA,KACA,MACA,WA8CA,OA3CAzgB,EAAAxb,KAAA06B,EAAA/F,aAAA,SAAAn8B,GACAyjC,EAAAl+B,KAAAvF,KAIAq7B,EAAAvnB,SAAA2vB,EAAAvB,GAEAlf,EAAAxb,KAAAi8B,EAAA,SAAA1jC,EAAAC,GACA+qB,EAAAngB,GAAA5K,GAAA+qB,EAAA+P,MAAA3D,kBAAA+K,EAAAliC,GAAAkiC,KAiCAnX,EAAAwM,MAAA2K,EAAA3K,MAEA2K,IAEA1iC,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,4BACA,yBACA,SAAAU,GAeA,IAAAwjC,EAAA,WACA,OAAAA,GAGA,OAAAxjC,EAAAC,OAAA,aAAAujC,KAEAlkC,OAAA,8BACA,wBACA,uBACA,SAAAU,EAAA8iB,GACAxiB,MAAAgC,UAAAk0B,MAAA,IACA91B,EAAAJ,MAAAgC,UAAA5B,QACAwe,EAAA4D,EAAA5D,UACAE,EAAA0D,EAAA1D,UAEA,SAAAqkB,EAAA3jC,EAAAoB,GACA,MAAA,iBAAAA,GAAAwiC,EAAAtkB,EAAAtf,IAAAoB,EAAAA,EAAA,KAGA,IAAAwiC,GACAC,eAAA,EACAC,QAAA,EACAC,cAAA,EACAC,cAAA,EACAC,QAAA,EACAC,UAAA,EACAC,KAAA,GAEAC,KAIA,SAAAC,EAAArkC,GACA,OAAAA,KAAAokC,EACAA,EAAApkC,GAAAokC,EAAApkC,GAAA,IAAA8Y,OAAA,UAAA9Y,EAAA,WASA,SAAA8G,EAAAgW,EAAA1b,GACA,IAAAsM,EAAAoP,EAAAhW,WAAA,GACAw9B,EAAA52B,QAAA5H,IAAA4H,EAAA62B,QAEA,QAAAz+B,IAAA1E,EAAA,OAAAkjC,EAAA52B,EAAA62B,QAAA72B,EACA42B,EAAA52B,EAAA62B,QAAAnjC,EAAA0b,EAAAhW,UAAA1F,EAaA,IAAAojC,KAiEA,SAAAC,EAAAjV,GAKA,IAAAkV,EAAAlV,EAAAlH,cAAA+C,YAMA,OAJAqZ,GAAAA,EAAAC,SACAD,EAAA/iC,QAGA+iC,EAAApZ,iBAAAkE,GAgHA,IAAAoV,EAAA,WACA,OAAAA,GAqBA,OAlBA5hB,EAAA1c,MAAAs+B,GACAC,YAAA,EACAC,YAIAC,SA1JA,SAAA1d,EAAArnB,GACA,IAAAA,EAAA,OAAAwG,KACA,IACA8vB,EADArqB,EAAAnF,EAAAugB,GAGAiP,EADAtT,EAAAvhB,SAAAzB,GACAA,EAAAJ,MAAA,QAEAI,EAWA,OATAs2B,EAAA11B,QAAA,SAAA8M,GACA,IAAAs3B,EAAAX,EAAA32B,GACAzB,EAAAmF,MAAA4zB,KACA/4B,IAAAA,EAAA,IAAA,IAAAyB,KAIA5G,EAAAugB,EAAApb,GAEAzF,MAyIAM,UAAAA,EACA2xB,IAlHA,SAAApR,EAAA6O,EAAA90B,GACA,GAAA8E,UAAArG,OAAA,EAAA,CACA,IACAolC,EAAAR,EAAApd,GACA,GAAArE,EAAAvhB,SAAAy0B,GACA,OAAA7O,EAAA5B,MAAArG,EAAA8W,KAAA+O,EAAAC,iBAAA5lB,EAAA4W,IACA,GAAAlT,EAAAphB,YAAAs0B,GAAA,CACA,IAAA3qB,KAIA,OAHA3K,EAAAG,KAAAm1B,EAAA,SAAAhtB,GACAqC,EAAArC,GAAAme,EAAA5B,MAAArG,EAAAlW,KAAA+7B,EAAAC,iBAAA5lB,EAAApW,MAEAqC,GAIA,IAAAktB,EAAA,GACA,GAAA,iBAAA,EACAr3B,GAAA,IAAAA,EAGAq3B,EAAAnZ,EAAA4W,GAAA,IAAAyN,EAAAzN,EAAA90B,GAFAimB,EAAA5B,MAAA0f,eAAA7lB,EAAA4W,SAKA,IAAA5wB,OAAA4wB,OACApwB,IAAAowB,EAAA5wB,OAGA4wB,EAAA5wB,MAAA,IAAA4wB,EAAA5wB,KAGAmzB,GAAAnZ,EAAAha,KAAA,IAAAq+B,EAAAr+B,IAAA4wB,EAAA5wB,MAAA,IAFA+hB,EAAA5B,MAAA0f,eAAA7lB,EAAAha,OAQA,OADA+hB,EAAA5B,MAAA2f,SAAA,IAAA3M,EACAjyB,MA+EA0M,SAnNA,SAAAmU,EAAAjmB,GACA,GAAA8E,UAAArG,OAAA,EACA,QAAA2G,KAAAmjB,IAAAzW,SAKA,OAFAmU,EAAAnU,SAAA9R,EAEAoF,MA6MA6+B,SAxEA,SAAAhe,EAAArnB,GACA,IAAAglC,EAAAX,EAAArkC,GACA,OAAAqnB,EAAAvgB,WAAAugB,EAAAvgB,UAAAsK,MAAA4zB,IAuEArM,KAzKA,SAAAtR,GAEA,OADAud,EAAAnM,IAAApR,EAAA,UAAA,QACA7gB,MAwKA8+B,YAlLA,SAAAje,GACA,MAAA,QAAAud,EAAAnM,IAAApR,EAAA,YAAA,GAAAud,EAAAnM,IAAApR,EAAA,YAkLAke,YAjEA,SAAAle,EAAArnB,GACA,GAAAA,EAAA,CACA,IAAAiM,EAAAnF,EAAAugB,IAGArE,EAAAvhB,SAAAzB,GACAA,EAAAJ,MAAA,QAEAI,GAGAY,QAAA,SAAA8M,GACA,IAAAs3B,EAAAX,EAAA32B,GACAzB,EAAAmF,MAAA4zB,KACA/4B,EAAAA,EAAA5H,QAAA2gC,EAAA,QAIAl+B,EAAAugB,EAAApb,EAAAsQ,aAEAzV,EAAAugB,EAAA,IAGA,OAAA7gB,MA2CAkyB,KA5LA,SAAArR,GACAud,EAAAnM,IAAApR,EAAA,UAAA,IACA,QAAAud,EAAAnM,IAAApR,EAAA,YACAud,EAAAnM,IAAApR,EAAA,UAnBA,SAAAD,GACA,IAAAqD,EAAA+a,EACAhB,EAAApd,KACAqD,EAAApN,SAAAqH,cAAA0C,GACA/J,SAAAwB,KAAA+I,YAAA6C,GACA+a,EAAAf,EAAAha,GAAAya,iBAAA,WACAza,EAAA9C,WAAAiC,YAAAa,GACA,QAAA+a,IAAAA,EAAA,SACAhB,EAAApd,GAAAoe,GAEA,OAAAhB,EAAApd,GASAqe,CAAApe,EAAAD,WAEA,OAAA5gB,MAwLAk/B,YAnCA,SAAAre,EAAArnB,EAAA6T,GACA,IAAAvF,EAAA9H,KAYA,OAXAxG,EAAAJ,MAAA,QAAAgB,QAAA,SAAA8M,QACA5H,IAAA+N,IACAA,GAAAvF,EAAA+2B,SAAAhe,EAAA3Z,IAEAmG,EACAvF,EAAAy2B,SAAA1d,EAAA3Z,GAEAY,EAAAi3B,YAAAle,EAAA3Z,KAIAY,KAyBApO,EAAAC,OAAA,cAAAykC,KAEAplC,OAAA,4BACA,WACA,oBACA,sBACA,SAAAolC,EAAAvJ,EAAAtQ,GAGAsQ,EAAAvnB,UACA,WACA,YACA,MACA,WACA,OACA,cACA,cACA,OACA,eACA8wB,GAmDA,OA/CA,WAAA,OAAA,MAAA,QAAA,SAAA,QAAA,SAAA,SAAA,aACA,YAAA,cAAA,eAAA,cAAA,UAAA,WAAA,SAAA,aAAA,YAAA,cAAA,eAAA,UAAA,cAAA,aAAA,eAAA,gBAAA,QACA,aAAA,kBAAA,UAAA,WAAA,aAAA,YAAA,iBAAA,gBAAA,SAAA,UAEAhkC,QAAA,SAAAs1B,GAEA,IAAAviB,EAAAuiB,EAEAmF,EAAAF,cAAA34B,UAAAmR,GAAA,SAAAvS,GAIA,OAFAoF,KAAAiyB,IAAAvC,EAAA90B,GAEAoF,QAOAukB,EAAAngB,GAAA6a,MAAAsF,EAAA+P,MAAAI,mBAAA0J,EAAAnM,IAAAmM,GAEA7Z,EAAAngB,GAAA6tB,IAAA1N,EAAA+P,MAAAI,mBAAA0J,EAAAnM,IAAAmM,GAGA7Z,EAAAngB,GAAAy6B,SAAAta,EAAA+P,MAAAC,iBAAA6J,EAAAS,SAAAT,GAGA7Z,EAAAngB,GAAAm6B,SAAAha,EAAA+P,MAAAE,+BAAA4J,EAAAG,SAAAH,EAAAA,EAAA99B,WAGAikB,EAAAngB,GAAA26B,YAAAxa,EAAA+P,MAAAE,+BAAA4J,EAAAW,YAAAX,EAAAA,EAAA99B,WAGAikB,EAAAngB,GAAA86B,YAAA3a,EAAA+P,MAAAE,+BAAA4J,EAAAc,YAAAd,EAAAA,EAAA99B,WAEAikB,EAAAngB,GAAA+6B,aAAA,SAAAC,EAAAC,GAGA,OAFAr/B,KAAA++B,YAAAM,GACAr/B,KAAAu+B,SAAAa,GACAp/B,MAGAukB,EAAAngB,GAAA+6B,aAAA,SAAAC,EAAAC,GAGA,OAFAr/B,KAAA++B,YAAAM,GACAr/B,KAAAu+B,SAAAa,GACAp/B,MAGAo+B,IAEAplC,OAAA,uBAAA,4BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,kCACA,yBACA,SAAAU,GAeA,IAAA4lC,EAAA,WACA,OAAAA,GAGA,OAAA5lC,EAAAC,OAAA,kBAAA2lC,KAEAtmC,OAAA,oCACA,uBACA,yBACA,YACA,SAAA0L,EAAA0I,EAAAkyB,GACA,IAAAt7B,EAAAhK,MAAAgC,UAAAgI,OACAu7B,EAAA,WACA,SAAA13B,EAAA23B,EAAAtmC,GACA,IAAA0b,EAAA,IAAAxH,EACAqyB,EAAA,SAAAv3B,GACA0M,EAAAzB,OAAAjL,IAIA,GADAhP,EAAAA,GAAA,GACAsmC,EAAAE,OACAF,EAAAlV,KAAA,SAAAA,GACAA,EAAAqV,aAAAzmC,EACA0b,EAAA1B,QAAAoX,IACAmV,QACA,GAAAD,EAAAI,YAAA,CACA,IAAAC,EAAAL,EAAAM,eACAD,EAAAE,YAAA,SAAAC,GACArrB,EACAqrB,EACA9mC,EAAAsmC,EAAAhmC,KAAA,KACAyT,KAAA,SAAAiwB,GACAtoB,EAAA1B,QAAAgqB,KACAnqB,MAAA0sB,IACAA,QAIA7qB,EAAA1B,YAEA,OAAA0B,EAAA5B,QAGA,SAAA2B,EAAAqrB,EAAA9mC,GACA,OAAAkU,EAAAuH,IACAjQ,EAAAL,IAAA27B,EAAA,SAAAR,GACA,OAAA33B,EAAA23B,EAAAtmC,MAEA+T,KAAA,WACA,OAAAjJ,EAAAjE,SAAAL,aAIA,OACAmI,IAAAA,EACA8M,IAAAA,GA3CA,GA+CA,OAAA2qB,EAAAC,SAAAA,IAEAvmC,OAAA,+BACA,uBACA,yBACA,sBACA,uBACA,UACA,oCACA,SAAA0L,EAAA0I,EAAAgxB,EAAA1C,EAAAwB,EAAAqC,GA4DA,OAAArC,EAAA+C,SAvDA,SAAApf,EAAAphB,GAEA,IAAAygC,GADAzgC,EAAAA,OACAygC,YAAA,WACAC,EAAA1gC,EAAA2gC,QAEAC,EAAA,EA+CA,OA9CA3E,EAAAl0B,GAAAqZ,EAAA,YAAA,SAAA3Y,GACAA,EAAAo4B,cAAAp4B,EAAAo4B,aAAAxjC,MAAA6E,QAAA,UAAA,IACA+5B,EAAAmB,KAAA30B,GACAm4B,IACAjC,EAAAG,SAAA1d,EAAAqf,MAIAxE,EAAAl0B,GAAAqZ,EAAA,WAAA,SAAA3Y,GACAA,EAAAo4B,cAAAp4B,EAAAo4B,aAAAxjC,MAAA6E,QAAA,UAAA,GACA+5B,EAAAmB,KAAA30B,KAIAwzB,EAAAl0B,GAAAqZ,EAAA,YAAA,SAAA3Y,GACAA,EAAAo4B,cAAAp4B,EAAAo4B,aAAAxjC,MAAA6E,QAAA,UAAA,GAEA,KADA0+B,GAEAjC,EAAAW,YAAAle,EAAAqf,KAKAxE,EAAAl0B,GAAAqZ,EAAA,OAAA,SAAA3Y,GACA,GAAAA,EAAAo4B,cAAAp4B,EAAAo4B,aAAAxjC,MAAA6E,QAAA,UAAA,IACAy8B,EAAAW,YAAAle,EAAAqf,GACAxE,EAAAmB,KAAA30B,GACAi4B,GAAA,CACA,IAAA99B,EAAA6F,EAAAo4B,aAAAj+B,MACAA,GAAAA,EAAAhJ,SAAAgJ,EAAA,GAAAk+B,kBACAl+B,EAAA,GAAAm+B,YACAjB,EAAA5qB,IACAjQ,EAAAL,IAAAhC,EAAA,SAAAC,GACA,OAAAA,EAAAi+B,iBACAj+B,EAAAi+B,mBAEAj+B,EAAAk+B,gBAEAvzB,KAAAkzB,GAEAA,EAAAj4B,EAAAo4B,aAAApD,UAMAl9B,QAKAhH,OAAA,gCACA,wBACA,uBACA,WACA,SAAA4J,EAAA84B,EAAAwB,GA0BA,OAAAA,EAAAuD,UAzBA,SAAA5f,EAAAphB,IACAA,EAAAA,OACAygC,WAAA,IACAQ,EAAAjhC,EAAAkhC,OAmBA,OAjBAjF,EAAAl0B,GAAAqZ,EAAA,QAAA,SAAA3Y,GACA,IAAA7F,EAAA6F,EAAAywB,eAAAzwB,EAAAywB,cAAAiI,eACA14B,EAAAywB,cAAAiI,cAAAv+B,MACA66B,KACA76B,GAAAA,EAAAhJ,QACAuJ,EAAA5B,KAAAqB,EAAA,SAAAvB,EAAAwB,GACA,IAAAgoB,EAAAhoB,EAAAu+B,WAAAv+B,EAAAu+B,YACAvW,GACA4S,EAAAn+B,KAAAurB,KAIAoW,GAAAxD,EAAA7jC,QACAqnC,EAAAxD,KAIAl9B,QAOAhH,OAAA,kCACA,YACA,SAAAsmC,GACA,IAAAwB,EAGAC,EAAA,EAAA,EAkDA,OAAAzB,EAAAlR,OAhDA,SAAA3uB,GAEA,IAAAuhC,GADAvhC,EAAAA,OACAuhC,YAAA,EACAC,EAAAxhC,EAAAwhC,WAAA,EACAC,EAAAzhC,EAAAyhC,QAAA,GACAC,EAAA1hC,EAAA0hC,OAAA,GACAC,EAAA3hC,EAAA4hC,OACA,IAAAP,EAAA,CACA,IAAArX,EAAAqX,EAAAjqB,SAAAqH,cAAA,SAEA,SAAAojB,EAAAC,GACA,IAAA,IAAAhoC,EAAAgoC,EAAAloC,OAAAE,KACAgoC,EAAAhoC,GAAA03B,KAAA8P,GACAQ,EAAA/+B,OAAAjJ,EAAA,GAGA6nC,EAAAG,GAGA9X,EAAAtvB,KAAA,OACAsvB,EAAAxK,MAAA8F,SAAA,QACA0E,EAAAxK,MAAAic,KAAA,EACAzR,EAAAxK,MAAAuiB,IAAA,EACA/X,EAAAxK,MAAAwe,QAAA,KACA5mB,SAAAwB,KAAA+I,YAAAqI,GAEAA,EAAAgY,SAAA,SAAAv5B,GACA,IAAA83B,EAAA93B,EAAAhJ,OAAAwiC,eAAAx5B,EAAAhJ,OAAA8gC,QAEAA,GAAAA,EAAA3mC,OACAkmC,SAAA5qB,IAAAqrB,GAAA/yB,KAAA,SAAAiwB,GACAoE,EAAApE,KAGAoE,EAAAtnC,MAAAgC,UAAAgC,MAAAzD,KAAA2N,EAAAhJ,OAAAg+B,QAGAzT,EAAA7uB,MAAA,IAGAkmC,EAAAG,SAAAA,EACAH,EAAAI,OAAAA,EACAJ,EAAAK,MAAAA,EAEAL,EAAAa,gBAAAX,EACAF,EAAAzJ,WAOAr+B,OAAA,6BACA,wBACA,uBACA,UACA,kCACA,SAAA4J,EAAA84B,EAAAwB,EAAA9O,GAcA,OAAA8O,EAAA0E,OARA,SAAA/gB,EAAAphB,GAKA,OAJAi8B,EAAAl0B,GAAAqZ,EAAA,QAAA,SAAA3Y,GACAA,EAAA4rB,iBACA1F,EAAA3uB,KAEAO,QASAhH,OAAA,2BACA,UACA,oBACA,qBACA,aACA,cACA,YACA,SAAAkkC,EAAArI,EAAAtQ,GAWA,OAVAsQ,EAAAvnB,UACA,WACA,YACA,UACA4vB,GAEA3Y,EAAAngB,GAAAq8B,UAAAlc,EAAA+P,MAAA3D,kBAAAuM,EAAAuD,UAAAvD,GACA3Y,EAAAngB,GAAA67B,SAAA1b,EAAA+P,MAAA3D,kBAAAuM,EAAA+C,SAAA/C,GACA3Y,EAAAngB,GAAAw9B,OAAArd,EAAA+P,MAAA3D,kBAAAuM,EAAA0E,OAAA1E,GAEAA,IAEAlkC,OAAA,sBAAA,2BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,0BACA,wBACA,sBACA,qBACA,uBACA,SAAAU,EAAA8iB,EAAAuF,EAAAqc,GACA,IAGAyD,EAHAthB,EAAA,mBACAuhB,EAAAtlB,EAAAO,QACA6H,EAAA7C,EAAA6C,aAGA,SAAAmd,IACA,QAAAziC,IAAAuiC,EACA,OAAAA,EAEA,IAAAG,EAAAC,EACAtiB,EAAAoC,EAAAY,eAAA,6IAEA,GACAuf,EAAAviB,EAAA+C,WAAA,GAgBA,OAdAX,EAAAb,OAAArK,SAAAwB,KAAAsH,GAEAqiB,EAAAE,EAAAlY,YAEAoU,EAAAnM,IAAAtS,EAAA,WAAA,UAEAsiB,EAAAC,EAAAlY,YAEAgY,IAAAC,IACAA,EAAAtiB,EAAA,GAAAwiB,aAGApgB,EAAA5W,OAAAwU,GAEAkiB,EAAAG,EAAAC,EAMA,SAAAG,EAAAvhB,GACA,GAAAkB,EAAA7mB,SAAA2lB,GACA,OACAqa,KAAA,EACAsG,IAAA,EACAlG,MAAA,EACA+G,OAAA,GAEA,IAAAC,EAAAxd,iBAAAjE,GACA,OACAqa,KAAA4G,EAAAQ,EAAAC,gBAAA1hB,GACA2gB,IAAAM,EAAAQ,EAAAE,eAAA3hB,GACAya,MAAAwG,EAAAQ,EAAAG,iBAAA5hB,GACAwhB,OAAAP,EAAAQ,EAAAI,kBAAA7hB,IAUA,SAAA8hB,EAAA9hB,EAAA+hB,GACA,QAAAtjC,IAAAsjC,EACA,OAAAriB,EAAAxiB,KAAA8iB,EAAAD,WAAA4gB,IAAA,EAAAtG,KAAA,GAAAra,EAAAgiB,wBAEA,IACA79B,EAAA4f,EAAA/D,GAEAiiB,EAAAH,EAAA39B,GACA+9B,EAAAC,EAAAniB,GACAoiB,EAAAb,EAAAp9B,GAMA,OAJAk+B,EAAAriB,GACA2gB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACAtG,KAAA0H,EAAA1H,KAAA4H,EAAA5H,KAAA6H,EAAA7H,KAAA+H,EAAA/H,OAEAl7B,KASA,SAAAmjC,EAAAtiB,EAAA+hB,GACA,YAAAtjC,IAAAsjC,EACA/hB,EAAAgiB,yBAEAF,EAAA9hB,EAAA+hB,GACA3R,EAAApQ,EAAA+hB,GACA5iC,MAwBA,SAAAojC,EAAAviB,EAAAwiB,GACA,QAAA/jC,GAAA+jC,EACA,OACAC,MAAAziB,EAAAshB,YACAoB,OAAA1iB,EAAA2iB,cAGA,IAAAC,EAAA,eAAArF,EAAAnM,IAAApR,EAAA,cACA9b,GACAu+B,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,GAAAE,EAUA,CACA,IAAAC,EAAAtB,EAAAvhB,QAEAvhB,IAAAyF,EAAAu+B,QACAv+B,EAAAu+B,MAAAv+B,EAAAu+B,MAAAI,EAAAxI,KAAAwI,EAAApI,YAGAh8B,IAAAyF,EAAAw+B,SACAx+B,EAAAw+B,OAAAx+B,EAAAw+B,OAAAG,EAAAlC,IAAAkC,EAAArB,YAlBA,CACA,IAAAsB,EAAAC,EAAA/iB,QAEAvhB,IAAAyF,EAAAu+B,QACAv+B,EAAAu+B,MAAAv+B,EAAAu+B,MAAAK,EAAAzI,KAAAyI,EAAArI,YAGAh8B,IAAAyF,EAAAw+B,SACAx+B,EAAAw+B,OAAAx+B,EAAAw+B,OAAAI,EAAAnC,IAAAmC,EAAAtB,QAeA,OADAjE,EAAAnM,IAAApR,EAAA9b,GACA/E,KAkDA,SAAA6jC,EAAA5hB,GACA,IAAAN,EAAAM,EAAAN,gBACAtJ,EAAA4J,EAAA5J,KACAiW,EAAAzf,KAAAyf,IACAwV,EAAAxV,EAAA3M,EAAAmiB,YAAAzrB,EAAAyrB,aACA3B,EAAA7T,EAAA3M,EAAAwgB,YAAA9pB,EAAA8pB,aACAnY,EAAAsE,EAAA3M,EAAAqI,YAAA3R,EAAA2R,aACA+Z,EAAAzV,EAAA3M,EAAAoiB,aAAA1rB,EAAA0rB,cACAP,EAAAlV,EAAA3M,EAAA6hB,aAAAnrB,EAAAmrB,cACAje,EAAA+I,EAAA3M,EAAA4D,aAAAlN,EAAAkN,cAEA,OACA+d,MAAAQ,EAAA9Z,EAAAmY,EAAA2B,EACAP,OAAAQ,EAAAxe,EAAAie,EAAAO,GAwBA,SAAAf,EAAAniB,GACA,GAAAkB,EAAA7mB,SAAA2lB,GACA,OACAqa,KAAA,EACAsG,IAAA,EACAlG,MAAA,EACA+G,OAAA,GAGA,IAAAC,EAAAxd,iBAAAjE,GACA,OACAqa,KAAA4G,EAAAQ,EAAA0B,YACAxC,IAAAM,EAAAQ,EAAA2B,WACA3I,MAAAwG,EAAAQ,EAAA4B,aACA7B,OAAAP,EAAAQ,EAAA6B,eAkBA,SAAAC,EAAAvjB,GACA,IAAAjnB,EAAAq3B,EAAApQ,GACAtI,EAAAyqB,EAAAniB,GAEA,OACAyiB,MAAA1pC,EAAA0pC,MAAA/qB,EAAA2iB,KAAA3iB,EAAA+iB,MACAiI,OAAA3pC,EAAA2pC,OAAAhrB,EAAAipB,IAAAjpB,EAAA8pB,QAQA,SAAAuB,EAAA/iB,GACA,GAAAkB,EAAA7mB,SAAA2lB,GACA,OACAqa,KAAA,EACAsG,IAAA,EACAlG,MAAA,EACA+G,OAAA,GAGA,IAAAC,EAAAxd,iBAAAjE,GACA,OACAqa,KAAA4G,EAAAQ,EAAA+B,aACA7C,IAAAM,EAAAQ,EAAAgC,YACAhJ,MAAAwG,EAAAQ,EAAAiC,cACAlC,OAAAP,EAAAQ,EAAAkC,gBAUA,SAAAC,EAAA5jB,EAAA+hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IAAAhpC,EAAAinB,EAAAgiB,wBACA,OACA3H,KAAAthC,EAAAshC,KAAA//B,OAAAupC,YACAlD,IAAA5nC,EAAA4nC,IAAArmC,OAAAwpC,aAGA,IACA3/B,EAAA4f,EAAA/D,GAEAiiB,EAAA2B,EAAAz/B,GACA+9B,EAAAC,EAAAniB,GACAoiB,EAAAb,EAAAp9B,GAMA,OAJAk+B,EAAAriB,GACA2gB,IAAAoB,EAAApB,IAAAsB,EAAAtB,IAAAuB,EAAAvB,IAAAyB,EAAAzB,IACAtG,KAAA0H,EAAA1H,KAAA4H,EAAA5H,KAAA6H,EAAA7H,KAAA+H,EAAA/H,OAEAl7B,KA+BA,SAAAkjC,EAAAriB,EAAA+hB,GACA,QAAAtjC,GAAAsjC,EAAA,CACA,IACA59B,EAAA4f,EAAA/D,GAEA/c,EAAA6+B,EAAA9hB,GACAiiB,EAAAH,EAAA39B,GAEAi+B,GADAD,EAAAniB,GACAuhB,EAAAp9B,IAGA,OACAw8B,IAAA19B,EAAA09B,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACAtG,KAAAp3B,EAAAo3B,KAAA4H,EAAA5H,KAAA+H,EAAA/H,MAGA,IAAAn2B,GACAy8B,IAAAoB,EAAApB,IACAtG,KAAA0H,EAAA1H,MAOA,MAJA,UAAAkD,EAAAnM,IAAApR,EAAA,cACA9b,EAAA,SAAA,YAEAq5B,EAAAnM,IAAApR,EAAA9b,GACA/E,KASA,SAAA4kC,EAAA/jB,EAAA+hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IACA59B,EAAA4f,EAAA/D,GAEA/c,EAAAq/B,EAAAtiB,GACAiiB,EAAAH,EAAA39B,GAEAi+B,GADAD,EAAAniB,GACAuhB,EAAAp9B,IAGA,OACAw8B,IAAA19B,EAAA09B,IAAAsB,EAAAtB,IAAAyB,EAAAzB,IACAtG,KAAAp3B,EAAAo3B,KAAA4H,EAAA5H,KAAA+H,EAAA/H,KACAoI,MAAAx/B,EAAAw/B,MACAC,OAAAz/B,EAAAy/B,QAKA,OAFAL,EAAAriB,EAAA+hB,GACA3R,EAAApQ,EAAA+hB,GACA5iC,KAmDA,SAAA6kC,EAAAhkB,EAAAjmB,GACA,IAAAimB,EAAA/lB,WACA+lB,EAAAA,EAAAgE,aAEA,IAAAigB,EAAA,eAAAjkB,EACA,YAAAvhB,IAAA1E,EACAkqC,EAAAjkB,EAAAgkB,WAAAhkB,EAAA6jB,aAEAI,EACAjkB,EAAAgkB,WAAAjqC,EAEAimB,EAAAkkB,SAAAnqC,EAAAimB,EAAAmkB,SAEAhlC,MAQA,SAAAilC,EAAApkB,EAAAjmB,GACA,IAAAimB,EAAA/lB,WACA+lB,EAAAA,EAAAgE,aAEA,IAAAqgB,EAAA,cAAArkB,EAEA,YAAAvhB,IAAA1E,EACAsqC,EAAArkB,EAAAokB,UAAApkB,EAAA8jB,aAEAO,EACArkB,EAAAokB,UAAArqC,EAEAimB,EAAAkkB,SAAAlkB,EAAAskB,QAAAvqC,GAEAoF,MAQA,SAAAixB,EAAApQ,EAAAwiB,GACA,QAAA/jC,GAAA+jC,EACA,OAAA7mB,EAAAthB,SAAA2lB,IAEAyiB,MAAAziB,EAAAukB,WACA7B,OAAA1iB,EAAAwkB,aAGA7oB,EAAAjhB,WAAAslB,GACAgjB,EAAAhtB,WAGAysB,MAAAziB,EAAAmJ,YACAuZ,OAAA1iB,EAAA0E,cAIA,IAAAke,EAAA,eAAArF,EAAAnM,IAAApR,EAAA,cACA9b,GACAu+B,MAAAD,EAAAC,MACAC,OAAAF,EAAAE,QAEA,IAAAE,EAAA,CACA,IAAAE,EAAAC,EAAA/iB,GACA6iB,EAAAtB,EAAAvhB,QAEAvhB,IAAAyF,EAAAu+B,OAAA,KAAAv+B,EAAAu+B,OAAA,OAAAv+B,EAAAu+B,QACAv+B,EAAAu+B,MAAAv+B,EAAAu+B,MAAAK,EAAAzI,KAAAyI,EAAArI,MAAAoI,EAAAxI,KAAAwI,EAAApI,YAGAh8B,IAAAyF,EAAAw+B,QAAA,KAAAx+B,EAAAw+B,QAAA,OAAAx+B,EAAAw+B,SACAx+B,EAAAw+B,OAAAx+B,EAAAw+B,OAAAI,EAAAnC,IAAAmC,EAAAtB,OAAAqB,EAAAlC,IAAAkC,EAAArB,QAIA,OADAjE,EAAAnM,IAAApR,EAAA9b,GACA/E,KAmBA,SAAAslC,IACA,OAAAA,EAifA,OA9eA9oB,EAAA1c,MAAAwlC,GACAlD,cAAAA,EAEAO,iBAAAA,EAEAQ,aAAAA,EAEAK,aAtdA,SAAA3iB,EAAAjmB,GACA,YAAA0E,GAAA1E,EACAwoC,EAAAviB,GAAA0iB,OAEAH,EAAAviB,GACA0iB,OAAA3oC,KAmdAwoC,WAAAA,EAEAjB,YA3ZA,SAAAthB,EAAAjmB,GACA,YAAA0E,GAAA1E,EACAwoC,EAAAviB,GAAAyiB,OAEAF,EAAAviB,GACAyiB,MAAA1oC,IAEAoF,OAsZAulC,YA9YA,SAAA1kB,GACA,IAAA2kB,EAAApC,EAAAviB,GACA8iB,EAAAC,EAAA/iB,GAQA,OACAqa,KAAAyI,EAAAzI,KACAsG,IAAAmC,EAAAnC,IACA8B,MAAAkC,EAAAlC,MAAAK,EAAAzI,KAAAyI,EAAArI,MACAiI,OAAAiC,EAAAjC,OAAAI,EAAAnC,IAAAmC,EAAAtB,SAkYAwB,gBAAAA,EAEAN,OAtWA,SAAA1iB,EAAAjmB,GACA,YAAA0E,GAAA1E,EACAq2B,EAAApQ,GAAA0iB,QAEAtS,EAAApQ,GACA0iB,OAAA3oC,IAEAoF,OAiWAgjC,cAAAA,EAEAyC,WAxUA,SAAA5kB,GACA,IAAAjnB,EAAAgrC,EAAA/jB,GACAtI,EAAAyqB,EAAAniB,GAEA,OACAqa,KAAAthC,EAAAshC,KACAsG,IAAA5nC,EAAA4nC,IACA8B,MAAA1pC,EAAA0pC,MAAA/qB,EAAA2iB,KAAA3iB,EAAA+iB,MACAiI,OAAA3pC,EAAA2pC,OAAAhrB,EAAAipB,IAAAjpB,EAAA8pB,SAkUA+B,WAAAA,EAEAxf,aAAAA,EAEAgf,eAAAA,EAGAa,aAAAA,EAEAiB,SApQA,SAAA7kB,EAAA+hB,GACA,QAAAtjC,IAAAsjC,EAAA,CACA,IAAAhpC,EAAAinB,EAAAgiB,wBACA,OACA3H,KAAAthC,EAAAshC,KAAA//B,OAAAupC,YACAlD,IAAA5nC,EAAA4nC,IAAArmC,OAAAwpC,YACArB,MAAAz0B,KAAA82B,MAAA/rC,EAAA0pC,OACAC,OAAA10B,KAAA82B,MAAA/rC,EAAA2pC,SAKA,OAFAkB,EAAA5jB,EAAA+hB,GACA3R,EAAApQ,EAAA+hB,GACA5iC,MA2PAkjC,iBAAAA,EAEA0B,aAAAA,EAEA7C,eAAAA,EAEA6D,eAzLA,SAAA/kB,EAAAglB,GAcA,IACAC,EAAAC,EAAAzC,EAAAC,EAAAyC,EAAAC,EADAC,EAAArlB,EAAAM,WAEAglB,EAfA,SAAAtlB,EAAAulB,GACA,IAAAN,EAAAC,EAAA/gC,EAAA6b,EAEAilB,EAAAC,EAAA,EACA,KAAA/gC,GAAAA,GAAAohC,GAAAphC,EAAAlK,UACAgrC,GAAA9gC,EAAAqhC,YAAA,EACAN,GAAA/gC,EAAAshC,WAAA,EACAthC,EAAAA,EAAA4f,aAGA,OAAAkhB,EAAAA,EAAAC,EAAAA,GAKAQ,CAAA1lB,EAAAqlB,GAEAJ,EAAAK,EAAAL,EACAC,EAAAI,EAAAJ,EACAzC,EAAAziB,EAAAmJ,YACAuZ,EAAA1iB,EAAA0E,aACAygB,EAAAE,EAAA/D,YACA8D,EAAAC,EAAA1C,aAEA,OAAAqC,GACAC,GAAAE,EAAA1C,EACAyC,GAAAE,EAAA1C,GACA,UAAAsC,IACAC,GAAAE,EAAA,EAAA1C,EAAA,EACAyC,GAAAE,EAAA,EAAA1C,EAAA,GAMA,OAHA2C,EAAArB,WAAAiB,EACAI,EAAAjB,UAAAc,EAEA/lC,MAuJA6kC,WAAAA,EAEAI,UAAAA,EAEAhU,KAAAA,EAEAqS,MAhEA,SAAAziB,EAAAjmB,GACA,YAAA0E,GAAA1E,EACAq2B,EAAApQ,GAAAyiB,OAEArS,EAAApQ,GACAyiB,MAAA1oC,IAEAoF,SA4DA,WACA,IAAAsuB,EAAAzf,KAAAyf,IACAkY,EAAA33B,KAAA23B,IACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,KAEA,SAAAC,EAAAC,EAAAzD,EAAAC,GACA,OACAvmB,WAAA+pB,EAAA,KAAAF,EAAA9oC,KAAAgpC,EAAA,IAAAzD,EAAA,IAAA,GACAtmB,WAAA+pB,EAAA,KAAAF,EAAA9oC,KAAAgpC,EAAA,IAAAxD,EAAA,IAAA,IAIA,SAAAyD,EAAA/iB,EAAAyL,GACA,OAAAnyB,SAAA6gC,EAAAnM,IAAAhO,EAAAyL,GAAA,KAAA,EAqPA,IAAAuX,GACAC,KACAhM,KAAA,SAAAnW,EAAApd,GACA,IAMAw/B,EANAC,EAAAz/B,EAAAy/B,OACAC,EAAAD,EAAAlsC,SAAAksC,EAAAvC,WAAAuC,EAAAtjC,OAAAo3B,KACAoM,EAAAF,EAAA9D,MACAiE,EAAAxiB,EAAAmW,KAAAvzB,EAAA6/B,kBAAAxD,WACAyD,EAAAJ,EAAAE,EACAG,EAAAH,EAAA5/B,EAAAggC,eAAAL,EAAAD,EAIA1/B,EAAAggC,eAAAL,EAGAG,EAAA,GAAAC,GAAA,GACAP,EAAApiB,EAAAmW,KAAAuM,EAAA9/B,EAAAggC,eAAAL,EACAD,EACAtiB,EAAAmW,MAAAuM,EAAAN,GAIApiB,EAAAmW,KADAwM,EAAA,GAAAD,GAAA,EACAJ,EAIAI,EAAAC,EACAL,EAAAC,EAAA3/B,EAAAggC,eAEAN,EAKAI,EAAA,EACA1iB,EAAAmW,MAAAuM,EAGAC,EAAA,EACA3iB,EAAAmW,MAAAwM,EAIA3iB,EAAAmW,KAAA5M,EAAAvJ,EAAAmW,KAAAqM,EAAAxiB,EAAAmW,OAGAsG,IAAA,SAAAzc,EAAApd,GACA,IAMAigC,EANAR,EAAAz/B,EAAAy/B,OACAC,EAAAD,EAAAlsC,SAAAksC,EAAAnC,UAAAmC,EAAAtjC,OAAA09B,IACAqG,EAAAlgC,EAAAy/B,OAAA7D,OACAuE,EAAA/iB,EAAAyc,IAAA75B,EAAA6/B,kBAAAvD,UACA8D,EAAAV,EAAAS,EACAE,EAAAF,EAAAngC,EAAAsgC,gBAAAJ,EAAAR,EAIA1/B,EAAAsgC,gBAAAJ,EAGAE,EAAA,GAAAC,GAAA,GACAJ,EAAA7iB,EAAAyc,IAAAuG,EAAApgC,EAAAsgC,gBAAAJ,EACAR,EACAtiB,EAAAyc,KAAAuG,EAAAH,GAIA7iB,EAAAyc,IADAwG,EAAA,GAAAD,GAAA,EACAV,EAIAU,EAAAC,EACAX,EAAAQ,EAAAlgC,EAAAsgC,gBAEAZ,EAKAU,EAAA,EACAhjB,EAAAyc,KAAAuG,EAGAC,EAAA,EACAjjB,EAAAyc,KAAAwG,EAIAjjB,EAAAyc,IAAAlT,EAAAvJ,EAAAyc,IAAAsG,EAAA/iB,EAAAyc,OAIA0G,MACAhN,KAAA,SAAAnW,EAAApd,GACA,IAkBAw/B,EACAgB,EAnBAf,EAAAz/B,EAAAy/B,OACAC,EAAAD,EAAAtjC,OAAAo3B,KAAAkM,EAAAvC,WACAyC,EAAAF,EAAA9D,MACA+C,EAAAe,EAAAlsC,SAAAksC,EAAAvC,WAAAuC,EAAAtjC,OAAAo3B,KACAqM,EAAAxiB,EAAAmW,KAAAvzB,EAAA6/B,kBAAAxD,WACAyD,EAAAF,EAAAlB,EACAqB,EAAAH,EAAA5/B,EAAAggC,eAAAL,EAAAjB,EACA+B,EAAA,SAAAzgC,EAAA0gC,GAAA,IACA1gC,EAAA2gC,UACA,UAAA3gC,EAAA0gC,GAAA,GACA1gC,EAAA2gC,UACA,EACAC,EAAA,SAAA5gC,EAAA6gC,GAAA,GACA7gC,EAAA8gC,YACA,UAAA9gC,EAAA6gC,GAAA,IACA7gC,EAAA8gC,YACA,EACA3kC,GAAA,EAAA6D,EAAA7D,OAAA,GAIA2jC,EAAA,IACAN,EAAApiB,EAAAmW,KAAAkN,EAAAG,EAAAzkC,EAAA6D,EAAAggC,eACAL,EAAAD,GACA,GAAAF,EAAAX,EAAAiB,MACA1iB,EAAAmW,MAAAkN,EAAAG,EAAAzkC,GAEA4jC,EAAA,KACAS,EAAApjB,EAAAmW,KAAAvzB,EAAA6/B,kBAAAxD,WAAAoE,EACAG,EAAAzkC,EAAAuiC,GACA,GAAAG,EAAA2B,GAAAT,KACA3iB,EAAAmW,MAAAkN,EAAAG,EAAAzkC,IAIA09B,IAAA,SAAAzc,EAAApd,GACA,IAmBA+gC,EACAd,EApBAR,EAAAz/B,EAAAy/B,OACAC,EAAAD,EAAAtjC,OAAA09B,IAAA4F,EAAAnC,UACA4C,EAAAT,EAAA7D,OACA+C,EAAAc,EAAAlsC,SAAAksC,EAAAnC,UAAAmC,EAAAtjC,OAAA09B,IACAsG,EAAA/iB,EAAAyc,IAAA75B,EAAA6/B,kBAAAvD,UACA8D,EAAAD,EAAAxB,EACA0B,EAAAF,EAAAngC,EAAAsgC,gBAAAJ,EAAAvB,EACA9E,EAAA,QAAA75B,EAAA0gC,GAAA,GACAD,EAAA5G,GACA75B,EAAAghC,WACA,WAAAhhC,EAAA0gC,GAAA,GACA1gC,EAAAghC,WACA,EACAJ,EAAA,QAAA5gC,EAAA6gC,GAAA,GACA7gC,EAAAihC,aACA,WAAAjhC,EAAA6gC,GAAA,IACA7gC,EAAAihC,aACA,EACA9kC,GAAA,EAAA6D,EAAA7D,OAAA,GAGAikC,EAAA,IACAH,EAAA7iB,EAAAyc,IAAA4G,EAAAG,EAAAzkC,EAAA6D,EAAAsgC,gBACAJ,EAAAR,GACA,GAAAO,EAAApB,EAAAuB,MACAhjB,EAAAyc,KAAA4G,EAAAG,EAAAzkC,GAEAkkC,EAAA,KACAU,EAAA3jB,EAAAyc,IAAA75B,EAAA6/B,kBAAAvD,UAAAmE,EAAAG,EACAzkC,EAAAwiC,GACA,GAAAE,EAAAkC,GAAAV,KACAjjB,EAAAyc,KAAA4G,EAAAG,EAAAzkC,KAKA+kC,SACA3N,KAAA,WACA+L,EAAAiB,KAAAhN,KAAAn7B,MAAAC,KAAAN,WACAunC,EAAAC,IAAAhM,KAAAn7B,MAAAC,KAAAN,YAEA8hC,IAAA,WACAyF,EAAAiB,KAAA1G,IAAAzhC,MAAAC,KAAAN,WACAunC,EAAAC,IAAA1F,IAAAzhC,MAAAC,KAAAN,cAKA4lC,EAAAwD,MAhWA,SAAAjoB,EAAA3b,GAIA,IAAAqjC,EAAAE,EAAAG,EAAAG,EAAAC,EAAAC,EACA/pC,GAHAgG,EAAAsX,EAAArb,UAAA+D,IAGAgkC,GACA9B,GAxBAnjB,EAwBA/e,EAAAkiC,OAvBA+B,EAAAllB,GAAA9oB,OACAD,EAAA6mB,EAAA7mB,SAAAiuC,GACA5tC,IAAA4tC,GAAA,IAAAA,EAAAruC,SACAsuC,GAAAluC,IAAAK,EACA8tC,EAAAjF,EAAA+E,IAEAllB,QAAAklB,EACAjuC,SAAAA,EACAK,WAAAA,EACAuI,OAAAslC,EAAA3E,EAAAxgB,IAAAiX,KAAA,EAAAsG,IAAA,GACAqD,WAAAA,EAAAsE,GACAlE,UAAAA,EAAAkE,GACA7F,MAAA+F,EAAA/F,MACAC,OAAA8F,EAAA9F,SAWA+F,EAxCA,SAAAlC,GACA,IAAAmC,EAAAnC,EAAAlsC,UAAAksC,EAAA7rC,WAAA,GACA6iC,EAAAnM,IAAAmV,EAAAnjB,QAAA,cACAulB,EAAApC,EAAAlsC,UAAAksC,EAAA7rC,WAAA,GACA6iC,EAAAnM,IAAAmV,EAAAnjB,QAAA,cACAwlB,EAAA,WAAAF,GACA,SAAAA,GAAAnC,EAAA9D,MAAAQ,YAAAsD,EAAAnjB,SAGA,OACAqf,MAHA,WAAAkG,GACA,SAAAA,GAAApC,EAAA7D,OAAAQ,aAAAqD,EAAAnjB,SAEA8d,IAAA,EACAwB,OAAAkG,EAAA1H,IAAA,GA6BA2H,CAAAtC,GACAuC,GAAAzkC,EAAAykC,WAAA,QAAAvwC,MAAA,KACA2tC,KA3BA,IAAA9iB,EACAklB,EACAjuC,EACAK,EACA6tC,EACAC,EAtDAtiB,EA8EA7nB,EAAA+pC,EA7EA,IAAAliB,EAAAjsB,UAEAm2B,KAAAA,EAAAlK,GACAjjB,QAAA09B,IAAA,EAAAtG,KAAA,IAGAnZ,EAAA7mB,SAAA6rB,IAEAkK,KAAAA,EAAAlK,GACAjjB,QACA09B,IAAAyD,EAAAle,GACAmU,KAAA2J,EAAA9d,KAIAA,EAAA+M,gBAEA7C,MACAqS,MAAA,EACAC,OAAA,GAEAz/B,QACA09B,IAAAza,EAAA6iB,MACA1O,KAAAnU,EAAA8iB,SAKA5Y,KAAAA,EAAAlK,GACAjjB,OAAA2gC,EAAA1d,IAiDA7nB,EAAA40B,iBAGA5uB,EAAAsjC,GAAA,YAlFA,IAAAzhB,EAoFA0hB,EAAAQ,EAAAhY,KAAAqS,MACAsF,EAAAK,EAAAhY,KAAAsS,OACAwF,EAAAE,EAAAnlC,OAGAklC,EAAAxsB,EAAArb,UAAA4nC,GAIAvsB,EAAAxb,MAAA,KAAA,MAAA,WACA,IACA8oC,EACAC,EAFA5D,GAAAjhC,EAAAlF,OAAA,IAAA5G,MAAA,KAIA,IAAA+sC,EAAA9sC,SACA8sC,EAAAM,EAAA1oC,KAAAooC,EAAA,IACAA,EAAAniC,QAAA,WACA0iC,EAAA3oC,KAAAooC,EAAA,KACA,UAAAniC,OAAAmiC,IACA,SAAA,WAEAA,EAAA,GAAAM,EAAA1oC,KAAAooC,EAAA,IAAAA,EAAA,GAAA,SACAA,EAAA,GAAAO,EAAA3oC,KAAAooC,EAAA,IAAAA,EAAA,GAAA,SAGA2D,EAAAnD,EAAA3vB,KAAAmvB,EAAA,IACA4D,EAAApD,EAAA3vB,KAAAmvB,EAAA,IACAY,EAAA/mC,OACA8pC,EAAAA,EAAA,GAAA,EACAC,EAAAA,EAAA,GAAA,GAIA7kC,EAAAlF,OACA4mC,EAAA5vB,KAAAmvB,EAAA,IAAA,GACAS,EAAA5vB,KAAAmvB,EAAA,IAAA,MAKA,IAAAwD,EAAAtwC,SACAswC,EAAA,GAAAA,EAAA,IAGA,UAAAzkC,EAAAsjC,GAAA,GACAQ,EAAA9N,MAAAuN,EACA,WAAAvjC,EAAAsjC,GAAA,KACAQ,EAAA9N,MAAAuN,EAAA,GAGA,WAAAvjC,EAAAsjC,GAAA,GACAQ,EAAAxH,KAAAoH,EACA,WAAA1jC,EAAAsjC,GAAA,KACAQ,EAAAxH,KAAAoH,EAAA,GAOA,OAJAL,EAAAzB,EAAAC,EAAAyB,GAAAC,EAAAG,GACAI,EAAA9N,MAAAqN,EAAA,GACAS,EAAAxH,KAAA+G,EAAA,GAEA,SAAAvf,GACA,IAAAwe,EAAAwC,EACAX,EAAAjF,EAAApb,GACAsf,EAAAe,EAAA/F,MACAqF,EAAAU,EAAA9F,OACAS,EAAAgD,EAAAhe,EAAA,cACAib,EAAA+C,EAAAhe,EAAA,aACA2e,EAAAW,EAAAtE,EAAAgD,EAAAhe,EAAA,eACAsgB,EAAAhG,MACA2E,EAAAU,EAAA1E,EAAA+C,EAAAhe,EAAA,gBACAsgB,EAAA/F,OACAxe,EAAAvI,EAAArb,UAAA6nC,GACAZ,EAAAtB,EAAAC,EAAAsB,GAAAgB,EAAA/F,MAAA+F,EAAA9F,QAEA,UAAAr+B,EAAAmjC,GAAA,GACAtjB,EAAAmW,MAAAoN,EACA,WAAApjC,EAAAmjC,GAAA,KACAtjB,EAAAmW,MAAAoN,EAAA,GAGA,WAAApjC,EAAAmjC,GAAA,GACAtjB,EAAAyc,KAAAmH,EACA,WAAAzjC,EAAAmjC,GAAA,KACAtjB,EAAAyc,KAAAmH,EAAA,GAGA5jB,EAAAmW,MAAAkN,EAAA,GACArjB,EAAAyc,KAAA4G,EAAA,GAEAZ,GACAxD,WAAAA,EACAC,UAAAA,GAGAznB,EAAAxb,MAAA,OAAA,OAAA,SAAAzH,EAAA0wC,GACAhD,EAAA0C,EAAApwC,KACA0tC,EAAA0C,EAAApwC,IAAA0wC,GAAAllB,GACA0jB,YAAAA,EACAG,aAAAA,EACAN,UAAAA,EACAK,WAAAA,EACAnB,kBAAAA,EACAG,eAAAA,EACAM,gBAAAA,EACAnkC,QAAAykC,EAAA,GAAAH,EAAA,GAAAG,EAAA,GAAAH,EAAA,IACAC,GAAAnjC,EAAAmjC,GACAG,GAAAtjC,EAAAsjC,GACApB,OAAAA,EACApe,KAAAA,MAKA9jB,EAAA8kC,QAGAA,EAAA,SAAAjlC,GACA,IAAAm2B,EAAA6N,EAAA7N,KAAAnW,EAAAmW,KACAI,EAAAJ,EAAAuN,EAAAH,EACA9G,EAAAuH,EAAAvH,IAAAzc,EAAAyc,IACAa,EAAAb,EAAAoH,EAAAD,EACAuB,GACAhrC,QACA+kB,QAAA/kB,EACAg8B,KAAA6N,EAAA7N,KACAsG,IAAAuH,EAAAvH,IACA8B,MAAAmF,EACAlF,OAAAqF,GAEA3kB,SACAA,QAAA+E,EACAkS,KAAAnW,EAAAmW,KACAsG,IAAAzc,EAAAyc,IACA8B,MAAAgF,EACA/E,OAAAoF,GAEAwB,WAAA7O,EAAA,EAAA,OAAAJ,EAAA,EAAA,QAAA,SACAkP,SAAA/H,EAAA,EAAA,MAAAb,EAAA,EAAA,SAAA,UAEAiH,EAAAH,GAAA9B,EAAAtL,EAAAI,GAAAmN,IACAyB,EAAAC,WAAA,UAEAvB,EAAAD,GAAAnC,EAAAhF,EAAAa,GAAAuG,IACAsB,EAAAE,SAAA,UAEA9b,EAAAkY,EAAAtL,GAAAsL,EAAAlL,IAAAhN,EAAAkY,EAAAhF,GAAAgF,EAAAnE,IACA6H,EAAAG,UAAA,aAEAH,EAAAG,UAAA,WAEAnlC,EAAA8kC,MAAAzvC,KAAAyF,KAAA+E,EAAAmlC,KAIAzF,EAAAzb,EAAAxM,EAAArb,OAAA4jB,GAAAilB,MAAAA,KA9FA,CA+FAnpB,IAnQA,GA0bAnnB,EAAAC,OAAA,YAAA2rC,KAEAtsC,OAAA,0BACA,sBACA,SACA,oBACA,sBACA,SAAAwjB,EAAA8oB,EAAAzQ,EAAAtQ,GAqHA,OAnHAsQ,EAAAvnB,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAg4B,GAEA/gB,EAAAngB,GAAAN,OAAAygB,EAAA+P,MAAA1D,cAAA0U,EAAAb,aAAAa,EAAAA,EAAAb,cAEAlgB,EAAAngB,GAAA6gC,UAAA1gB,EAAA+P,MAAA1D,cAAA0U,EAAAL,UAAAK,GAEA/gB,EAAAngB,GAAAygC,WAAAtgB,EAAA+P,MAAA1D,cAAA0U,EAAAT,WAAAS,GAEA/gB,EAAAngB,GAAA2gB,SAAA,SAAA7f,GACA,IAAAlF,KAAA3G,OACA,OAAA2G,KAGA,GAAAkF,EAKA,OAJAA,EAAAgkC,IAAAhkC,EAAAgkC,GAAA7vC,UACA6L,EAAAsX,EAAA9b,MAAAwE,IACAgkC,GAAAhkC,EAAAgkC,GAAA,IAEAlpC,KAAAgB,KAAA,WACAskC,EAAAwD,MAAA9oC,KAAAkF,KAGA,IAAA8jB,EAAAhpB,KAAA,GAEA,OAAAslC,EAAApC,iBAAAla,IAKAzE,EAAAngB,GAAAwgB,aAAAL,EAAA+P,MAAA/D,YAAA+U,EAAA1gB,aAAA0gB,GAGA/gB,EAAAngB,GAAA6sB,KAAA1M,EAAA+P,MAAA1D,cAAA0U,EAAArU,KAAAqU,GAEA/gB,EAAAngB,GAAAk/B,MAAA/e,EAAA+P,MAAA1D,cAAA0U,EAAAhC,MAAAgC,EAAAA,EAAAhC,OAEA/e,EAAAngB,GAAAm/B,OAAAhf,EAAA+P,MAAA1D,cAAA0U,EAAA/B,OAAA+B,EAAAA,EAAA/B,QAEAhf,EAAAngB,GAAAg/B,WAAA7e,EAAA+P,MAAA1D,cAAA0U,EAAAlC,WAAAkC,EAAAlC,aAEA,QAAA,UAAAhpC,QAAA,SAAAipC,GACA,IAAAiH,EAAAjH,EAAAxlC,QAAA,IAAA,SAAA0sC,GACA,OAAAA,EAAA,GAAA1xB,gBAGA0L,EAAAngB,GAAA,QAAAkmC,GAAA,SAAAE,EAAA5vC,GAWA,GAVA8E,UAAArG,OACA,kBAAAmxC,IACA5vC,EAAA4vC,EACAA,GAAA,IAGAA,GAAA,EACA5vC,OAAA0E,QAGAA,IAAA1E,EAAA,CACA,IAAAsnB,EAAAliB,KAAA,GACA,IAAAkiB,EACA,OAEA,IAAAuoB,EAAAnF,EAAArU,KAAA/O,GACA,GAAAsoB,EAAA,CACA,IAAAjyB,EAAA+sB,EAAAtC,cAAA9gB,GACAuoB,EAAAnH,MAAAmH,EAAAnH,MAAA/qB,EAAA2iB,KAAA3iB,EAAA+iB,MACAmP,EAAAlH,OAAAkH,EAAAlH,OAAAhrB,EAAAipB,IAAAjpB,EAAA8pB,OAEA,MAAA,UAAAgB,EAAAoH,EAAAnH,MAAAmH,EAAAlH,OAEA,OAAAvjC,KAAAgB,KAAA,SAAAuB,EAAA2f,GACA,IAAAwoB,KACAnyB,EAAA+sB,EAAAtC,cAAA9gB,GACA,UAAAmhB,GACAqH,EAAApH,MAAA1oC,EACA4vC,IACAE,EAAApH,MAAAoH,EAAApH,MAAA/qB,EAAA2iB,KAAA3iB,EAAA+iB,SAGAoP,EAAAnH,OAAA3oC,EACA4vC,IACAE,EAAAnH,OAAAmH,EAAAnH,OAAAhrB,EAAAipB,IAAAjpB,EAAA8pB,SAGAiD,EAAArU,KAAA/O,EAAAwoB,QAOAnmB,EAAAngB,GAAAghC,WAAA7gB,EAAA+P,MAAA1D,cAAA0U,EAAAnD,YAAAmD,EAAAA,EAAAnD,aAEA5d,EAAAngB,GAAAihC,YAAA9gB,EAAA+P,MAAA1D,cAAA0U,EAAA9B,aAAA8B,EAAAA,EAAA9B,cAEA8B,IAEAtsC,OAAA,qBAAA,0BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,sBACA,wBACA,sBACA,uBACA,qBACA,oBACA,sBACA,wBACA,SAAAU,EAAA8iB,EAAAnG,EAAA0L,EAAAujB,EAAAlH,EAAA1C,GACA,IAAAiP,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAEAC,EAAA70B,EAAAiJ,kBAAA,gBACAqc,EAAAtlB,EAAAiJ,kBAAA,iBAEA6rB,EAAA,8EACA1xB,EAAApD,EAAAuH,eAAA,YACAwtB,KAwBA,SAAAC,EAAAxqB,EAAAyqB,EAAAC,EAAAC,EAAAvqC,EAAAwqC,GACA,IAAA3sC,EAKA4sC,EACAC,EALAC,KACAC,KACAC,EAAA,GACAC,EAAA/rC,KAGAgsC,GAAA,EACA9G,GAAA,EAkCA,GA/BA1oB,EAAA3gB,cAAA0vC,KACAC,EAAAD,EAAAU,OACAhrC,EAAAsqC,EAAAW,SACAT,EAAAF,EAAAE,MACAF,EAAAA,EAAAA,UAGA/uB,EAAAvhB,SAAAswC,KACAA,EAAAY,EAAAC,OAAAb,SAEAjsC,IAAAisC,IACAA,EAAAY,EAAAC,OAAAC,QAEAd,GAAA,IACAY,EAAAhjC,MACAoiC,EAAA,GAGA/uB,EAAA7hB,WAAA6wC,IACAvqC,EAAAuqC,EACAc,KAAA,SAEAd,EAAAA,GAAA,QAGAC,EACAA,GAAA,IAEAA,EAAA,EAGAjvB,EAAAvhB,SAAAqwC,GAEAM,EAAAjB,GAAAW,EACAM,EAAAhB,GAAAW,EAAA,IACAK,EAAAf,GAAAW,EACAE,EAAAR,MACA,CAEA,IAAApsC,KAAAwsC,EAAA,CACA,IAAA73B,EAAA63B,EAAAxsC,GACA,GAAAqsC,EAAAptC,KAAAe,GACAgtC,GAAAhtC,EAAA,IAAA2U,EAAA,SACA,CAIA,GAHA,cAAA3U,IACAomC,GAAA,GAEA,QAAApmC,GAAA0d,EAAA3gB,cAAA4X,IAEA,GADAm4B,EAAA9sC,GAAA,QAAA2U,EAAA+tB,IAAA,MAAA/tB,EAAA6nB,MAAA,MAAA7nB,EAAA4uB,OAAA,MAAA5uB,EAAAynB,KAAA,MACA,QAAAkD,EAAAnM,IAAApR,EAAA,QAAA,CACA,IAAAoQ,EAAAqU,EAAArU,KAAApQ,GACAud,EAAAnM,IAAApR,EAAA,OAAA,YAAAoQ,EAAAqS,MAAA,MAAArS,EAAAsS,OAAA,YACA,QAIAqI,EAAA9sC,GAAA2U,EAEAo4B,EAAA9sC,KAAAyd,EAAA1D,UAAAha,KAGA4sC,EAAA/P,EA8DA,OA3DAmQ,IACAF,EAAAnyB,GAAAqyB,EACAD,EAAA9sC,KAAA0a,IAGA8xB,EAAA,GAAA/uB,EAAA3gB,cAAAyvC,KACAM,EAAAd,GAAAe,EAAAvkC,KAAA,MACAskC,EAAAb,GAAAQ,EAAA,IACAK,EAAAX,GAAAQ,EAAA,IACAG,EAAAZ,GAAAQ,GAGAG,EAAA,SAAAvkC,GAEA,GADA4kC,GAAA,EACA5kC,EAAA,CACA,GAAAA,EAAAlI,SAAAkI,EAAAsyB,cACA,OAEAgC,EAAAvyB,IAAA/B,EAAAlI,OAAAwsC,EAAAC,QAEAjQ,EAAAvyB,IAAA0X,EAAAqqB,EAAAS,GAEAvN,EAAAnM,IAAApR,EAAAuqB,GAIAnqC,GAAAA,EAAA1G,KAAAyF,OAGAurC,EAAA,IACA7P,EAAAl0B,GAAAqZ,EAAA6qB,EAAAC,GAGAnvB,EAAAlL,SAAA,WACA06B,GAGAL,EAAApxC,KAAAwxC,IACA,KAAAR,EAAAE,GAAA,GALAjvB,IASAqE,EAAA0rB,WAEAnO,EAAAnM,IAAApR,EAAA+qB,GAEAL,GAAA,GACA/uB,EAAAlL,SAAA,WACA06B,GAGAL,EAAApxC,KAAAwxC,IACA,EALAvvB,GAQA0oB,GACAsH,EAAA3rB,EAAAyqB,EAAA,UAAAC,EAAAtqC,GAGAjB,KASA,SAAAkyB,EAAArR,EAAA4rB,EAAAxrC,GAUA,OATAm9B,EAAAlM,KAAArR,GACA4rB,KACAxrC,GAAAub,EAAA7hB,WAAA8xC,KACAxrC,EAAAwrC,EACAA,EAAA,UAEArO,EAAAnM,IAAApR,EAAA,UAAA,GACAwqB,EAAAxqB,GAAA4c,QAAA,EAAAiP,MAAA,OAAAD,EAAAxrC,IAEAjB,KAUA,SAAAmyB,EAAAtR,EAAA4rB,EAAAxrC,GAeA,OAdAwrC,IACAxrC,GAAAub,EAAA7hB,WAAA8xC,KACAxrC,EAAAwrC,EACAA,EAAA,UAEApB,EAAAxqB,GAAA4c,QAAA,EAAAiP,MAAA,OAAAD,EAAA,WACArO,EAAAjM,KAAAtR,GACA5f,GACAA,EAAA1G,KAAAsmB,MAIAud,EAAAjM,KAAAtR,GAEA7gB,KAUA,SAAAwsC,EAAA3rB,EAAAslB,EAAAsG,EAAAxrC,GACA,IAAA0rC,EAAApvC,SAAAsjB,EAAAokB,WACA1rC,EAAA,EAEAqzC,EAAA,IAAAH,EADA,EAEA1H,EAAAxnC,SAAA4oC,GAEA0G,EAAAC,YAAA,aACAvzC,GAEAqzC,IAAA/rB,EAAAokB,WAAAF,EAAA4H,GAAAC,EAAArzC,EAAAozC,GAEApzC,GAAAqzC,EAAA,IACAG,cAAAF,GACA5rC,GAAAub,EAAAlL,SAAArQ,EAAA,IAAAub,KAXA,GAuCA,SAAAwwB,EAAAnsB,EAAA4rB,EAAAhP,EAAAwO,EAAAhrC,GAEA,OADAoqC,EAAAxqB,GAAA4c,QAAAA,GAAAgP,EAAAR,EAAAhrC,GACAjB,KAWA,SAAAitC,EAAApsB,EAAA4rB,EAAAR,EAAAhrC,GACA,IAAA/B,EAAAk/B,EAAAnM,IAAApR,EAAA,WAUA,OATA3hB,EAAA,EACAk/B,EAAAnM,IAAApR,EAAA,UAAA,GAEA3hB,EAAA,EAEAk/B,EAAAlM,KAAArR,GAEAmsB,EAAAnsB,EAAA4rB,EAAAvtC,EAAA+sC,EAAAhrC,GAEAjB,KAUA,SAAAktC,EAAArsB,EAAA4rB,EAAAR,EAAAhrC,GACA,IACAirC,EACAzO,EAAAW,EAAAnM,IAAApR,EAAA,WACA3b,KAyBA,OAvBAsX,EAAA3gB,cAAA4wC,IACAvnC,EAAA+mC,OAAAQ,EAAAR,OACA/mC,EAAAqmC,SAAAkB,EAAAlB,SACAW,EAAAO,EAAAP,WAEAhnC,EAAAqmC,SAAAkB,EACAxrC,GACAirC,EAAAjrC,EACAiE,EAAA+mC,OAAAA,GAEAC,EAAAD,GAGA/mC,EAAAgnC,SAAA,WACA9N,EAAAnM,IAAApR,EAAA,UAAA4c,GACAW,EAAAjM,KAAAtR,GACAqrB,GACAA,EAAA3xC,KAAAsmB,IAIAmsB,EAAAnsB,EAAA3b,EAAA,GAEAlF,KAyBA,SAAAmtC,EAAAtsB,EAAA0qB,EAAAtqC,GAGA,IAAA8jB,EAAAqZ,EAAAnM,IAAApR,EAAA,YAGAqR,EAAArR,GAGAud,EAAAnM,IAAApR,GACAkE,SAAA,WACAqoB,WAAA,WAIA,IAAAnJ,EAAA7F,EAAAnM,IAAApR,EAAA,cACAsjB,EAAA/F,EAAAnM,IAAApR,EAAA,iBACAyjB,EAAAlG,EAAAnM,IAAApR,EAAA,eACA2jB,EAAApG,EAAAnM,IAAApR,EAAA,kBACA0iB,EAAAnF,EAAAnM,IAAApR,EAAA,UA8BA,OA3BAud,EAAAnM,IAAApR,GACAkE,SAAAA,EACAqoB,WAAA,UACAC,SAAA,SACA9J,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAIA6G,EAAAxqB,GACA0iB,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEA+G,SAAAA,EACAW,SAAA,WACAjrC,GACAA,EAAAlB,MAAA8gB,MAKA7gB,KASA,SAAAstC,EAAAzsB,EAAA0qB,EAAAtqC,GAEA,GAAAqkC,EAAA/B,OAAA1iB,GAAA,EAAA,CAGAud,EAAAnM,IAAApR,EAAA,YAAA,IAGA0iB,EAAAnF,EAAAnM,IAAApR,EAAA,UACAojB,EAAA7F,EAAAnM,IAAApR,EAAA,cACAsjB,EAAA/F,EAAAnM,IAAApR,EAAA,iBACAyjB,EAAAlG,EAAAnM,IAAApR,EAAA,eACA2jB,EAAApG,EAAAnM,IAAApR,EAAA,kBAGAud,EAAAnM,IAAApR,GACAusB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAIA6G,EAAAxqB,GACA0iB,OAAA,EACAU,UAAA,EACAE,aAAA,EACAG,WAAA,EACAE,cAAA,IAGA+G,SAAAA,EACAgC,OAAA,EACArB,SAAA,WACA/Z,EAAAtR,GACAud,EAAAnM,IAAApR,GACAusB,WAAA,UACAC,SAAA,SACA9J,OAAAA,EACAU,UAAAA,EACAE,aAAAA,EACAG,WAAAA,EACAE,cAAAA,IAEAvjC,GACAA,EAAAlB,MAAA8gB,MAKA,OAAA7gB,KAsHA,SAAAmsC,IACA,OAAAA,EA6BA,OAvlBAf,EAAAT,EAAAt0B,EAAAgJ,qBAAA,mBACA+rB,EAAAR,EAAAv0B,EAAAgJ,qBAAA,uBACA+rB,EAAA/0B,EAAAgJ,qBAAA,oBACA+rB,EAAAP,EAAAx0B,EAAAgJ,qBAAA,8BAAA,GAEA+rB,EAAAN,EAAAz0B,EAAAgJ,qBAAA,wBACA+rB,EAAAL,EAAA10B,EAAAgJ,qBAAA,wBACA+rB,EAAAH,EAAA50B,EAAAgJ,qBAAA,qBACA+rB,EAAAJ,EAAA30B,EAAAgJ,qBAAA,+BAAA,GAqjBA7C,EAAA1c,MAAAqsC,GACAhjC,KAAA,EAEAijC,QACAC,OAAA,IACAmB,KAAA,IACAC,KAAA,KAGApC,QAAAA,EACAqC,qBA7GA,SAAA7sB,EAAA0qB,GACA,IAAAoC,GAAA,EACAjS,EAAA7zB,IAAAgZ,EAAA,gBAAA,WACA8sB,GAAA,IASA,OAFAj8B,WALA,WACAi8B,GACAjS,EAAAlyB,QAAAqX,EAAAxK,EAAAkJ,QAAA7B,WAAA8B,MAGA+rB,GAEAvrC,MAkGAitC,OAAAA,EACAC,QAAAA,EACAF,OAAAA,EACAY,WAtQA,SAAA/sB,EAAA4rB,EAAAoB,EAAAC,GACA1P,EAAAU,YAAAje,GACAosB,EAAApsB,EAAA4rB,EAAAR,OAAAhrC,UAEAisC,EAAArsB,EAAA4rB,EAAAR,OAAAhrC,UAEA,OAAAjB,MAiQAmyB,KAAAA,EACAqa,YAAAA,EAEAW,UAAAA,EACAY,YAnIA,SAAAltB,EAAA0qB,EAAAtqC,GAGA,GAAAqkC,EAAA/B,OAAA1iB,GACAssB,EAAAtsB,EAAA0qB,EAAAtqC,GAIAqsC,EAAAzsB,EAAA0qB,EAAAtqC,GAEA,OAAAjB,MA0HAstC,QAAAA,EACApb,KAAAA,EACA8b,MAhFA,SAAAntB,EAAAphB,GAEA,IAKAwuC,EAJA9hC,GAFA1M,EAAAA,OAEA0M,KAEA+hC,GADAzuC,EAAAwf,MACAxf,EAAAyuC,MACAjtC,EAAAxB,EAAAwB,SAGAktC,EAAApsB,EAAA7D,cAAA,OACAuP,MAAAhuB,EAAAa,WAAA,aAKA0tC,GApCA,SAAAntB,EAAAphB,GACA,IAAA2uC,EAAArsB,EAAA7D,cAAA,MAAAze,GACA2+B,EAAAnM,IAAAmc,GACArpB,SAAA,WACAyc,IAAA,EACAtG,KAAA,EACAoI,MAAA,OACAC,OAAA,OACA8K,OAAA,WACA5Q,QAAA,KAEA5c,EAAAO,YAAAgtB,GAsBAE,CAAAH,GACA1gB,MAAA,iBAEA1L,EAAA7D,cAAA,OACAuP,MAAA,WAEA8gB,EAAAxsB,EAAAuB,eAAAnX,GAAA,IACAhB,EAAA,WACA8iC,IACAx8B,aAAAw8B,GACAA,EAAA,MAEAE,IACApsB,EAAA5W,OAAAgjC,GACAA,EAAA,OAQA1uC,EAAAwf,OACAmf,EAAAnM,IAAAkc,EAAA1uC,EAAAwf,OAEA+uB,EAAA5sB,YAAAmtB,GACAJ,EAAA/sB,YAAA4sB,GACAntB,EAAAO,YAAA+sB,GAKAD,IACAD,EAAAv8B,WALA,WACAvG,IACAlK,GAAAA,KAGAitC,IAGA,OACA/iC,OAAAA,EACAqjC,OArBA,SAAA/uC,GACAA,GAAAA,EAAA0M,MAAAgiC,IACAI,EAAAE,UAAAhvC,EAAA0M,SAkDA4lB,OAzWA,SAAAlR,EAAA4rB,EAAAxrC,GACAm9B,EAAAU,YAAAje,GACAqR,EAAArR,EAAA4rB,EAAAxrC,GAEAkxB,EAAAtR,EAAA4rB,EAAAxrC,GAEA,OAAAjB,QAsWAtG,EAAAC,OAAA,UAAAwyC,KAEAnzC,OAAA,wBACA,OACA,oBACA,sBACA,SAAAmzC,EAAAtX,EAAAtQ,GAmCA,OAjCAsQ,EAAAvnB,UACA,UACA,uBACA,SACA,UACA,SACA,aACA,OACA,cACA,YACA,cACA,UACA,OACA,UACA6+B,GAEA5nB,EAAAngB,GAAA+tB,KAAA5N,EAAA+P,MAAA3D,kBAAAwb,EAAAha,KAAAga,GAEA5nB,EAAAngB,GAAAinC,QAAA9mB,EAAA+P,MAAA3D,kBAAAwb,EAAAd,QAAAc,GACA5nB,EAAAngB,GAAAspC,qBAAAnpB,EAAA+P,MAAA3D,kBAAAwb,EAAAuB,qBAAAvB,GAEA5nB,EAAAngB,GAAA8tB,KAAA3N,EAAA+P,MAAA3D,kBAAAwb,EAAAja,KAAAia,GACA5nB,EAAAngB,GAAA+tB,KAAA5N,EAAA+P,MAAA3D,kBAAAwb,EAAAha,KAAAga,GACA5nB,EAAAngB,GAAAsqC,OAAAnqB,EAAA+P,MAAA3D,kBAAAwb,EAAAuC,OAAAvC,GACA5nB,EAAAngB,GAAA4oC,OAAAzoB,EAAA+P,MAAA3D,kBAAAwb,EAAAa,OAAAb,GACA5nB,EAAAngB,GAAA6oC,OAAA1oB,EAAA+P,MAAA3D,kBAAAwb,EAAAc,OAAAd,GACA5nB,EAAAngB,GAAA8oC,QAAA3oB,EAAA+P,MAAA3D,kBAAAwb,EAAAe,QAAAf,GACA5nB,EAAAngB,GAAAwpC,WAAArpB,EAAA+P,MAAA3D,kBAAAwb,EAAAyB,WAAAzB,GAEA5nB,EAAAngB,GAAA+oC,UAAA5oB,EAAA+P,MAAA3D,kBAAAwb,EAAAgB,UAAAhB,GACA5nB,EAAAngB,GAAA2pC,YAAAxpB,EAAA+P,MAAA3D,kBAAAwb,EAAA4B,YAAA5B,GACA5nB,EAAAngB,GAAAkpC,QAAA/oB,EAAA+P,MAAA3D,kBAAAwb,EAAAmB,QAAAnB,GAEAA,IAEAnzC,OAAA,mBAAA,wBAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,gCACA,wBACA,sBACA,qBACA,oBACA,uBACA,sBACA,oBACA,sBACA,kBACA,qBACA,qBACA,SAAAU,EAAA8iB,EAAAuF,EAAAuN,EAAAoM,EAAAzO,EAAAqY,EAAAlH,EAAA+N,EAAA5nB,EAAAoqB,GACA,aAEA,IAAA3wC,EAAAhE,MAAAgC,UAAAgC,MAEA4wC,GADA50C,MAAAgC,UAAAgI,WAEA63B,KAKA,SAAAxH,EAAAxT,EAAAguB,EAAA3pC,GACA,IAAA4pC,EAAAD,EAAAz1C,MAAA,KACA21C,EAAAD,EAAA,GACAD,EAAAC,EAAA,GAEAC,IACAA,EAAAF,GAGA,IAAAG,EAAA1f,EAAA3nB,KAAAkZ,EAAAkuB,GAEA,GAAA,aAAA7pC,EACA,OAAA8pC,EACA,GAAA,YAAA9pC,EAAA,CACA,IAAA8pC,EACA,MAAA,IAAA3pC,MAAA,sCAEA2pC,EAAAC,UACA3f,EAAAO,WAAAhP,EAAAguB,GACAG,OAAA1vC,OAEA,GAAA0vC,EAOA9pC,GACA8pC,EAAAtkB,MAAAxlB,OARA,CACA,QAAA5F,IAAA4F,GAAA,iBAAAA,EACA,MAAA,IAAAG,MAAA,sCAEA,IAAA6pC,EAAAN,EAAAC,GACAG,EAAA,IAAAE,EAAAruB,EAAA3b,GACAoqB,EAAA3nB,KAAAkZ,EAAAkuB,EAAAC,GAMA,OAAAA,EAyGA,IAAAG,EAAA3yB,EAAA9S,QAAA1C,SACAb,UAAA,SAEAtB,WAAA,SAAAgc,EAAA3b,GACAlF,KAAA40B,KAAA/T,EACA7gB,KAAAovC,aAAAlqC,IAGAkqC,aAAA,SAAAlqC,GACA,IAAAE,EAAApF,KAAAvF,YACAqT,EAAA1I,EAAA0I,MAAA1I,EAAA0I,UACArP,EAAAqP,EAAArP,SACA,IAAAA,EAAA,CACA,IAAA4wC,KACA,EAAA,CAEA,GADAA,EAAA9pC,QAAAH,GACAA,IAAA+pC,EACA,MAEA/pC,EAAAA,EAAAI,iBACAJ,GAEA3G,EAAAqP,EAAArP,YACA,IAAA,IAAAlF,EAAA,EAAAA,EAAA81C,EAAAh2C,OAAAE,KACA6L,EAAAiqC,EAAA91C,IACAyC,UAAAuC,eAAA,YACAie,EAAA1c,MAAArB,EAAA2G,EAAApJ,UAAAkJ,SAAA,GAEAE,EAAA7G,eAAA,YACAie,EAAA1c,MAAArB,EAAA2G,EAAAF,SAAA,GASA,OALApJ,OAAAgL,eAAA9G,KAAA,WACApF,MAAA4hB,EAAA1c,SAAArB,EAAAyG,GAAA,KAIAlF,KAAAkF,SAIA+pC,QAAA,WAGAjvC,KAAAsvC,WAGAhgB,EAAAO,WAAA7vB,KAAA40B,KAAA50B,KAAA6uC,aAGAS,SAAA9yB,EAAAzK,KAEAw9B,OAAA,SAAA38B,EAAA64B,GAKA,IAAA+D,EAAAxvC,KACA,OAAA0R,WALA,WACA,OAAA,iBAAAkB,EAAA48B,EAAA58B,GAAAA,GACA7S,MAAAyvC,EAAA9vC,YAGA+rC,GAAA,IAGAtd,OAAA,SAAArvB,EAAAlE,GACA,IACA0sB,EACAmoB,EACAl2C,EAHA2L,EAAApG,EAKA,GAAA,IAAAY,UAAArG,OAGA,OAAAmjB,EAAA1c,SAAAE,KAAAkF,SAGA,GAAA,iBAAApG,EAMA,GAHAoG,KACAoiB,EAAAxoB,EAAA1F,MAAA,KACA0F,EAAAwoB,EAAA3nB,QACA2nB,EAAAjuB,OAAA,CAEA,IADAo2C,EAAAvqC,EAAApG,GAAA0d,EAAA1c,SAAAE,KAAAkF,QAAApG,IACAvF,EAAA,EAAAA,EAAA+tB,EAAAjuB,OAAA,EAAAE,IACAk2C,EAAAnoB,EAAA/tB,IAAAk2C,EAAAnoB,EAAA/tB,QACAk2C,EAAAA,EAAAnoB,EAAA/tB,IAGA,GADAuF,EAAAwoB,EAAA1nB,MACA,IAAAF,UAAArG,OACA,YAAAiG,IAAAmwC,EAAA3wC,GAAA,KAAA2wC,EAAA3wC,GAEA2wC,EAAA3wC,GAAAlE,MACA,CACA,GAAA,IAAA8E,UAAArG,OACA,YAAAiG,IAAAU,KAAAkF,QAAApG,GAAA,KAAAkB,KAAAkF,QAAApG,GAEAoG,EAAApG,GAAAlE,EAMA,OAFAoF,KAAA0vC,YAAAxqC,GAEAlF,MAGA0vC,YAAA,SAAAxqC,GACA,IAAApG,EAEA,IAAAA,KAAAoG,EACAlF,KAAA2vC,WAAA7wC,EAAAoG,EAAApG,IAGA,OAAAkB,MAGA2vC,WAAA,SAAA7wC,EAAAlE,GAIA,OAFAoF,KAAAkF,QAAApG,GAAAlE,EAEAoF,MAGA4vC,OAAA,SAAAz1B,GACAA,EAAAA,GAAA,SACA,GAAAA,MAAA,IAAAtL,KAAAC,gBACA+H,SAAA6B,eAAAyB,IACA,OAAAA,GAGA0G,IAAA,WACA,OAAA7gB,KAAA40B,QAsBA,SAAAR,IACA,OAAAA,EAUA,OA5BA7P,EAAAngB,GAAA8vB,OAAA,SAAA16B,EAAA0L,GACA,IAAA1F,EAAAxB,EAAAzD,KAAAmF,UAAA,GACAoI,EAAA9H,KACAm0B,EAAAn0B,KAKA,OAHAA,KAAAgB,KAAA,WACAmzB,EAAAE,EAAAt0B,MAAA+H,GAAA9H,KAAAxG,GAAAwK,OAAAxE,MAEA20B,GAGAwa,EAAAtoC,QAAA,SAAA,SAAA7M,EAAA0L,GACA,IAAA1F,EAAAxB,EAAAzD,KAAAmF,UAAA,GACA,OAAA20B,EAAAt0B,MAAAC,MAAAA,KAAA6vC,QAAAr2C,GAAAwK,OAAAxE,MAQAgd,EAAA1c,MAAAs0B,GACAC,YAAAA,EACA8a,OAAAA,EACAhV,SA9MA,SAAA+U,EAAAY,EAAAf,EAAAgB,GACA,IAAAlB,EAAAK,EAAAlzC,UAAA6yC,WAIA,GAFAD,EAAAC,GAAAK,EAEAY,EAAA,CACAf,GAAAvyB,EAAA7hB,WAAAo0C,KACAgB,EAAAhB,EACAA,EAAA,MAEAA,IACAF,EAAAA,EAAA,IAAAE,GAGA,IAAAziC,EAAAuvB,EAAAiU,GAnEA,SAAAjB,EAAAkB,GAKA,OAAA,SAAAlvB,EAAA3b,GACA,IAAAgvB,EAAAG,EAAAxT,EAAAguB,EAAA,YACA,GAAA,aAAA3pC,EACA,OAAAgvB,GAAA,KAGA,IAAAA,IACAA,EAAAG,EAAAxT,EAAAguB,EAAA,iBAAA3pC,GAAAA,OACA,iBAAAA,GACA,OAAAlF,KAGA,GAAAkF,EAAA,CACA,IAAA1F,EAAAxB,EAAAzD,KAAAmF,UAAA,GACA,GAAAqwC,EACA,OAAAA,EAAAhwC,MAAAm0B,EAAA10B,GAEA,GAAA,iBAAA0F,EAAA,CACA,IAAAmK,EAAAnK,EAEA,IAAAgvB,EACA,MAAA,IAAA7uB,MAAA,0BAAAwpC,EACA,uDACAx/B,EAAA,KAGA,IAAAmN,EAAA7hB,WAAAu5B,EAAA7kB,KAAA,MAAAA,EAAA+J,OAAA,GACA,MAAA,IAAA/T,MAAA,mBAAAgK,EAAA,SAAAw/B,EACA,oBAGA,IAAAhoC,EAAAqtB,EAAA7kB,GAAAtP,MAAAm0B,EAAA10B,GAKA,OAJAqH,GAAAqtB,IACArtB,OAAAvH,GAGAuH,KA0BAmpC,CAAAnB,EAAAkB,GAEAxrB,EAAAngB,GAAA0rC,GAAA,SAAA5qC,GACA,IAAAivB,EAAAn0B,KAEA,GAAAA,KAAA3G,QAAA,aAAA6L,EAEA,CACA,IAAA1F,EAAAxB,EAAAzD,KAAAmF,WACAM,KAAAgB,KAAA,WACA,IAAAivC,EAAAjyC,EAAAzD,KAAAiF,GACAywC,EAAA1qC,QAAAvF,MACA,IAAA6G,EAAAyF,EAAAvM,WAAAT,EAAA2wC,QACA3wC,IAAAuH,IACAstB,EAAAttB,UARAstB,OAAA70B,EAaA,OAAA60B,GAGAwa,EAAAtoC,QAAAypC,EAAA,SAAA5qC,GACA,IAAA2B,EAAAyF,EAAAtM,KAAA40B,KAAA1vB,GAIA,YAHA5F,IAAAuH,IACAA,EAAA7G,MAEA6G,MAsKAg1B,UAAAA,IAGAniC,EAAAC,OAAA,eAAAy6B,KAEAp7B,OAAA,6BACA,aACA,SAAAo7B,GACA,OAAAA,IAEAp7B,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA,IAEAb,OAAA,+BACA,wBACA,sBACA,uBACA,oBACA,uBACA,qBACA,qBACA,oBACA,oBACA,qBACA,kBACA,uBACA,kCACA,UACA,SAAAU,QAAA8iB,MAAAnG,QAAAiZ,MAAAoM,QAAA3Z,MAAAmb,MAAAoI,KAAAqJ,KAAApqB,EAAA4nB,GAAA/X,QAAA1oB,QAAAC,MAIA,IAAAukC,OAAA9b,QAAA+a,OAAAnoC,SACAb,UAAA,SAEAgqC,MAAAxB,KAEA9pC,WAAA,SAAAgc,EAAA3b,GACAsX,MAAA3hB,WAAAgmB,GACA3b,EAAAlF,KAAAowC,OAAAvvB,EAAA3b,IAEAA,EAAA2b,EACAA,EAAA,MAEA7gB,KAAA4G,UAAAia,EAAA3b,GAEA2b,EAIA7gB,KAAAqwC,MAAA1B,KAAA3uC,KAAA40B,OAHA50B,KAAAqwC,MAAArwC,KAAAswC,UACAtwC,KAAA40B,KAAA50B,KAAAqwC,MAAAxvB,OAKA/kB,OAAAgL,eAAA9G,KAAA,SACApF,MAAAoF,KAAAkF,QAAAqH,OAAA,IAAAb,UAIA1L,KAAA2M,QAEA,IAAA4jC,EAAAvwC,KAAAkF,QAAAsrC,OACA,GAAAD,EAAA,CACA,IAAAE,EAAAzwC,KAAAvF,YACA+1C,EAAAC,EAAAD,OACA,IAAA,IAAAE,KAAAH,EACA,IAAA,IAAAh3C,EAAA,EAAAA,EAAAg3C,EAAAG,GAAAr3C,OAAAE,IAAA,CACA,IAAAo3C,EAAAJ,EAAAG,GAAAn3C,GACA,GAAAijB,MAAAvhB,SAAA01C,GAAA,CACA,IAAAC,EAAAD,EACAE,EAAAL,EAAAE,GAAAE,GACAE,EAAAD,EAAAzrC,KAAAyrC,EAAAzrC,KAAAyrC,EAEA7wC,KAAA+wC,MAAAD,EAAAD,EAAA3rC,WAQAlF,KAAA40B,KAAAoc,eAEAhxC,KAAAixC,YAWAb,OAAA,SAAAvvB,IAAA3b,SACA,IAAAgsC,YAAA5hB,MAAA3nB,KAAAkZ,IAAA,WACA,GAAAqwB,YAAA,CAEA,IAAAC,SAAAC,KAAA,KAAAF,YAAA,MACAhsC,QAAAsX,MAAA1c,MAAAqxC,SAAAjsC,SAEA,OAAAA,aASAorC,QAAA,WACA,IAAAp+B,EAAAlS,KAAAkF,QAAAgN,SACA,GAAAA,EACA,OAAAlS,KAAAmwC,MAAAj+B,GAEA,MAAA,IAAA7M,MAAA,4CAUAsH,MAAA,WACA,IAAA7E,EAAA9H,KACAA,KAAAqxC,aACArxC,KAAAqwC,MAAA9R,SAAAv+B,KAAAqxC,aAEArxC,KAAAuM,MAAA/E,GAAA,UAAA,SAAAU,EAAA1I,GACAsI,EAAAwpC,SAAA9xC,EAAAmI,SAUAspC,SAAA,aAUAK,SAAA,SAAAC,KA4BAC,SACA/pC,UAMAgqC,aAIAnG,cAIAoG,WAKAX,MAAA,SAAA3rC,EAAA4sB,GACA,IAAA0e,EAAAtrC,EAAAsrC,aACAE,EAAAxrC,EAAAwrC,UAEA5wC,KAAA2xC,QAAA3xC,KAAAwwC,WACA,IAAA1kC,EAAA9L,KAAA2xC,QAAAjB,GAAA1wC,KAAA2xC,QAAAjB,OAEA,OADA5kC,EAAA8kC,GAAA,IAAAxrC,EAAApF,KAAAgyB,GACAhyB,MAGAwwC,OAAA,SAAAE,EAAAv+B,GACAnS,KAAA2xC,QAAA3xC,KAAAwwC,WACA,IAAA1kC,EAAA9L,KAAA2xC,QAAAjB,GAAA1wC,KAAA2xC,QAAAjB,OAEA,QAAApxC,GAAA6S,EACA,OAAAqK,MAAA9b,MAAAoL,GAAA,MAEA0Q,MAAA1c,MAAAgM,EAAAqG,IAWAC,OAAA,WACA,OAAApS,KAAA40B,MAWAgd,aAAA,SAAAlqC,GACA,OAAA,MASAmqC,YAAA,WAGA,OADAnsB,SAAA,IAAAosB,UACApsB,UAUAwM,KAAA,WACAlyB,KAAAqwC,MAAAne,QASAC,KAAA,WACAnyB,KAAAqwC,MAAAle,QASAhJ,MAAA,WACA,IACAnpB,KAAAqwC,MAAAlnB,QACA,MAAA4oB,IAIA,OAAA/xC,MASAoiB,KAAA,WAGA,OAFApiB,KAAAqwC,MAAAjuB,OAEApiB,MAGAgyC,OAAA,WAEA,OADAhyC,KAAAuM,MAAAvB,IAAA,YAAA,GACAhL,MAGAiyC,QAAA,WAEA,OADAjyC,KAAAuM,MAAAvB,IAAA,YAAA,GACAhL,MAWAwvB,KAAA,SAAAh2B,EAAAoB,GACA,MAAAkN,EAAA9H,KAAA6gB,EAAA/Y,EAAAoqC,MAAApqC,EAAAqqC,YAEA,YAAA,IAAAv3C,EACAkN,EAAAsqC,MAAA54C,IAGAsO,EAAAsqC,MAAA54C,GAAAoB,EAEAkN,EAAAyE,MAAA1B,IAAA,aACAgW,EAAAU,aAAA,SAAA/nB,EAAAA,EAAA,QAAAA,EAAAoB,GAGAkN,IAGAgT,KAAA,SAAAthB,EAAAoB,GACA,IAAAi6B,EAAA70B,KAAAqwC,MACAxpC,EAAAguB,EAAA/Z,KAAAthB,EAAAoB,GACA,OAAAiM,GAAAguB,EAAA70B,KAAA6G,GAGAorB,IAAA,SAAAz4B,EAAAoB,GACA,IAAAi6B,EAAA70B,KAAAqwC,MACAxpC,EAAAguB,EAAA5C,IAAAz4B,EAAAoB,GACA,OAAAiM,GAAAguB,EAAA70B,KAAA6G,GAGAc,KAAA,SAAAnO,EAAAoB,GACA,IAAAi6B,EAAA70B,KAAAqwC,MACAxpC,EAAAguB,EAAAltB,KAAAnO,EAAAoB,GACA,OAAAiM,GAAAguB,EAAA70B,KAAA6G,GAGAnE,KAAA,SAAAlJ,EAAAoB,GACA,IAAAi6B,EAAA70B,KAAAqwC,MACAxpC,EAAAguB,EAAAnyB,KAAAlJ,EAAAoB,GACA,OAAAiM,GAAAguB,EAAA70B,KAAA6G,GAGAmnC,MAAA,SAAAvuC,GACA,OAAA0sC,GAAA6B,MAAAhuC,KAAA40B,KAAAn1B,IAGAwI,KAAA,SAAA9N,EAAAsF,GACA,IAAAyI,EAAAsU,MAAAjV,QAAAkC,YAAAtP,GACAwN,KAAAlI,IAEA,OAAA+c,MAAAjV,QAAAvL,UAAAiM,KAAA1N,KAAAyF,KAAAkI,EAAAzI,IASA9F,OAAA,SAAAuF,EAAA6lB,GACA,IAAAlE,EAAA3hB,EACA6lB,GAAA,SAAAA,EAEA,UAAAA,EACAhD,MAAApS,OAAAkR,EAAA7gB,KAAA40B,MACA,SAAA7P,GACAhD,MAAAlS,MAAAgR,EAAA7gB,KAAA40B,MAJA7S,MAAAb,OAAAL,EAAA7gB,KAAA40B,MAMA50B,KAAAixC,YASA3e,OAAA,WACAtyB,KAAAqwC,MAAAllC,YAuDA,OAnDA+kC,OAAAlpC,QAAA,SAAAqrC,GACA,IAAAjtC,EAAAgvB,QAAA+a,OAAAnoC,QAAAjH,MAAAC,KAAAN,WAEA,SAAA4yC,EAAA94C,GACA4L,EAAApJ,UAAAxC,GAAA,SAAAoB,GACA,YAAA0E,IAAA1E,GACAoF,KAAAuM,MAAAvB,IAAAxR,EAAAoB,GACAoF,MAEAA,KAAAuM,MAAA1B,IAAArR,IAIA,GAAA64C,EAAA9lC,MACA,IAAA,IAAA/S,KAAA64C,EAAA9lC,MACA+lC,EAAA94C,GAOA,OAHA64C,EAAAxD,YACAza,QAAA+F,SAAA/0B,EAAAitC,EAAAxD,YAEAzpC,GAGA8qC,OAAA/V,SAAA,SAAA/0B,EAAAmtC,GACA,IAAAF,EAAAjtC,EAAApJ,UACA6yC,EAAA0D,GAAAF,EAAAxD,WAEA,SAAAyD,EAAA94C,GACA4L,EAAApJ,UAAAxC,GAAA,SAAAoB,GACA,YAAA0E,IAAA1E,GACAoF,KAAAuM,MAAAvB,IAAAxR,EAAAoB,GACAoF,MAEAA,KAAAuM,MAAA1B,IAAArR,IAIA,GAAA64C,EAAA9lC,MACA,IAAA,IAAA/S,KAAA64C,EAAA9lC,MACA+lC,EAAA94C,GAOA,OAHAq1C,GACAza,QAAA+F,SAAA/0B,EAAAypC,GAEAzpC,GAGAuG,KAAAukC,OAAAA,SAGAl3C,OAAA,6BACA,SACA,WACA,kBACA,YACA,SAAA2S,GACA,OAAAA,IAEA3S,OAAA,wBAAA,6BAAA,SAAAa,GAAA,OAAAA","file":"../skylark-widgets-base-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"./base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Action\",\r\n\t\"./ActionManager\",\r\n\t\"./Widget\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}