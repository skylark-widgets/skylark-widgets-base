{"version":3,"sources":["skylark-widgets-base-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","parse","event","segs","join","Emitter","on","events","selector","data","ctx","one","self","_hub","parsed","emit","e","CustomEvent","eventName","listeners","len","reCompact","listener","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","collections","Collection","_clear","clear","count","c","it","iterator","hasNext","thisArg","next","toArray","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","match","get","strKey","silent","set","oldValue","updated","remove","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","ActionManager","addAction","category","executeAction","removeAction","ActiionManager","Action","text","tooltip","icon","shortcut","state","_state","checked","disabled","_init","execute","_execute","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","Infinity","matches","idProperty","id","getIdentity","put","Math","random","overwrite","add","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","settings","oldSettings","render","matcher","RegExp","noMatch","escapeRegExp","escapeChar","variable","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","changes","changing","_changing","_previousAttributes","current","prev","_pending","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","Widget","_elmx","_parse","_velm","_create","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","eval","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName"],"mappings":"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","file":"../skylark-widgets-base-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"./base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute(name);\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data, data.data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData, data);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-storages-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Action\",\r\n\t\"./ActionManager\",\r\n\t\"./Widget\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}