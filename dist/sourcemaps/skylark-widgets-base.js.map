{"version":3,"sources":["skylark-widgets-base.js"],"names":["define","skylark","attach","numbers","Vector2","x","y","this","Object","defineProperties","prototype","width","get","set","value","height","assign","setScalar","scalar","setX","setY","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","rotateAround","center","c","cos","sin","list","skins","register","skin","name","push","getList","slice","types","objects","events","browser","datax","eventer","noder","files","geom","elmx","$","fx","plugins","HashMap","base","SkinManager","Widget","Plugin","inherit","klassName","_construct","parent","elm","options","isHtmlNode","_parse","isString","tagName","overrided","_velm","_elm","_create","defineProperty","state","visible","size","position","_mode","TOP_LEFT","_init","addonCategoryOptions","addons","widgetCtor","categoryName","i","addonOption","addonName","addonSetting","addonCtor","ctor","addon","optionsAttr","data","options1","eval","mixin","template","createElement","style","overflow","Error","self","widgetClass","addClass","on","args","_refresh","_startup","_updatePosition","mode","TOP_RIGHT","top","bottom","BOTTOM_LEFT","left","right","_updateSize","_updateVisibility","display","updates","mapping","attributs","properties","styles","setting","_addons","category","settings","render","getEnclosing","selector","getEnclosed","children","ArrayList","getSkin","show","hide","focus","ex","blur","enable","disable","removeClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","css","_parent","prop","throb","params","emit","type","createEvent","Emitter","call","update","target","before","after","append","detach","remove","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","widgetName","SkinDark","font","barColor","sepColor","panelColor","resizeTabColor","boxColor","textColor","iconColor","buttonColor","buttonOverColor","buttonLightColor","audioTrack","audioScrubber","audioProgress","document","body","fontFamily","color","fontSize","main"],"mappings":";;;;;;;u+BAAAA,OAAA,6BACA,yBACA,SAAAC,GACA,OAAAA,EAAAC,OAAA,qBAEAF,OAAA,iCACA,aACA,SAAAG,GAGA,SAAAC,EAAAC,EAAAC,GAEAC,KAAAF,EAAAA,GAAA,EACAE,KAAAD,EAAAA,GAAA,EAqWA,OAjWAE,OAAAC,iBAAAL,EAAAM,WAEAC,OAEAC,IAAA,WAEA,OAAAL,KAAAF,GAIAQ,IAAA,SAAAC,GAEAP,KAAAF,EAAAS,IAMAC,QAEAH,IAAA,WAEA,OAAAL,KAAAD,GAIAO,IAAA,SAAAC,GAEAP,KAAAD,EAAAQ,MAQAN,OAAAQ,OAAAZ,EAAAM,WAEAG,IAAA,SAAAR,EAAAC,GAKA,OAHAC,KAAAF,EAAAA,EACAE,KAAAD,EAAAA,EAEAC,MAIAU,UAAA,SAAAC,GAKA,OAHAX,KAAAF,EAAAa,EACAX,KAAAD,EAAAY,EAEAX,MAIAY,KAAA,SAAAd,GAIA,OAFAE,KAAAF,EAAAA,EAEAE,MA7EAa,KAAA,SAAAd,GAIA,OAFAC,KAAAD,EAAAA,EAEAC,MAKAc,MAAA,WAEA,OAAA,IAAAd,KAAAe,YAAAf,KAAAF,EAAAE,KAAAD,IAIAiB,KAAA,SAAAC,GAKA,OAHAjB,KAAAF,EAAAmB,EAAAnB,EACAE,KAAAD,EAAAkB,EAAAlB,EAEAC,MAIAkB,IAAA,SAAAD,EAAAE,GAEA,YAAAC,IAAAD,GAEAE,QAAAC,KAAA,mFACAtB,KAAAuB,WAAAN,EAAAE,KAIAnB,KAAAF,GAAAmB,EAAAnB,EACAE,KAAAD,GAAAkB,EAAAlB,EAEAC,OAIAwB,UAAA,SAAAC,GAKA,OAHAzB,KAAAF,GAAA2B,EACAzB,KAAAD,GAAA0B,EAEAzB,MAIAuB,WAAA,SAAAG,EAAAC,GAKA,OAHA3B,KAAAF,EAAA4B,EAAA5B,EAAA6B,EAAA7B,EACAE,KAAAD,EAAA2B,EAAA3B,EAAA4B,EAAA5B,EAEAC,MAIA4B,gBAAA,SAAAX,EAAAQ,GAKA,OAHAzB,KAAAF,GAAAmB,EAAAnB,EAAA2B,EACAzB,KAAAD,GAAAkB,EAAAlB,EAAA0B,EAEAzB,MAIA6B,IAAA,SAAAZ,EAAAE,GAEA,YAAAC,IAAAD,GAEAE,QAAAC,KAAA,mFACAtB,KAAA8B,WAAAb,EAAAE,KAIAnB,KAAAF,GAAAmB,EAAAnB,EACAE,KAAAD,GAAAkB,EAAAlB,EAEAC,OAIA+B,UAAA,SAAAN,GAKA,OAHAzB,KAAAF,GAAA2B,EACAzB,KAAAD,GAAA0B,EAEAzB,MAIA8B,WAAA,SAAAJ,EAAAC,GAKA,OAHA3B,KAAAF,EAAA4B,EAAA5B,EAAA6B,EAAA7B,EACAE,KAAAD,EAAA2B,EAAA3B,EAAA4B,EAAA5B,EAEAC,MAIAgC,SAAA,SAAAf,GAKA,OAHAjB,KAAAF,GAAAmB,EAAAnB,EACAE,KAAAD,GAAAkB,EAAAlB,EAEAC,MAIAiC,eAAA,SAAAtB,GAKA,OAHAX,KAAAF,GAAAa,EACAX,KAAAD,GAAAY,EAEAX,MAIAkC,OAAA,SAAAjB,GAKA,OAHAjB,KAAAF,GAAAmB,EAAAnB,EACAE,KAAAD,GAAAkB,EAAAlB,EAEAC,MAIAmC,aAAA,SAAAxB,GAEA,OAAAX,KAAAiC,eAAA,EAAAtB,IAIAyB,aAAA,SAAAC,GAEA,IAAAvC,EAAAE,KAAAF,EAAAC,EAAAC,KAAAD,EACAuC,EAAAD,EAAAE,SAKA,OAHAvC,KAAAF,EAAAwC,EAAA,GAAAxC,EAAAwC,EAAA,GAAAvC,EAAAuC,EAAA,GACAtC,KAAAD,EAAAuC,EAAA,GAAAxC,EAAAwC,EAAA,GAAAvC,EAAAuC,EAAA,GAEAtC,MAIAwC,IAAA,SAAAvB,GAKA,OAHAjB,KAAAF,EAAA2C,KAAAD,IAAAxC,KAAAF,EAAAmB,EAAAnB,GACAE,KAAAD,EAAA0C,KAAAD,IAAAxC,KAAAD,EAAAkB,EAAAlB,GAEAC,MAIA0C,IAAA,SAAAzB,GAKA,OAHAjB,KAAAF,EAAA2C,KAAAC,IAAA1C,KAAAF,EAAAmB,EAAAnB,GACAE,KAAAD,EAAA0C,KAAAC,IAAA1C,KAAAD,EAAAkB,EAAAlB,GAEAC,MAIA2C,MAAA,SAAAH,EAAAE,GAOA,OAHA1C,KAAAF,EAAA2C,KAAAC,IAAAF,EAAA1C,EAAA2C,KAAAD,IAAAE,EAAA5C,EAAAE,KAAAF,IACAE,KAAAD,EAAA0C,KAAAC,IAAAF,EAAAzC,EAAA0C,KAAAD,IAAAE,EAAA3C,EAAAC,KAAAD,IAEAC,MAIA4C,YAAA,SAAAC,EAAAC,GAKA,OAHA9C,KAAAF,EAAA2C,KAAAC,IAAAG,EAAAJ,KAAAD,IAAAM,EAAA9C,KAAAF,IACAE,KAAAD,EAAA0C,KAAAC,IAAAG,EAAAJ,KAAAD,IAAAM,EAAA9C,KAAAD,IAEAC,MAIA+C,YAAA,SAAAP,EAAAE,GAEA,IAAAM,EAAAhD,KAAAgD,SAEA,OAAAhD,KAAAmC,aAAAa,GAAA,GAAAf,eAAAQ,KAAAC,IAAAF,EAAAC,KAAAD,IAAAE,EAAAM,MAIAC,MAAA,WAKA,OAHAjD,KAAAF,EAAA2C,KAAAQ,MAAAjD,KAAAF,GACAE,KAAAD,EAAA0C,KAAAQ,MAAAjD,KAAAD,GAEAC,MAIAkD,KAAA,WAKA,OAHAlD,KAAAF,EAAA2C,KAAAS,KAAAlD,KAAAF,GACAE,KAAAD,EAAA0C,KAAAS,KAAAlD,KAAAD,GAEAC,MAIAmD,MAAA,WAKA,OAHAnD,KAAAF,EAAA2C,KAAAU,MAAAnD,KAAAF,GACAE,KAAAD,EAAA0C,KAAAU,MAAAnD,KAAAD,GAEAC,MAIAoD,YAAA,WAKA,OAHApD,KAAAF,EAAAE,KAAAF,EAAA,EAAA2C,KAAAS,KAAAlD,KAAAF,GAAA2C,KAAAQ,MAAAjD,KAAAF,GACAE,KAAAD,EAAAC,KAAAD,EAAA,EAAA0C,KAAAS,KAAAlD,KAAAD,GAAA0C,KAAAQ,MAAAjD,KAAAD,GAEAC,MAIAqD,OAAA,WAKA,OAHArD,KAAAF,GAAAE,KAAAF,EACAE,KAAAD,GAAAC,KAAAD,EAEAC,MAIAsD,IAAA,SAAArC,GAEA,OAAAjB,KAAAF,EAAAmB,EAAAnB,EAAAE,KAAAD,EAAAkB,EAAAlB,GAIAwD,MAAA,SAAAtC,GAEA,OAAAjB,KAAAF,EAAAmB,EAAAlB,EAAAC,KAAAD,EAAAkB,EAAAnB,GAIA0D,SAAA,WAEA,OAAAxD,KAAAF,EAAAE,KAAAF,EAAAE,KAAAD,EAAAC,KAAAD,GAIAiD,OAAA,WAEA,OAAAP,KAAAgB,KAAAzD,KAAAF,EAAAE,KAAAF,EAAAE,KAAAD,EAAAC,KAAAD,IAIA2D,gBAAA,WAEA,OAAAjB,KAAAkB,IAAA3D,KAAAF,GAAA2C,KAAAkB,IAAA3D,KAAAD,IAIA6D,UAAA,WAEA,OAAA5D,KAAAmC,aAAAnC,KAAAgD,UAAA,IAIAa,MAAA,WAIA,IAAAA,EAAApB,KAAAqB,OAAA9D,KAAAD,GAAAC,KAAAF,GAAA2C,KAAAsB,GAEA,OAAAF,GAIAG,WAAA,SAAA/C,GAEA,OAAAwB,KAAAgB,KAAAzD,KAAAiE,kBAAAhD,KAIAgD,kBAAA,SAAAhD,GAEA,IAAAiD,EAAAlE,KAAAF,EAAAmB,EAAAnB,EAAAqE,EAAAnE,KAAAD,EAAAkB,EAAAlB,EACA,OAAAmE,EAAAA,EAAAC,EAAAA,GAIAC,oBAAA,SAAAnD,GAEA,OAAAwB,KAAAkB,IAAA3D,KAAAF,EAAAmB,EAAAnB,GAAA2C,KAAAkB,IAAA3D,KAAAD,EAAAkB,EAAAlB,IAIAsE,UAAA,SAAArB,GAEA,OAAAhD,KAAA4D,YAAA3B,eAAAe,IAIAsB,KAAA,SAAArD,EAAAsD,GAKA,OAHAvE,KAAAF,IAAAmB,EAAAnB,EAAAE,KAAAF,GAAAyE,EACAvE,KAAAD,IAAAkB,EAAAlB,EAAAC,KAAAD,GAAAwE,EAEAvE,MAIAwE,YAAA,SAAAC,EAAAC,EAAAH,GAEA,OAAAvE,KAAA8B,WAAA4C,EAAAD,GAAAxC,eAAAsC,GAAArD,IAAAuD,IAIAE,OAAA,SAAA1D,GAEA,OAAAA,EAAAnB,IAAAE,KAAAF,GAAAmB,EAAAlB,IAAAC,KAAAD,GAIA6E,UAAA,SAAAC,EAAAC,GAOA,YALA1D,IAAA0D,IAAAA,EAAA,GAEA9E,KAAAF,EAAA+E,EAAAC,GACA9E,KAAAD,EAAA8E,EAAAC,EAAA,GAEA9E,MAIA+E,QAAA,SAAAF,EAAAC,GAQA,YANA1D,IAAAyD,IAAAA,WACAzD,IAAA0D,IAAAA,EAAA,GAEAD,EAAAC,GAAA9E,KAAAF,EACA+E,EAAAC,EAAA,GAAA9E,KAAAD,EAEA8E,GAKAG,aAAA,SAAAC,EAAApB,GAEA,IAAAqB,EAAAzC,KAAA0C,IAAAtB,GAAApC,EAAAgB,KAAA2C,IAAAvB,GAEA/D,EAAAE,KAAAF,EAAAmF,EAAAnF,EACAC,EAAAC,KAAAD,EAAAkF,EAAAlF,EAKA,OAHAC,KAAAF,EAAAA,EAAAoF,EAAAnF,EAAA0B,EAAAwD,EAAAnF,EACAE,KAAAD,EAAAD,EAAA2B,EAAA1B,EAAAmF,EAAAD,EAAAlF,EAEAC,QAOAJ,EAAAC,QAAAA,IAGAJ,OAAA,sCACA,WACA,aAIA,IAAA4F,KACAC,KAoBA,OACAC,SAlBA,SAAAC,EAAAC,GACAJ,EAAAK,KAAAD,GACAH,EAAAG,GAAAD,GAiBAnF,IAbA,SAAAoF,GACAA,IACAA,EAAAJ,EAAA,IAEA,OAAA,IAAAC,EAAAG,IAUAE,QAPA,WACA,OAAAN,EAAAO,YASAnG,OAAA,+BACA,mBACA,sBACA,wBACA,uBACA,gCACA,uBACA,oBACA,uBACA,qBACA,qBACA,oBACA,oBACA,qBACA,kBACA,uBACA,kCACA,SACA,iBACA,SAAAC,QAAAmG,MAAAC,QAAAC,OAAAlG,QAAAmG,QAAAC,MAAAC,QAAAC,MAAAC,MAAAC,KAAAC,KAAAC,EAAAC,GAAAC,QAAAC,QAAAC,KAAAC,aAIA,IAAAC,OAAAJ,QAAAK,OAAAC,SACAC,UAAA,SAEAC,WAAA,SAAAC,EAAAC,EAAAC,IACAF,GAAAA,aAAAL,SACAO,EAAAD,EACAA,EAAAD,EACAA,EAAA,MAEArB,MAAAwB,WAAAF,GACAC,EAAApH,KAAAsH,OAAAH,EAAAC,IAEAA,EAAAD,EACAA,EAAA,MAEAtB,MAAA0B,SAAAH,KACAA,GACAI,QAAAJ,IAGApH,KAAAyH,UAAAN,EAAAC,GAEAD,EAIAnH,KAAA0H,MAAA1H,KAAAsG,KAAAtG,KAAA2H,OAHA3H,KAAA0H,MAAA1H,KAAA4H,UACA5H,KAAA2H,KAAA3H,KAAA0H,MAAAP,OAKAlH,OAAA4H,eAAA7H,KAAA,SACAO,MAAAP,KAAAoH,QAAAU,OAAA,IAAApB,UASA1G,KAAA+H,SAAA,EAQA/H,KAAAgI,KAAA,IAAAnI,QAAA,EAAA,GAQAG,KAAAiI,SAAA,IAAApI,QAAA,EAAA,GAQAG,KAAAkI,MAAArB,OAAAsB,SAGAnI,KAAAoI,QAEA,IAAAC,EAAArI,KAAAoH,QAAAkB,OACA,GAAAD,EAAA,CACA,IAAAE,EAAAvI,KAAAe,YACAuH,EAAAC,EAAAD,OACA,IAAA,IAAAE,KAAAH,EACA,IAAA,IAAAI,EAAA,EAAAA,EAAAJ,EAAAG,GAAAxF,OAAAyF,IAAA,CACA,IAAAC,EAAAL,EAAAG,GAAAC,GACA,GAAA5C,MAAA0B,SAAAmB,GAAA,CACA,IAAAC,EAAAD,EACAE,EAAAN,EAAAE,GAAAG,GACAE,EAAAD,EAAAE,KAAAF,EAAAE,KAAAF,EAEA5I,KAAA+I,MAAAF,EAAAD,EAAAxB,WAQAF,GACAlH,KAAAkH,OAAAA,IAcAI,OAAA,SAAAH,IAAAC,SACA,IAAA4B,YAAA/C,MAAAgD,KAAA9B,IAAA,WACA,GAAA6B,YAAA,CAEA,IAAAE,SAAAC,KAAA,KAAAH,YAAA,MACA5B,QAAAtB,QAAAsD,MAAAF,SAAA9B,SAEA,OAAAA,aAQAQ,QAAA,WACA,IAAAyB,EAAArJ,KAAAoH,QAAAiC,SACA,GAAAA,EACA,OAAArJ,KAAAsG,KAAA+C,GAEA,IAAA7B,EAAAxH,KAAAoH,QAAAI,QACA,GAAAA,EACA,OAAAxH,KAAAsG,KAAAH,MAAAmD,cAAA9B,GACA+B,OACAtB,SAAA,WACAuB,SAAA,aAIA,MAAA,IAAAC,MAAA,uDAWArB,MAAA,WACA,IAAAsB,EAAA1J,KACAA,KAAA2J,aACA3J,KAAA0H,MAAAkC,SAAA5J,KAAA2J,aAEA3J,KAAA8H,MAAA+B,GAAA,UAAA,SAAAvH,EAAAwH,GACAJ,EAAAK,SAAAD,EAAAb,SAUAe,SAAA,aASAC,gBAAA,SAAAC,QACA9I,IAAA8I,IACAlK,KAAAkI,MAAAgC,GAGAlK,KAAAkI,QAAArB,OAAAsB,UAAAnI,KAAAkI,QAAArB,OAAAsD,UACAnK,KAAA2H,KAAA4B,MAAAa,IAAApK,KAAAiI,SAAAlI,EAAA,KAEAC,KAAA2H,KAAA4B,MAAAc,OAAArK,KAAAiI,SAAAlI,EAAA,KAGAC,KAAAkI,QAAArB,OAAAsB,UAAAnI,KAAAkI,QAAArB,OAAAyD,YACAtK,KAAA2H,KAAA4B,MAAAgB,KAAAvK,KAAAiI,SAAAnI,EAAA,KAEAE,KAAA2H,KAAA4B,MAAAiB,MAAAxK,KAAAiI,SAAAnI,EAAA,MASA2K,YAAA,WACAzK,KAAA2H,KAAA4B,MAAAnJ,MAAAJ,KAAAgI,KAAAlI,EAAA,KACAE,KAAA2H,KAAA4B,MAAA/I,OAAAR,KAAAgI,KAAAjI,EAAA,MAQA2K,kBAAA,WACA1K,KAAA2H,KAAA4B,MAAAoB,QAAA3K,KAAA+H,QAAA,QAAA,QASAgC,SAAA,SAAAa,KA4BAC,SACA9E,UAMA+E,aAIAC,cAIAC,WAKAjC,MAAA,SAAAD,EAAAmC,GACA,IAAAzC,EAAAM,EAAAN,aACAG,EAAAG,EAAAH,UAEA3I,KAAAkL,QAAAlL,KAAAsI,WACA,IAAA6C,EAAAnL,KAAAkL,QAAA1C,GAAAxI,KAAAkL,QAAA1C,OAEA,OADA2C,EAAAxC,GAAA,IAAAG,EAAA9I,KAAAiL,GACAjL,MAGAsI,OAAA,SAAAE,EAAA4C,GACApL,KAAAkL,QAAAlL,KAAAsI,WACA,IAAA6C,EAAAnL,KAAAkL,QAAA1C,GAAAxI,KAAAkL,QAAA1C,OAEA,QAAApH,GAAAgK,EACA,OAAAtF,QAAAhF,MAAAqK,GAAA,MAEArF,QAAAsD,MAAA+B,EAAAC,IAWAC,OAAA,WACA,OAAArL,KAAA2H,MAWA2D,aAAA,SAAAC,GACA,OAAA,MASAC,YAAA,WAGA,OADAC,SAAA,IAAAC,UACAD,UAIAE,QAAA,WACA,OAAA/E,YAAAvG,OAUAuL,KAAA,WACA5L,KAAA0H,MAAAkE,QASAC,KAAA,WACA7L,KAAA0H,MAAAmE,QASAC,MAAA,WACA,IACA9L,KAAA0H,MAAAoE,QACA,MAAAC,IAIA,OAAA/L,MASAgM,KAAA,WAGA,OAFAhM,KAAA0H,MAAAsE,OAEAhM,MAGAiM,OAAA,WAEA,OADAjM,KAAA8H,MAAAxH,IAAA,YAAA,GACAN,MAGAkM,QAAA,WAEA,OADAlM,KAAA8H,MAAAxH,IAAA,YAAA,GACAN,MAUA4J,SAAA,SAAAnE,GAEA,OADAzF,KAAA0H,MAAAkC,SAAAnE,GACAzF,MASAmM,YAAA,SAAA1G,GAEA,OADAzF,KAAA0H,MAAAyE,YAAA1G,GACAzF,MAWAoM,KAAA,SAAA3G,EAAAlF,GACA,MAAAmJ,EAAA1J,KAAAmH,EAAAuC,EAAA2C,MAAA3C,EAAA4C,YAEA,YAAA,IAAA/L,EACAmJ,EAAA6C,MAAA9G,IAGAiE,EAAA6C,MAAA9G,GAAAlF,EAEAmJ,EAAA5B,MAAAzH,IAAA,aACA8G,EAAAqF,aAAA,SAAA/G,EAAAA,EAAA,QAAAA,EAAAlF,GAGAmJ,IAGA+C,KAAA,SAAAhH,EAAAlF,GACA,IAAAmM,EAAA1M,KAAA0H,MACAiF,EAAAD,EAAAD,KAAAhH,EAAAlF,GACA,OAAAoM,GAAAD,EAAA1M,KAAA2M,GAUA1H,OAAA,WACAjF,KAAAiI,SAAA3H,KAAAN,KAAAkH,OAAAc,KAAAlI,EAAAE,KAAAgI,KAAAlI,GAAA,GAAAE,KAAAkH,OAAAc,KAAAjI,EAAAC,KAAAgI,KAAAjI,GAAA,IAGA6M,IAAA,SAAAnH,EAAAlF,GACA,IAAAmM,EAAA1M,KAAA0H,MACAiF,EAAAD,EAAAE,IAAAnH,EAAAlF,GACA,OAAAoM,GAAAD,EAAA1M,KAAA2M,GAGA1D,KAAA,SAAAxD,EAAAlF,GACA,IAAAmM,EAAA1M,KAAA0H,MACAiF,EAAAD,EAAAzD,KAAAxD,EAAAlF,GACA,OAAAoM,GAAAD,EAAA1M,KAAA2M,GAGAzF,OAAA,SAAAA,GACA,IAAAA,EAIA,OAAAlH,KAAA6M,QAHA7M,KAAA6M,QAAA3F,EACAlH,KAAAL,OAAAuH,EAAAS,OAMAmF,KAAA,SAAArH,EAAAlF,GACA,IAAAmM,EAAA1M,KAAA0H,MACAiF,EAAAD,EAAAI,KAAArH,EAAAlF,GACA,OAAAoM,GAAAD,EAAA1M,KAAA2M,GAGAI,MAAA,SAAAC,GACA,OAAAxG,GAAAuG,MAAA/M,KAAA2H,KAAAqF,IAGAC,KAAA,SAAAC,EAAAF,GACA,IAAA1K,EAAAyD,OAAAoH,YAAAD,GACAjE,KAAA+D,IAEA,OAAAjH,OAAAqH,QAAAjN,UAAA8M,KAAAI,KAAArN,KAAAsC,EAAA0K,IAYAM,OAAA,WACAtN,KAAA0K,oBAEA1K,KAAA+H,UACA/H,KAAAyK,cACAzK,KAAAiK,oBAWAtK,OAAA,SAAA4N,EAAAtF,GACA,IAAAd,EAAAoG,EACAtF,GAAA,SAAAA,EAEA,UAAAA,EACA9B,MAAAqH,OAAArG,EAAAnH,KAAA2H,MACA,SAAAM,GACA9B,MAAAsH,MAAAtG,EAAAnH,KAAA2H,MAJAxB,MAAAuH,OAAAvG,EAAAnH,KAAA2H,MAMA3H,KAAAgK,YASA2D,OAAA,WACA3N,KAAA0H,MAAAkG,YA2FA,OAhFA/G,OAAAsB,SAAA,EASAtB,OAAAsD,UAAA,EASAtD,OAAAyD,YAAA,EASAzD,OAAAgH,aAAA,EAEAhH,OAAAE,QAAA,SAAA+G,GACA,IAAAhF,EAAArC,QAAAK,OAAAC,QAAAgH,MAAA/N,KAAAgO,WAEA,SAAAC,EAAAxI,GACAqD,EAAA3I,UAAAsF,GAAA,SAAAlF,GACA,YAAAa,IAAAb,GACAP,KAAA8H,MAAAxH,IAAAmF,EAAAlF,GACAP,MAEAA,KAAA8H,MAAAzH,IAAAoF,IAIA,GAAAqI,EAAAhG,MACA,IAAA,IAAArC,KAAAqI,EAAAhG,MACAmG,EAAAxI,GAOA,OAHAqI,EAAAI,YACAzH,QAAAlB,SAAAuD,EAAAgF,EAAAI,YAEApF,GAGAjC,OAAAtB,SAAA,SAAAuD,EAAAqF,GACA,IAAAL,EAAAhF,EAAA3I,UACA+N,EAAAC,GAAAL,EAAAI,WAEA,SAAAD,EAAAxI,GACAqD,EAAA3I,UAAAsF,GAAA,SAAAlF,GACA,YAAAa,IAAAb,GACAP,KAAA8H,MAAAxH,IAAAmF,EAAAlF,GACAP,MAEAA,KAAA8H,MAAAzH,IAAAoF,IAIA,GAAAqI,EAAAhG,MACA,IAAA,IAAArC,KAAAqI,EAAAhG,MACAmG,EAAAxI,GAOA,OAHAyI,GACAzH,QAAAlB,SAAAuD,EAAAoF,GAEApF,GAGAnC,KAAAE,OAAAA,SAGApH,OAAA,iCACA,iBACA,SAAAmH,GACA,aAEA,SAAAwH,IACApO,KAAAqO,KAAA,QAGArO,KAAAsO,SAAA,UACAtO,KAAAuO,SAAA,UACAvO,KAAAwO,WAAA,UACAxO,KAAAyO,eAAA,UACAzO,KAAA0O,SAAA,UACA1O,KAAA2O,UAAA,UACA3O,KAAA4O,UAAA,UAGA5O,KAAA6O,YAAA,UACA7O,KAAA8O,gBAAA,UACA9O,KAAA+O,iBAAA,UAGA/O,KAAAgP,WAAA,UACAhP,KAAAiP,cAAA,UACAjP,KAAAkP,cAAA,UAGAC,SAAAC,KAAA7F,MAAA8F,WAAArP,KAAAqO,KACAc,SAAAC,KAAA7F,MAAA+F,MAAAtP,KAAA2O,UACAQ,SAAAC,KAAA7F,MAAAgG,SAAA,OAKA,OAFA3I,EAAArB,SAAA6I,EAAA,QAEAA,IAGA3O,OAAA,6BACA,SACA,WACA,gBACA,cACA,SAAAkH,GACA,OAAAA,IAEAlH,OAAA,wBAAA,6BAAA,SAAA+P,GAAA,OAAAA","file":"../skylark-widgets-base.js","sourcesContent":["define('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx-numbers/Vector2',[\r\n\t\"./numbers\"\r\n] ,function(numbers) {\r\n\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numbers.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-widgets-base/SkinManager',[\n],function(){\t\n\t\"use strict\";\n\n\tfunction SkinManager(){}\n\n\tvar list = [],\n\t\tskins = [];\n\n\t//Add skin to list\n\tfunction register(skin, name) {\n\t\tlist.push(name);\n\t\tskins[name] = skin;\n\t}\n\n\t//Get a skin instance\n\tfunction get(name) {\n\t\tif (!name) {\n\t\t\tname = list[0];\n\t\t}\n\t\treturn new skins[name]();\n\t};\n\n\tfunction getList() {\n\t\treturn list.slice();\n\t}\n\n\treturn {\n\t\tregister,\n\t\tget,\n\t\tgetList\n\t};\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numbers/Vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\",\r\n  \"./SkinManager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Position of this component relatively to its parent in px.\r\n         *\r\n         * @attribute position\r\n         * @type {Vector2}\r\n         */\r\n        this.position = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Positioning mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (parent) {\r\n          this.parent(parent);\r\n        }\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Update the position of this widget.\r\n     * \r\n     * @method updatePosition\r\n     */\r\n    _updatePosition : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.position.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.position.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.position.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.position.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    _updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    _updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this Element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this Element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    /**\r\n     * Calculate the position of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.position.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    parent : function(parent) {\r\n      if (parent) {\r\n        this._parent = parent;\r\n        this.attach(parent._elm);\r\n      } else {\r\n        return this._parent;\r\n      }\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or position.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updatePosition (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this._updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this._updateSize();\r\n        this._updatePosition();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Top-left positioning.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right positioning.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left positioning.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right positioning.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/SkinDark',[\r\n\t\"./SkinManager\"\r\n],function(SkinManager){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinDark() {\r\n\t\tthis.font = \"Arial\";\r\n\r\n\t\t//Color\r\n\t\tthis.barColor = \"#222222\";\r\n\t\tthis.sepColor = \"#292929\";\r\n\t\tthis.panelColor = \"#333333\";\r\n\t\tthis.resizeTabColor = \"#222222\";\r\n\t\tthis.boxColor = \"#444444\";\r\n\t\tthis.textColor = \"#FFFFFF\";\r\n\t\tthis.iconColor = \"#FFFFFF\";\r\n\r\n\t\t//Button\r\n\t\tthis.buttonColor = \"#222222\";\r\n\t\tthis.buttonOverColor = \"#555555\";\r\n\t\tthis.buttonLightColor = \"#333333\";\r\n\t\t\r\n\t\t//Audio player\r\n\t\tthis.audioTrack = \"#222222\";\r\n\t\tthis.audioScrubber = \"#FFFFFF\";\r\n\t\tthis.audioProgress = \"#555555\";\r\n\r\n\t\t//Body\r\n\t\tdocument.body.style.fontFamily = this.font;\r\n\t\tdocument.body.style.color = this.textColor;\r\n\t\tdocument.body.style.fontSize = \"12px\";\r\n\t}\r\n\r\n\tSkinManager.register(SkinDark, \"dark\");\r\n\r\n\treturn SkinDark;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Widget\",\r\n\t\"./SkinManager\",\r\n\t\"./SkinDark\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}