{"version":3,"sources":["skylark-widgets-base.js"],"names":["define","skylark","attach","list","skins","register","skin","name","push","get","getList","slice","types","objects","events","Vector2","browser","datax","eventer","noder","files","geom","elmx","$","fx","plugins","HashMap","base","SkinManager","Widget","Plugin","inherit","klassName","_construct","parent","elm","options","isHtmlNode","this","_parse","isString","tagName","overrided","_velm","_elm","_create","Object","defineProperty","value","state","visible","size","location","_mode","TOP_LEFT","_init","addonCategoryOptions","addons","widgetCtor","constructor","categoryName","i","length","addonOption","addonName","addonSetting","addonCtor","ctor","addon","optionsAttr","data","options1","eval","mixin","template","createElement","style","position","overflow","Error","self","widgetClass","addClass","on","e","args","_refresh","_startup","_updateLocation","mode","undefined","TOP_RIGHT","top","y","bottom","BOTTOM_LEFT","left","x","right","updateSize","width","height","updateVisibility","display","updates","mapping","attributs","properties","styles","setting","_addons","category","settings","clone","render","getEnclosing","selector","getEnclosed","children","ArrayList","getSkin","show","hide","focus","ex","blur","enable","set","disable","removeClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","getAttr","setAttr","center","css","getStyle","setStyle","getData","setData","_parent","getParent","setParent","prop","getProp","setProp","throb","params","emit","type","createEvent","Emitter","prototype","call","update","_updateVisibility","_updateSize","target","before","after","append","detach","remove","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","widgetName","SkinDark","font","barColor","sepColor","panelColor","resizeTabColor","boxColor","textColor","iconColor","buttonColor","buttonOverColor","buttonLightColor","audioTrack","audioScrubber","audioProgress","document","body","fontFamily","color","fontSize","main"],"mappings":"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","file":"../skylark-widgets-base.js","sourcesContent":["define('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/SkinManager',[\n],function(){\t\n\t\"use strict\";\n\n\tfunction SkinManager(){}\n\n\tvar list = [],\n\t\tskins = [];\n\n\t//Add skin to list\n\tfunction register(skin, name) {\n\t\tlist.push(name);\n\t\tskins[name] = skin;\n\t}\n\n\t//Get a skin instance\n\tfunction get(name) {\n\t\tif (!name) {\n\t\t\tname = list[0];\n\t\t}\n\t\treturn new skins[name]();\n\t};\n\n\tfunction getList() {\n\t\treturn list.slice();\n\t}\n\n\treturn {\n\t\tregister,\n\t\tget,\n\t\tgetList\n\t};\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numerics/Vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\",\r\n  \"./SkinManager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Location of this component relatively to its parent in px.\r\n         *\r\n         * @attribute location\r\n         * @type {Vector2}\r\n         */\r\n        this.location = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Locationing mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (parent) {\r\n          this.parent(parent);\r\n        }\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Update the location of this widget.\r\n     * \r\n     * @method updateLocation\r\n     */\r\n    _updateLocation : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.location.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.location.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.location.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.location.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this Element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this Element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getAttr : function(name) {\r\n      return this._velm.attr(name);\r\n    },\r\n\r\n    setAttr : function(name,value) {\r\n      this._velm.attr(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * Calculate the location of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.location.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getStyle : function(name) {\r\n      return this._velm.css(name);\r\n    },\r\n\r\n    setStyle : function(name,value) {\r\n      this._velm.css(name,value);\r\n      return this;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n\r\n    getData : function(name) {\r\n      return this._velm.data(name);\r\n    },\r\n\r\n    setData : function(name,value) {\r\n      this._velm.data(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    parent : function(parent) {\r\n      if (parent) {\r\n        this._parent = parent;\r\n        this.attach(parent._elm);\r\n      } else {\r\n        return this._parent;\r\n      }\r\n    },\r\n\r\n    getParent : function() {\r\n      return this._parent;\r\n    },\r\n\r\n    setParent : function(parent) {\r\n      this._parent = parent;\r\n      this.attach(parent._elm);\r\n      return this;\r\n    },\r\n\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getProp : function(name) {\r\n      return this._velm.prop(name);\r\n    },\r\n\r\n    setProp : function(name,value) {\r\n      this._velm.prop(name,value);\r\n      return this;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or location.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updateLocation (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this._updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this._updateSize();\r\n        this._updateLocation();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Top-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/SkinDark',[\r\n\t\"./SkinManager\"\r\n],function(SkinManager){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinDark() {\r\n\t\tthis.font = \"Arial\";\r\n\r\n\t\t//Color\r\n\t\tthis.barColor = \"#222222\";\r\n\t\tthis.sepColor = \"#292929\";\r\n\t\tthis.panelColor = \"#333333\";\r\n\t\tthis.resizeTabColor = \"#222222\";\r\n\t\tthis.boxColor = \"#444444\";\r\n\t\tthis.textColor = \"#FFFFFF\";\r\n\t\tthis.iconColor = \"#FFFFFF\";\r\n\r\n\t\t//Button\r\n\t\tthis.buttonColor = \"#222222\";\r\n\t\tthis.buttonOverColor = \"#555555\";\r\n\t\tthis.buttonLightColor = \"#333333\";\r\n\t\t\r\n\t\t//Audio player\r\n\t\tthis.audioTrack = \"#222222\";\r\n\t\tthis.audioScrubber = \"#FFFFFF\";\r\n\t\tthis.audioProgress = \"#555555\";\r\n\r\n\t\t//Body\r\n\t\tdocument.body.style.fontFamily = this.font;\r\n\t\tdocument.body.style.color = this.textColor;\r\n\t\tdocument.body.style.fontSize = \"12px\";\r\n\t}\r\n\r\n\tSkinManager.register(SkinDark, \"dark\");\r\n\r\n\treturn SkinDark;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Widget\",\r\n\t\"./SkinManager\",\r\n\t\"./SkinDark\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}