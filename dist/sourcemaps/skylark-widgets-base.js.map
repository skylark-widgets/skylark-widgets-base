{"version":3,"sources":["skylark-widgets-base.js"],"names":["define","skylark","attach","Evented","base","ActionManager","inherit","klassName","addAction","category","name","fn","options","executeAction","removeAction","objects","HashMap","ActiionManager","Action","text","tooltip","icon","shortcut","state","get","this","_state","checked","disabled","_construct","mixin","_init","execute","params","_execute","trigger","numbers","Vector2","x","y","Object","defineProperties","prototype","width","set","value","height","assign","setScalar","scalar","setX","setY","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","rotateAround","center","c","cos","sin","list","skins","register","skin","push","getList","slice","types","events","browser","datax","eventer","noder","files","geom","elmx","$","fx","plugins","SkinManager","Widget","Plugin","parent","elm","isHtmlNode","_parse","isString","tagName","overrided","_velm","_elm","_create","defineProperty","visible","size","position","_mode","TOP_LEFT","addonCategoryOptions","addons","widgetCtor","categoryName","i","addonOption","addonName","addonSetting","addonCtor","ctor","addon","optionsAttr","data","options1","eval","template","createElement","style","overflow","Error","self","widgetClass","addClass","on","args","_refresh","_startup","_updatePosition","mode","TOP_RIGHT","top","bottom","BOTTOM_LEFT","left","right","_updateSize","_updateVisibility","display","updates","mapping","attributs","properties","styles","setting","_addons","settings","render","getEnclosing","selector","getEnclosed","children","ArrayList","getSkin","show","hide","focus","ex","blur","enable","disable","removeClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","css","_parent","prop","throb","emit","type","createEvent","Emitter","call","update","target","before","after","append","detach","remove","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","widgetName","SkinDark","font","barColor","sepColor","panelColor","resizeTabColor","boxColor","textColor","iconColor","buttonColor","buttonOverColor","buttonLightColor","audioTrack","audioScrubber","audioProgress","document","body","fontFamily","color","fontSize","main"],"mappings":"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","file":"../skylark-widgets-base.js","sourcesContent":["define('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"./base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx-numbers/Vector2',[\r\n\t\"./numbers\"\r\n] ,function(numbers) {\r\n\r\n\r\n\tfunction Vector2( x, y ) {\r\n\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\r\n\t}\r\n\r\n\tObject.defineProperties( Vector2.prototype, {\r\n\r\n\t\t\"width\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.x = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\"height\": {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.y = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Vector2.prototype, {\r\n\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x = scalar;\r\n\t\t\tthis.y = scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetX: function ( x ) {\r\n\r\n\t\t\tthis.x = x;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetY: function ( y ) {\r\n\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( v ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tadd: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScalar: function ( s ) {\r\n\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\taddScaledVector: function ( v, s ) {\r\n\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsub: function ( v, w ) {\r\n\r\n\t\t\tif ( w !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubScalar: function ( s ) {\r\n\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsubVectors: function ( a, b ) {\r\n\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( v ) {\r\n\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivide: function ( v ) {\r\n\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdivideScalar: function ( scalar ) {\r\n\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t\t},\r\n\r\n\t\tapplyMatrix3: function ( m ) {\r\n\r\n\t\t\tvar x = this.x, y = this.y;\r\n\t\t\tvar e = m.elements;\r\n\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmin: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmax: function ( v ) {\r\n\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclamp: function ( min, max ) {\r\n\r\n\t\t\t// assumes min < max, componentwise\r\n\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampScalar: function ( minVal, maxVal ) {\r\n\r\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclampLength: function ( min, max ) {\r\n\r\n\t\t\tvar length = this.length();\r\n\r\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n\r\n\t\t},\r\n\r\n\t\tfloor: function () {\r\n\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tceil: function () {\r\n\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tround: function () {\r\n\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\troundToZero: function () {\r\n\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tnegate: function () {\r\n\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t\t},\r\n\r\n\t\tcross: function ( v ) {\r\n\r\n\t\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanLength: function () {\r\n\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t\t},\r\n\r\n\t\tangle: function () {\r\n\r\n\t\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\t\treturn angle;\r\n\r\n\t\t},\r\n\r\n\t\tdistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t\t},\r\n\r\n\t\tdistanceToSquared: function ( v ) {\r\n\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\r\n\t\t},\r\n\r\n\t\tmanhattanDistanceTo: function ( v ) {\r\n\r\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetLength: function ( length ) {\r\n\r\n\t\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t\t},\r\n\r\n\t\tlerp: function ( v, alpha ) {\r\n\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( v ) {\r\n\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\r\n\t\trotateAround: function ( center, angle ) {\r\n\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numbers.Vector2 = Vector2 ;\r\n});\r\n\ndefine('skylark-widgets-base/SkinManager',[\n],function(){\t\n\t\"use strict\";\n\n\tfunction SkinManager(){}\n\n\tvar list = [],\n\t\tskins = [];\n\n\t//Add skin to list\n\tfunction register(skin, name) {\n\t\tlist.push(name);\n\t\tskins[name] = skin;\n\t}\n\n\t//Get a skin instance\n\tfunction get(name) {\n\t\tif (!name) {\n\t\t\tname = list[0];\n\t\t}\n\t\treturn new skins[name]();\n\t};\n\n\tfunction getList() {\n\t\treturn list.slice();\n\t}\n\n\treturn {\n\t\tregister,\n\t\tget,\n\t\tgetList\n\t};\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numbers/Vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\",\r\n  \"./SkinManager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Position of this component relatively to its parent in px.\r\n         *\r\n         * @attribute position\r\n         * @type {Vector2}\r\n         */\r\n        this.position = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Positioning mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (parent) {\r\n          this.parent(parent);\r\n        }\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Update the position of this widget.\r\n     * \r\n     * @method updatePosition\r\n     */\r\n    _updatePosition : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.position.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.position.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.position.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.position.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    _updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    _updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this Element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this Element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    /**\r\n     * Calculate the position of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.position.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    parent : function(parent) {\r\n      if (parent) {\r\n        this._parent = parent;\r\n        this.attach(parent._elm);\r\n      } else {\r\n        return this._parent;\r\n      }\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or position.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updatePosition (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this._updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this._updateSize();\r\n        this._updatePosition();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Top-left positioning.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right positioning.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left positioning.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right positioning.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/SkinDark',[\r\n\t\"./SkinManager\"\r\n],function(SkinManager){\t\r\n\t\"use strict\";\r\n\r\n\tfunction SkinDark() {\r\n\t\tthis.font = \"Arial\";\r\n\r\n\t\t//Color\r\n\t\tthis.barColor = \"#222222\";\r\n\t\tthis.sepColor = \"#292929\";\r\n\t\tthis.panelColor = \"#333333\";\r\n\t\tthis.resizeTabColor = \"#222222\";\r\n\t\tthis.boxColor = \"#444444\";\r\n\t\tthis.textColor = \"#FFFFFF\";\r\n\t\tthis.iconColor = \"#FFFFFF\";\r\n\r\n\t\t//Button\r\n\t\tthis.buttonColor = \"#222222\";\r\n\t\tthis.buttonOverColor = \"#555555\";\r\n\t\tthis.buttonLightColor = \"#333333\";\r\n\t\t\r\n\t\t//Audio player\r\n\t\tthis.audioTrack = \"#222222\";\r\n\t\tthis.audioScrubber = \"#FFFFFF\";\r\n\t\tthis.audioProgress = \"#555555\";\r\n\r\n\t\t//Body\r\n\t\tdocument.body.style.fontFamily = this.font;\r\n\t\tdocument.body.style.color = this.textColor;\r\n\t\tdocument.body.style.fontSize = \"12px\";\r\n\t}\r\n\r\n\tSkinManager.register(SkinDark, \"dark\");\r\n\r\n\treturn SkinDark;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Action\",\r\n\t\"./ActionManager\",\r\n\t\"./Widget\",\r\n\t\"./SkinManager\",\r\n\t\"./SkinDark\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}